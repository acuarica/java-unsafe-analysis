{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":6060163,
    "title":"memcpy function in C++ to Java equivalent",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":7017331,
        "postId":6060163,
        "creationDate":"2011-05-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":316238,
          "displayName":"eee",
          "reputation":844
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"As an alternative, you can use `JNI` or `JNA` approach to interface between C/C++ code and Java"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu7017331]-[1858674074]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"As an alternative, you can use `JNI` or `JNA` approach to interface between C/C++ code and Java"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jna":1,
                      "altern":1,
                      "code":1,
                      "jni":1,
                      "approach":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":7014708,
        "postId":6060163,
        "creationDate":"2011-05-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":651362,
          "displayName":"JavaBits",
          "reputation":648
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"this can be done in c++ through pointers but in java how to approach?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu7014708]-[-473517970]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"this can be done in c++ through pointers but in java how to approach?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "approach":1,
                      "pointer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":7014830,
        "postId":6060163,
        "creationDate":"2011-05-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":259889,
          "displayName":"Sid",
          "reputation":1679
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"[This](http://stackoverflow.com/questions/665860/deep-clone-utility-recomendation) might help you."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu7014830]-[-440935864]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"[This](http://stackoverflow.com/questions/665860/deep-clone-utility-recomendation) might help you."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "util":1,
                      "recomend":1,
                      "stackoverflow":1,
                      "deep":1,
                      "clone":1,
                      "http":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":7014845,
        "postId":6060163,
        "creationDate":"2011-05-19",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":113662,
          "displayName":"Tadeusz Kopec",
          "reputation":7923
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Copying object's memory is **NOT** creating another instance of object."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu7014845]-[-124697165]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Copying object's memory is **NOT** creating another instance of object."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "object":2,
                      "creat":1,
                      "copi":1,
                      "instanc":1,
                      "memori":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":7015076,
        "postId":6060163,
        "creationDate":"2011-05-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":651362,
          "displayName":"JavaBits",
          "reputation":648
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"By instance I meant to say a temporary holding structure."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu7015076]-[1438394582]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"By instance I meant to say a temporary holding structure."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "structur":1,
                      "meant":1,
                      "hold":1,
                      "temporari":1,
                      "instanc":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9344892,
        "postId":6060163,
        "creationDate":"2011-10-07",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":545127,
          "displayName":"Raedwald",
          "reputation":11028
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"It might be better to focus on what you are trying to achieve (create a copy of some data) rather than the mechanism you are used to using in C++ (`memcpy()`). It seems you want to create a copy of an existing object. The correct way to do this in C++ and Java is with a copy constructor."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu9344892]-[683653475]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"It might be better to focus on what you are trying to achieve (create a copy of some data) rather than the mechanism you are used to using in C++ (`memcpy()`). It seems you want to create a copy of an existing object. The correct way to do this in C++ and Java is with a copy constructor."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "exist":1,
                      "correct":1,
                      "data":1,
                      "constructor":1,
                      "memcpi":1,
                      "object":1,
                      "achiev":1,
                      "focus":1,
                      "mechan":1,
                      "creat":2,
                      "copi":3
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":29243019,
        "postId":6060163,
        "creationDate":"2013-10-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1112354,
          "displayName":"elimirks",
          "reputation":1054
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Side note: It is probably better to use std::copy if you are using C++ as opposed to C. http://stackoverflow.com/questions/4707012/c-memcpy-vs-stdcopy"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6060163-cu29243019]-[442566842]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Side note: It is probably better to use std::copy if you are using C++ as opposed to C. http://stackoverflow.com/questions/4707012/c-memcpy-vs-stdcopy"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "side":1,
                      "question":1,
                      "memcpi":1,
                      "std":1,
                      "stdcopi":1,
                      "stackoverflow":1,
                      "oppos":1,
                      "note":1,
                      "http":1,
                      "copi":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "c++"
    ],
    "creationDate":"2011-05-19",
    "lastActivityDate":"2013-10-30",
    "lastEditDate":"2011-05-19",
    "score":5,
    "viewCount":2357,
    "owner":{
      "type":"StackOverflowUser",
      "id":651362,
      "displayName":"JavaBits",
      "reputation":648
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have in C++</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[-964655616]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have in C++</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"memcpy (&amp;wkpm, (PMSK *)pr_masks + (long)(x - 1), sizeof(PMSK)); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[6060163]-[1806994845]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"memcpy (&wkpm, (PMSK *)"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"pr_masks",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" + (long)(x - 1), sizeof(PMSK)); "
                }
              ]
            },
            "rawText":"memcpy (&wkpm, (PMSK *)pr_masks + (long)(x - 1), sizeof(PMSK)); ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "wkpm":1,
                  "mask":1,
                  "memcpi":1,
                  "pmsk":2,
                  "sizeof":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>where <code>PMSK</code> is a struct. It will be a class in Java.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[1074650544]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>where <code>PMSK</code> is a struct. It will be a class in Java.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"in",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "struct":1,
                  "pmsk":1,
                  "code":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Now assuming that here I am copying the whole chunk of memory into pr_masks i.e creating an additional instance of the <code>PMSK</code> class. How to do this in Java.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[536544547]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Now assuming that here I am copying the whole chunk of memory into pr_masks i.e creating an additional instance of the <code>PMSK</code> class. How to do this in Java.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"pr_masks",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "assum":1,
                  "chunk":1,
                  "mask":1,
                  "addit":1,
                  "code":2,
                  "pmsk":1,
                  "creat":1,
                  "copi":1,
                  "instanc":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Example: In a java code at line 20 I want capture the class instance and then again use that same instance in line 100. In between there may be many modifications. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[317639260]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Example: In a java code at line 20 I want capture the class instance and then again use that same instance in line 100. In between there may be many modifications. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"instance",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "line":2,
                  "modif":1,
                  "code":1,
                  "captur":1,
                  "instanc":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Hope I am clear with my question.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[114211545]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Hope I am clear with my question.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "question":1,
                  "clear":1,
                  "hope":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Thanks </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6060163]-[-231005682]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Thanks </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":6060189,
      "questionId":6060163,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":7014781,
          "postId":6060189,
          "creationDate":"2011-05-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":162684,
            "displayName":"MarcoS",
            "reputation":7913
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"-1 for having recommended `clone()`, which is often a good idea to [avoid](http://www.javapractices.com/topic/TopicAction.do?Id=71)!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7014781]-[-521408201]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"-1 for having recommended `clone()`, which is often a good idea to [avoid](http://www.javapractices.com/topic/TopicAction.do?Id=71)!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"TopicAction",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "recommend":1,
                        "good":1,
                        "javapractic":1,
                        "idea":1,
                        "avoid":1,
                        "clone":1,
                        "topic":2,
                        "http":1,
                        "action":1,
                        "www":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"TopicAction",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7029540,
          "postId":6060189,
          "creationDate":"2011-05-20",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":162684,
            "displayName":"MarcoS",
            "reputation":7913
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Angel O'Sphere: I decided to avoid using clone after reading [Josh Bloch book &quot;Effective Java&quot;](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683). Some hints are also [here](http://www.artima.com/intv/bloch13.html)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7029540]-[1715174554]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Angel O'Sphere: I decided to avoid using clone after reading [Josh Bloch book &quot;Effective Java&quot;](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683). Some hints are also [here](http://www.artima.com/intv/bloch13.html)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Angel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "decid":1,
                        "amazon":1,
                        "artima":1,
                        "intv":1,
                        "angel":1,
                        "book":1,
                        "effect":2,
                        "sphere":1,
                        "avoid":1,
                        "clone":1,
                        "hint":1,
                        "quot":2,
                        "josh":1,
                        "html":1,
                        "joshua":1,
                        "http":2,
                        "bloch":3,
                        "www":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7015078,
          "postId":6060189,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@MarcoS, While it may be good to avoid clone() I don't see that any of the concerns apply here. There is no functionality implied by the OP's requirements which is problem and there are no more gotcha's than memcpy. BTW: I don't use clone() at all. I generate my data structures to have copy methods/constructors."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7015078]-[1267211377]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@MarcoS, While it may be good to avoid clone() I don't see that any of the concerns apply here. There is no functionality implied by the OP's requirements which is problem and there are no more gotcha's than memcpy. BTW: I don't use clone() at all. I generate my data structures to have copy methods/constructors."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"MarcoS",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "good":1,
                        "problem":1,
                        "impli":1,
                        "btw":1,
                        "requir":1,
                        "data":1,
                        "gotcha":1,
                        "constructor":1,
                        "marco":1,
                        "memcpi":1,
                        "avoid":1,
                        "structur":1,
                        "concern":1,
                        "clone":2,
                        "function":1,
                        "generat":1,
                        "appli":1,
                        "copi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7015138,
          "postId":6060189,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":162684,
            "displayName":"MarcoS",
            "reputation":7913
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Peter Lawrey: maybe you're right, but still I would not recommend using a method that I don't trust. In this case, since the OP is familiar with C++, I would recommend a copy constructor, as I actually did in my [answer](http://stackoverflow.com/questions/6060163/memcpy-function-in-c-to-java-equivalent/6060334#6060334) :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7015138]-[90345651]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Peter Lawrey: maybe you're right, but still I would not recommend using a method that I don't trust. In this case, since the OP is familiar with C++, I would recommend a copy constructor, as I actually did in my [answer](http://stackoverflow.com/questions/6060163/memcpy-function-in-c-to-java-equivalent/6060334#6060334) :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Peter",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "recommend":2,
                        "method":1,
                        "familiar":1,
                        "equival":1,
                        "trust":1,
                        "peter":1,
                        "constructor":1,
                        "memcpi":1,
                        "stackoverflow":1,
                        "function":1,
                        "answer":1,
                        "lawrey":1,
                        "http":1,
                        "copi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7029891,
          "postId":6060189,
          "creationDate":"2011-05-20",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@MacroS, I would agree that generally `clone()` is to be avoided. I think clone() is closest to memcpy, even having some of the same disadvantages."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7029891]-[1400568174]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@MacroS, I would agree that generally `clone()` is to be avoided. I think clone() is closest to memcpy, even having some of the same disadvantages."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"MacroS",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "macro":1,
                        "disadvantag":1,
                        "memcpi":1,
                        "avoid":1,
                        "general":1,
                        "clone":2,
                        "agre":1,
                        "closest":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7015525,
          "postId":6060189,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":358562,
            "displayName":"Angel O'Sphere",
            "reputation":1542
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Would you care to elaborate your problem with clone()? Looking at teh wording of the original asker, I have the impression he is not very experienced in programming. I doubt: don't use clone() helps him much (I never had problems with clone(), so no idea to what you are reffering)."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060189-cu7015525]-[-778851573]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Would you care to elaborate your problem with clone()? Looking at teh wording of the original asker, I have the impression he is not very experienced in programming. I doubt: don't use clone() helps him much (I never had problems with clone(), so no idea to what you are reffering)."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "impress":1,
                        "problem":2,
                        "teh":1,
                        "idea":1,
                        "reffer":1,
                        "care":1,
                        "help":1,
                        "asker":1,
                        "origin":1,
                        "clone":3,
                        "doubt":1,
                        "elabor":1,
                        "word":1,
                        "experienc":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-05-19",
      "lastActivityDate":"2011-05-19",
      "score":6,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In Java you need to either do a shallow <code>clone()</code> of the object or copy every field individually. There is no low level, make one object a copy of another object.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6060189]-[-1496417263]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In Java you need to either do a shallow <code>clone()</code> of the object or copy every field individually. There is no low level, make one object a copy of another object.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "field":1,
                    "individu":1,
                    "object":3,
                    "code":2,
                    "low":1,
                    "clone":1,
                    "make":1,
                    "shallow":1,
                    "copi":2,
                    "level":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":6060333,
      "questionId":6060163,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":7015098,
          "postId":6060333,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":651362,
            "displayName":"JavaBits",
            "reputation":648
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"this class contains all byte[] array. So do you think arraycopy will be helpful?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060333-cu7015098]-[-452961553]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"this class contains all byte[] array. So do you think arraycopy will be helpful?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"contains",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "help":1,
                        "arraycopi":1,
                        "array":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7015149,
          "postId":6060333,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":651362,
            "displayName":"JavaBits",
            "reputation":648
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"An example would really help"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060333-cu7015149]-[956078722]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"An example would really help"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7016060,
          "postId":6060333,
          "creationDate":"2011-05-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":649665,
            "displayName":"James Kanze",
            "reputation":102729
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@JavaBits It doesn't matter what the class contains. What's important is its interface; a shallow copy makes sense if the class is immutable. It might make sense otherwise as well, but you then have to take into account that the copy was shallow. As for an example, `System.arraycopy(pr_masks, 0, wkpm, 0, pr_masks.length)` should work, provided `wkpm` is sufficiently large and has the right type."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6060333-cu7016060]-[1586046258]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@JavaBits It doesn't matter what the class contains. What's important is its interface; a shallow copy makes sense if the class is immutable. It might make sense otherwise as well, but you then have to take into account that the copy was shallow. As for an example, `System.arraycopy(pr_masks, 0, wkpm, 0, pr_masks.length)` should work, provided `wkpm` is sufficiently large and has the right type."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"JavaBits",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"contains",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"is",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"pr_masks",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"pr_masks",
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sens":2,
                        "provid":1,
                        "wkpm":2,
                        "bit":1,
                        "mask":2,
                        "system":1,
                        "immut":1,
                        "work":1,
                        "import":1,
                        "larg":1,
                        "suffici":1,
                        "make":2,
                        "length":1,
                        "account":1,
                        "shallow":2,
                        "matter":1,
                        "type":1,
                        "arraycopi":1,
                        "copi":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-05-19",
      "lastActivityDate":"2011-05-19",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":649665,
        "displayName":"James Kanze",
        "reputation":102729
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There's <code>java.lang.System.arraycopy</code>, but this is a shallow copy. If <code>PMSK</code> is a class, then the array will only contain pointers, and only the pointers will be copied. If you need a deep copy, you'll have to make the class <code>Cloneable</code>, and write your own loop, cloning each time.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6060333]-[777359899]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There's <code>java.lang.System.arraycopy</code>, but this is a shallow copy. If <code>PMSK</code> is a class, then the array will only contain pointers, and only the pointers will be copied. If you need a deep copy, you'll have to make the class <code>Cloneable</code>, and write your own loop, cloning each time.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"Cloneable",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "loop":1,
                    "system":1,
                    "pointer":2,
                    "cloneabl":1,
                    "code":6,
                    "array":1,
                    "pmsk":1,
                    "deep":1,
                    "clone":1,
                    "make":1,
                    "shallow":1,
                    "time":1,
                    "lang":1,
                    "arraycopi":1,
                    "write":1,
                    "copi":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I don't know what <code>PMSK</code> is, so it's hard to say, but generally, the best policy for value type objects is to make them immutable, deriving new objects instead of mutating them. (<code>java.awt.Color</code> might be an example of this.) If you do this, it doesn't matter whether you use deep copy or shallow copy, and <code>java.lang.System.arraycopy</code> should do the job.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6060333]-[813542390]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I don't know what <code>PMSK</code> is, so it's hard to say, but generally, the best policy for value type objects is to make them immutable, deriving new objects instead of mutating them. (<code>java.awt.Color</code> might be an example of this.) If you do this, it doesn't matter whether you use deep copy or shallow copy, and <code>java.lang.System.arraycopy</code> should do the job.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"awt",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Color",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "deriv":1,
                    "hard":1,
                    "system":1,
                    "job":1,
                    "immut":1,
                    "color":1,
                    "mutat":1,
                    "object":2,
                    "code":6,
                    "pmsk":1,
                    "general":1,
                    "deep":1,
                    "polici":1,
                    "make":1,
                    "shallow":1,
                    "matter":1,
                    "lang":1,
                    "type":1,
                    "arraycopi":1,
                    "awt":1,
                    "copi":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"awt",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Color",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":6060334,
      "questionId":6060163,
      "comments":[
        
      ],
      "creationDate":"2011-05-19",
      "lastActivityDate":"2011-05-19",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":162684,
        "displayName":"MarcoS",
        "reputation":7913
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In Java you have no pointers. If you have an object instance <code>obj</code> that you want to copy then you must do it yourself. Although <code>clone()</code> is suggested in other answers as a possibility, I would avoid it. One thing that you could do is using copy constructors (that you also have in C++). You may want to read <a href=\"http://www.artima.com/intv/bloch13.html\"rel=\"nofollow\">this</a> on why <code>clone()</code> is not recommended.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6060334]-[-452651333]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In Java you have no pointers. If you have an object instance <code>obj</code> that you want to copy then you must do it yourself. Although <code>clone()</code> is suggested in other answers as a possibility, I would avoid it. One thing that you could do is using copy constructors (that you also have in C++). You may want to read <a href=\"http://www.artima.com/intv/bloch13.html\"rel=\"nofollow\">this</a> on why <code>clone()</code> is not recommended.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "recommend":1,
                    "artima":1,
                    "pointer":1,
                    "intv":1,
                    "suggest":1,
                    "rel":1,
                    "constructor":1,
                    "thing":1,
                    "obj":1,
                    "possibl":1,
                    "avoid":1,
                    "object":1,
                    "code":6,
                    "nofollow":1,
                    "clone":2,
                    "answer":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "copi":2,
                    "instanc":1,
                    "bloch":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":19688108,
      "questionId":6060163,
      "comments":[
        
      ],
      "creationDate":"2013-10-30",
      "lastActivityDate":"2013-10-30",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2907920,
        "displayName":"Peter Schaeffer",
        "reputation":118
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Java actually does have something just like memcpy(). The Unsafe class has a copyMemory() method that is essentially identical to memcpy(). Of course, like memcpy(), it provides no protection from memory overlays, data destruction, etc. It is not clear if it is really a memcpy() or a memmove(). It can be used to copy from actual addresses to actual addresses or from references to references. Note that if references are used, you must provide an offset (or the JVM will die ASAP). </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19688108]-[-2082059645]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Java actually does have something just like memcpy(). The Unsafe class has a copyMemory() method that is essentially identical to memcpy(). Of course, like memcpy(), it provides no protection from memory overlays, data destruction, etc. It is not clear if it is really a memcpy() or a memmove(). It can be used to copy from actual addresses to actual addresses or from references to references. Note that if references are used, you must provide an offset (or the JVM will die ASAP). </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"has",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"copyMemory",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "provid":1,
                    "method":1,
                    "overlay":1,
                    "clear":1,
                    "asap":1,
                    "data":1,
                    "memcpi":4,
                    "memmov":1,
                    "die":1,
                    "ident":1,
                    "offset":1,
                    "destruct":1,
                    "note":1,
                    "refer":3,
                    "address":2,
                    "protect":1,
                    "unsaf":1,
                    "actual":2,
                    "essenti":1,
                    "copi":2,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Unsafe.copyMemory() works (up to 2 GB per second on my old tired PC). Use at your own risk. Note that the Unsafe class does not exist for all JVM implementations.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19688108]-[-1820634093]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Unsafe.copyMemory() works (up to 2 GB per second on my old tired PC). Use at your own risk. Note that the Unsafe class does not exist for all JVM implementations.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"copyMemory",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"does",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "tire":1,
                    "exist":1,
                    "risk":1,
                    "work":1,
                    "note":1,
                    "implement":1,
                    "unsaf":2,
                    "copi":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You should also take a look at &quot;Tricks with Direct Memory Access in Java&quot; (<a href=\"http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/\"rel=\"nofollow\">http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/</a>) and &quot;Java Magic. Part 4: sun.misc.Unsafe&quot; (<a href=\"http://stackoverflow.com/questions/6060163/memcpy-function-in-c-to-java-equivalent?rq=1\">memcpy function in C++ to Java equivalent</a>) for some additional ideas. These guys are deeply versed in how to do low level (and risky) operations in Java.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19688108]-[1526479084]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You should also take a look at &quot;Tricks with Direct Memory Access in Java&quot; (<a href=\"http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/\"rel=\"nofollow\">http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/</a>) and &quot;Java Magic. Part 4: sun.misc.Unsafe&quot; (<a href=\"http://stackoverflow.com/questions/6060163/memcpy-function-in-c-to-java-equivalent?rq=1\">memcpy function in C++ to Java equivalent</a>) for some additional ideas. These guys are deeply versed in how to do low level (and risky) operations in Java.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "guy":1,
                    "highlyscal":2,
                    "equival":2,
                    "addit":1,
                    "wordpress":2,
                    "trick":1,
                    "idea":1,
                    "sun":1,
                    "rel":1,
                    "memcpi":2,
                    "direct":3,
                    "oper":1,
                    "vers":1,
                    "stackoverflow":1,
                    "low":1,
                    "nofollow":1,
                    "function":2,
                    "riski":1,
                    "misc":1,
                    "quot":4,
                    "magic":1,
                    "unsaf":1,
                    "part":1,
                    "href":2,
                    "http":3,
                    "deepli":1,
                    "access":3,
                    "level":1,
                    "memori":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}