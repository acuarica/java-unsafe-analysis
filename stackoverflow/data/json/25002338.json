{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":25002338,
    "title":"Logs from one Test class are displayed in other class's Standard output section in Gradle Test reports",
    "comments":[
      
    ],
    "tags":[
      "java",
      "gradle",
      "testng"
    ],
    "creationDate":"2014-07-28",
    "lastActivityDate":"2014-07-28",
    "score":0,
    "viewCount":56,
    "owner":{
      "type":"StackOverflowUser",
      "id":3144092,
      "displayName":"Dileep17",
      "reputation":50
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am using TestNG (with gradle) for parallel test execution.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25002338]-[-2011712039]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am using TestNG (with gradle) for parallel test execution.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "parallel":1,
                  "execut":1,
                  "gradl":1,
                  "test":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Gradle Task for executing my tests :-</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25002338]-[-1937284458]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Gradle Task for executing my tests :-</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "task":1,
                  "execut":1,
                  "gradl":1,
                  "test":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"task executeTests(type: Test) { useTestNG{ options -&gt; options.parallel = 'classes' options.threadCount = 2 } } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[25002338]-[1941353553]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"task "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"executeTests",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"(type: Test) { "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"useTestNG",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"{ options -> options.parallel = 'classes' "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"options",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"threadCount",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" = 2 } } "
                }
              ]
            },
            "rawText":"task executeTests(type: Test) { useTestNG{ options -> options.parallel = 'classes' optionsthreadCount = 2 } } ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":3,
                  "count":1,
                  "task":1,
                  "option":2,
                  "class":1,
                  "type":1,
                  "optionsthread":1,
                  "parallel":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have some logging in tests. In Gradle reports logs of one test class are being printed in standard output section of some other test class when we execute tests in parallel. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25002338]-[300126774]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have some logging in tests. In Gradle reports logs of one test class are being printed in standard output section of some other test class when we execute tests in parallel. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"are",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"when",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":4,
                  "gradl":1,
                  "standard":1,
                  "print":1,
                  "section":1,
                  "report":1,
                  "output":1,
                  "parallel":1,
                  "log":2,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To debug, I created 3 classes with one test each and printed Thread.currentThread().getId() with logs. In Gradle reports, last executed Test class's standard output section has logs with different thread ID's(these are from a different class).</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25002338]-[884938704]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To debug, I created 3 classes with one test each and printed Thread.currentThread().getId() with logs. In Gradle reports, last executed Test class's standard output section has logs with different thread ID's(these are from a different class).</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"Thread",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"currentThread",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"getId",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":2,
                  "gradl":1,
                  "standard":1,
                  "print":1,
                  "section":1,
                  "debug":1,
                  "thread":3,
                  "report":1,
                  "class":1,
                  "output":1,
                  "current":1,
                  "creat":1,
                  "log":2,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Am I doing something wrong? How to get logging correct (I should be able to see the complete logging of a test class in its standard output section). Thanks in Advance. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25002338]-[70994672]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Am I doing something wrong? How to get logging correct (I should be able to see the complete logging of a test class in its standard output section). Thanks in Advance. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"in",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":1,
                  "advanc":1,
                  "standard":1,
                  "wrong":1,
                  "correct":1,
                  "section":1,
                  "complet":1,
                  "output":1,
                  "log":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":25002468,
      "questionId":25002338,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":38912517,
          "postId":25002468,
          "creationDate":"2014-07-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3144092,
            "displayName":"Dileep17",
            "reputation":50
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Great! Thanks Peter."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[25002468-cu38912517]-[-1946576627]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Great! Thanks Peter."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "great":1,
                        "peter":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38895955,
          "postId":25002468,
          "creationDate":"2014-07-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3144092,
            "displayName":"Dileep17",
            "reputation":50
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks Peter. Gradle's parallel execution is at test level or class level ?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[25002468-cu38895955]-[-1625244234]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks Peter. Gradle's parallel execution is at test level or class level ?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"level",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":1,
                        "gradl":1,
                        "peter":1,
                        "parallel":1,
                        "execut":1,
                        "level":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38897687,
          "postId":25002468,
          "creationDate":"2014-07-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":84889,
            "displayName":"Peter Niederwieser",
            "reputation":46294
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It's at class level."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[25002468-cu38897687]-[-840810186]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It's at class level."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"level",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "level":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-07-28",
      "lastActivityDate":"2014-07-28",
      "lastEditDate":"2014-07-28",
      "score":0,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":84889,
        "displayName":"Peter Niederwieser",
        "reputation":46294
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Gradle's test reporting has been implemented with Gradle's own parallel execution in mind, which is always single-thread-per-JVM (but possibly multi-JVM). Unless you need TestNG's notion of dependencies between tests, you will be better off using Gradle's parallel execution (e.g. <code>executeTests.maxParallelForks = 2</code>), which doesn't have this problem. Also, you could raise an issue for the original problem at <a href=\"http://forums.gradle.org\"rel=\"nofollow\">http://forums.gradle.org</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25002468]-[355274821]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Gradle's test reporting has been implemented with Gradle's own parallel execution in mind, which is always single-thread-per-JVM (but possibly multi-JVM). Unless you need TestNG's notion of dependencies between tests, you will be better off using Gradle's parallel execution (e.g. <code>executeTests.maxParallelForks = 2</code>), which doesn't have this problem. Also, you could raise an issue for the original problem at <a href=\"http://forums.gradle.org\"rel=\"nofollow\">http://forums.gradle.org</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"executeTests",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxParallelForks",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":2,
                    "singl":1,
                    "test":4,
                    "notion":1,
                    "depend":1,
                    "gradl":5,
                    "problem":2,
                    "rel":1,
                    "issu":1,
                    "possibl":1,
                    "code":2,
                    "fork":1,
                    "thread":1,
                    "nofollow":1,
                    "max":1,
                    "mind":1,
                    "rais":1,
                    "origin":1,
                    "forum":2,
                    "implement":1,
                    "report":1,
                    "org":2,
                    "href":1,
                    "http":2,
                    "multi":1,
                    "parallel":3,
                    "execut":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}