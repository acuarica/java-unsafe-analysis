{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":5484375,
    "title":"Javadoc - how to copy function description?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":6220177,
        "postId":5484375,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":329637,
          "displayName":"RoflcoptrException",
          "reputation":24669
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Why don't you use copy and paste? In any way you have to adapt the parameter param."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5484375-cu6220177]-[954271217]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Why don't you use copy and paste? In any way you have to adapt the parameter param."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "adapt":1,
                      "param":1,
                      "paramet":1,
                      "past":1,
                      "copi":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6220281,
        "postId":5484375,
        "creationDate":"2011-03-30",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":265143,
          "displayName":"Péter Török",
          "reputation":76692
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Roflcoptr, not if the overloaded params only differ in type, i.e. have the same name and description. And maybe the OP doesn't want to violate the DRY principle :-)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5484375-cu6220281]-[-697687207]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Roflcoptr, not if the overloaded params only differ in type, i.e. have the same name and description. And maybe the OP doesn't want to violate the DRY principle :-)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Roflcoptr",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "descript":1,
                      "violat":1,
                      "param":1,
                      "overload":1,
                      "differ":1,
                      "roflcoptr":1,
                      "principl":1,
                      "dri":1,
                      "type":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6220343,
        "postId":5484375,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":572510,
          "displayName":"GetUsername",
          "reputation":190
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@peter-torok, exactly :)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5484375-cu6220343]-[822389417]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@peter-torok, exactly :)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "torok":1,
                      "peter":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6220351,
        "postId":5484375,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":329637,
          "displayName":"RoflcoptrException",
          "reputation":24669
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Ok I see, I thought that two params with different types can't have the same description."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5484375-cu6220351]-[234998681]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Ok I see, I thought that two params with different types can't have the same description."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "descript":1,
                      "type":1,
                      "thought":1,
                      "param":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28060394,
        "postId":5484375,
        "creationDate":"2013-09-25",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":699700,
          "displayName":"Max Nanasy",
          "reputation":1622
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Duplicate: http://stackoverflow.com/questions/3618185/how-can-a-methods-javadoc-be-copied-into-other-methods-javadoc"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5484375-cu28060394]-[996866696]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Duplicate: http://stackoverflow.com/questions/3618185/how-can-a-methods-javadoc-be-copied-into-other-methods-javadoc"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "method":2,
                      "stackoverflow":1,
                      "duplic":1,
                      "http":1,
                      "copi":1,
                      "javadoc":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "javadoc"
    ],
    "creationDate":"2011-03-30",
    "lastActivityDate":"2011-03-30",
    "lastEditDate":"2011-03-30",
    "score":7,
    "viewCount":3228,
    "owner":{
      "type":"StackOverflowUser",
      "id":572510,
      "displayName":"GetUsername",
      "reputation":190
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have two Java functions: </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5484375]-[781147471]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have two Java functions: </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "function":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"/** * Do something with param */ public String doSomething(String param) {...}; /** * ... */ public String doSomething(Integer param) {...}; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[5484375]-[-1995124007]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"/** * Do something with param */ "
                },
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"KeywordModifierNode",
                      "value":"public",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"doSomething",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"String",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"param",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"{...}; /** * ... */ "
                },
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"KeywordModifierNode",
                      "value":"public",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"doSomething",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Integer",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"param",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"{...}; "
                }
              ]
            },
            "rawText":"/** * Do something with param */ public String doSomething(String param) {...}; /** * ... */ public String doSomething(Integer param) {...}; ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "param":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Integer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"param",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How can I make the second function's description to show an exact copy of the first function?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5484375]-[996941001]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How can I make the second function's description to show an exact copy of the first function?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "descript":1,
                  "show":1,
                  "exact":1,
                  "function":2,
                  "make":1,
                  "copi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":5493803,
      "questionId":5484375,
      "comments":[
        
      ],
      "creationDate":"2011-03-30",
      "lastActivityDate":"2011-03-30",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":207421,
        "displayName":"EJP",
        "reputation":133851
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You don't want to do that. You want the second one to <em>refer</em> to the first one. That's what @see is for. You never want to repeat documentation, for the same reason that your second method calls the first method instead of containing a copy of its code.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5493803]-[1953519742]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You don't want to do that. You want the second one to <em>refer</em> to the first one. That's what @see is for. You never want to repeat documentation, for the same reason that your second method calls the first method instead of containing a copy of its code.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":2,
                    "document":1,
                    "reason":1,
                    "code":1,
                    "refer":1,
                    "repeat":1,
                    "call":1,
                    "copi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5484386,
      "questionId":5484375,
      "comments":[
        
      ],
      "creationDate":"2011-03-30",
      "lastActivityDate":"2011-03-30",
      "lastEditDate":"2011-03-30",
      "score":7,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":416564,
        "displayName":"Johan Sjöberg",
        "reputation":22728
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The short answer is you can't. Customary is to make use of the <code>@see</code> directive or simply copy pasting. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484386]-[2071210642]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The short answer is you can't. Customary is to make use of the <code>@see</code> directive or simply copy pasting. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "direct":1,
                    "code":2,
                    "simpli":1,
                    "make":1,
                    "answer":1,
                    "customari":1,
                    "past":1,
                    "copi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you are subclassing you can put the javadoc on the interface level instead to achieve what you want. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484386]-[317040070]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you are subclassing you can put the javadoc on the interface level instead to achieve what you want. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "subclass":1,
                    "achiev":1,
                    "put":1,
                    "javadoc":1,
                    "level":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5484401,
      "questionId":5484375,
      "comments":[
        
      ],
      "creationDate":"2011-03-30",
      "lastActivityDate":"2011-03-30",
      "score":9,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":465582,
        "displayName":"Kevin D",
        "reputation":2327
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Assuming copy and paste won't work for you, I believe the convention is to use the @see tag to refer to another method which will give greater detail.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484401]-[-199258961]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Assuming copy and paste won't work for you, I believe the convention is to use the @see tag to refer to another method which will give greater detail.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "assum":1,
                    "tag":1,
                    "work":1,
                    "refer":1,
                    "give":1,
                    "detail":1,
                    "greater":1,
                    "past":1,
                    "won":1,
                    "copi":1,
                    "convent":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In your example the doSomething(Integer param) would have an @see tag referring to the String version.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484401]-[-16325401]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In your example the doSomething(Integer param) would have an @see tag referring to the String version.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"doSomething",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "refer":1,
                    "tag":1,
                    "param":1,
                    "version":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Wikipedia has some examples, <a href=\"http://en.wikipedia.org/wiki/Javadoc\">http://en.wikipedia.org/wiki/Javadoc</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484401]-[1843856608]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Wikipedia has some examples, <a href=\"http://en.wikipedia.org/wiki/Javadoc\">http://en.wikipedia.org/wiki/Javadoc</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "exampl":1,
                    "wikipedia":3,
                    "wiki":2,
                    "org":2,
                    "href":1,
                    "http":2,
                    "javadoc":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>As does the oracle site for the javadoc tool <a href=\"http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#multiple@see\">http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#multiple@see</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484401]-[539974273]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>As does the oracle site for the javadoc tool <a href=\"http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#multiple@see\">http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#multiple@see</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "tool":1,
                    "document":2,
                    "site":1,
                    "oracl":3,
                    "javas":2,
                    "technetwork":2,
                    "html":2,
                    "href":1,
                    "http":2,
                    "multipl":2,
                    "javadoc":1,
                    "index":2,
                    "www":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5484561,
      "questionId":5484375,
      "comments":[
        
      ],
      "creationDate":"2011-03-30",
      "lastActivityDate":"2011-03-30",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":630686,
        "displayName":"Abhishek",
        "reputation":717
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>As two methods with different type params can't have the same description. But for inherited method we can use same description. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484561]-[-217576682]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>As two methods with different type params can't have the same description. But for inherited method we can use same description. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "descript":2,
                    "method":2,
                    "param":1,
                    "inherit":1,
                    "type":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<h2>inherited method</h2>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484561]-[1737471970]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<h2>inherited method</h2>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "inherit":1,
                    "method":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>For inherited method u can use </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484561]-[1223611693]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>For inherited method u can use </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "inherit":1,
                    "method":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><code>{@inheritDoc}</code></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484561]-[1668054307]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><code>{@inheritDoc}</code></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"inheritDoc",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "inherit":1,
                    "doc":1,
                    "code":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It copies the description from the overridden method.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5484561]-[1085769170]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It copies the description from the overridden method.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "descript":1,
                    "method":1,
                    "overridden":1,
                    "copi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}