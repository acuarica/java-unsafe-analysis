{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":19047938,
    "title":"how to resolve java.lang.NoSuchFieldError: remote_shell_enabled exception?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":28151453,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"i have added the org.neo4j:neo4j-shell:jar file to the build path..is it enough?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28151453]-[6432501]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"i have added the org.neo4j:neo4j-shell:jar file to the build path..is it enough?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "neo":2,
                      "path":1,
                      "shell":1,
                      "build":1,
                      "ad":1,
                      "file":1,
                      "org":1,
                      "jar":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28152424,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1196603,
          "displayName":"Jk1",
          "reputation":4271
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"no, you should have it in runtime classpath too"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28152424]-[807921570]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"no, you should have it in runtime classpath too"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "classpath":1,
                      "runtim":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28150533,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1196603,
          "displayName":"Jk1",
          "reputation":4271
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Do you have neo4j-shell dependency added to your project?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28150533]-[1266168274]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Do you have neo4j-shell dependency added to your project?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "neo":1,
                      "shell":1,
                      "depend":1,
                      "project":1,
                      "ad":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28153392,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"now facing new exception as java.lang.NoClassDefFoundError: Lorg/neo4j/graphdb/factory/GraphDatabaseSetting$BooleanSetting;, added the same in above"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28153392]-[1841539922]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"now facing new exception as java.lang.NoClassDefFoundError: Lorg/neo4j/graphdb/factory/GraphDatabaseSetting$BooleanSetting;, added the same in above"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"NoClassDefFoundError",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ExpressionStatement",
                      "expression":{
                        "type":"BinaryExpressionNode",
                        "operator":{
                          "type":"OperatorNode",
                          "symbol":"/",
                          "comments":[
                            
                          ]
                        },
                        "left":{
                          "type":"BinaryExpressionNode",
                          "operator":{
                            "type":"OperatorNode",
                            "symbol":"/",
                            "comments":[
                              
                            ]
                          },
                          "left":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"/",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"BinaryExpressionNode",
                              "operator":{
                                "type":"OperatorNode",
                                "symbol":"/",
                                "comments":[
                                  
                                ]
                              },
                              "left":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"Lorg",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "right":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"neo4j",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"graphdb",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "right":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"factory",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "right":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"GraphDatabaseSetting$BooleanSetting",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "graphdb":1,
                      "neo":1,
                      "lorg":1,
                      "set":2,
                      "factori":1,
                      "face":1,
                      "found":1,
                      "error":1,
                      "ad":1,
                      "graph":1,
                      "def":1,
                      "databas":1,
                      "lang":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"lang",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"NoClassDefFoundError",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28153491,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Is this because of missing another jar?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28153491]-[1137353502]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Is this because of missing another jar?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jar":1,
                      "miss":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28153891,
        "postId":19047938,
        "creationDate":"2013-09-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1196603,
          "displayName":"Jk1",
          "reputation":4271
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Indeed, try adding neo4j-kernel. It must be there if I'm not mistaken"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28153891]-[1603768585]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Indeed, try adding neo4j-kernel. It must be there if I'm not mistaken"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "ad":1,
                      "kernel":1,
                      "mistaken":1,
                      "neo":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28253529,
        "postId":19047938,
        "creationDate":"2013-10-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Yes Jk1,Its there even though the same exception is coming with little diff now as above,"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28253529]-[1762957253]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Yes Jk1,Its there even though the same exception is coming with little diff now as above,"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "diff":1,
                      "come":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28260918,
        "postId":19047938,
        "creationDate":"2013-10-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":83490,
          "displayName":"Peter Neubauer",
          "reputation":5375
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Please make sure to use maven for your dependency management, or make sure you are having ALL jar files in the neo4j/lib folder of the server distribution on your classpath."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28260918]-[-699248631]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Please make sure to use maven for your dependency management, or make sure you are having ALL jar files in the neo4j/lib folder of the server distribution on your classpath."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "neo":1,
                      "server":1,
                      "depend":1,
                      "classpath":1,
                      "maven":1,
                      "folder":1,
                      "lib":1,
                      "make":2,
                      "file":1,
                      "manag":1,
                      "distribut":1,
                      "jar":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28261606,
        "postId":19047938,
        "creationDate":"2013-10-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Hi peter, i am not using any maven dependency mgmt since it is not a prjct, i have just created sample programme for connectivity checking vth the db and connectivity itself not esatblishing."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28261606]-[569864269]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Hi peter, i am not using any maven dependency mgmt since it is not a prjct, i have just created sample programme for connectivity checking vth the db and connectivity itself not esatblishing."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "depend":1,
                      "connect":2,
                      "vth":1,
                      "sampl":1,
                      "prjct":1,
                      "peter":1,
                      "maven":1,
                      "check":1,
                      "mgmt":1,
                      "programm":1,
                      "creat":1,
                      "esatblish":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":28261679,
        "postId":19047938,
        "creationDate":"2013-10-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2787785,
          "displayName":"Sujana",
          "reputation":27
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"It might be some jar problem,but i am not sure which one is missing..can u suggest me by the error description wat might be the mising jar.Thanks.."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19047938-cu28261679]-[-261410765]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"It might be some jar problem,but i am not sure which one is missing..can u suggest me by the error description wat might be the mising jar.Thanks.."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "mise":1,
                      "descript":1,
                      "problem":1,
                      "suggest":1,
                      "miss":1,
                      "error":1,
                      "wat":1,
                      "jar":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "neo4j"
    ],
    "creationDate":"2013-09-27",
    "lastActivityDate":"2013-10-01",
    "lastEditDate":"2013-10-01",
    "score":1,
    "viewCount":318,
    "owner":{
      "type":"StackOverflowUser",
      "id":2787785,
      "displayName":"Sujana",
      "reputation":27
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Can anybody help me to resolve the below exception?I am just trying to create nodes in neo4j db through a jave programme. But getting the exception as,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19047938]-[386279455]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Can anybody help me to resolve the below exception?I am just trying to create nodes in neo4j db through a jave programme. But getting the exception as,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "neo":1,
                  "resolv":1,
                  "jave":1,
                  "programm":1,
                  "node":1,
                  "creat":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"INFO: Starting Neo Server on port [7474] with [40] threads available 2013-09-27 15:23:59.154:INFO::Logging to STDERR via org.mortbay.log.StdErrLog Sep 27, 2013 3:23:59 PM org.neo4j.server.logging.Logger log INFO: Using database at C:\\neo4j-community-1.9.3_bup\\data\\graph.db Exception in thread &quot;main&quot; java.lang.NoSuchFieldError: remote_shell_enabled at org.neo4j.server.database.Database.createDatabase(Database.java:77) at org.neo4j.server.database.Database.&lt;init&gt;(Database.java:55) at org.neo4j.server.NeoServerWithEmbeddedWebServer.startDatabase(NeoServerWithEmbeddedWebServer.java:179) at org.neo4j.server.NeoServerWithEmbeddedWebServer.start(NeoServerWithEmbeddedWebServer.java:93) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:76) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:70) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19047938]-[-1473615016]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"INFO: Starting Neo Server on port [7474] with [40] threads available 2013-09-27 15:23:59.154:INFO::Logging to STDERR via "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"org",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"mortbay",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"log",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"StdErrLog",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"Sep 27, 2013 3:23:59 PM "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"org",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"neo4j",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"server",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"logging",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Logger",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"log INFO: Using database at C:\\neo4j-community-1.9.3"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"_bup",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"\\data\\graph.db "
                },
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"main\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"NoSuchFieldError",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "message":"remote_shell_enabled at org.neo4j.server.database.Database.createDatabase(Database.java:77) at org.neo4j.server.database.Database.<init>(Database.java:55) at org.neo4j.server.NeoServerWithEmbeddedWebServer.startDatabase(NeoServerWithEmbeddedWebServer.java:179) at org.neo4j.server.NeoServerWithEmbeddedWebServer.start(NeoServerWithEmbeddedWebServer.java:93) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:76) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:70) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) ",
                  "lines":[
                    
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":"INFO: Starting Neo Server on port [7474] with [40] threads available 2013-09-27 15:23:59.154:INFO::Logging to STDERR via org.mortbay.log.StdErrLog Sep 27, 2013 3:23:59 PM org.neo4j.server.logging.Logger log INFO: Using database at C:\\neo4j-community-1.9.3_bup\\data\\graph.db Exception in thread \"main\" java.lang.NoSuchFieldError:remote_shell_enabled at org.neo4j.server.database.Database.createDatabase(Database.java:77) at org.neo4j.server.database.Database.<init>(Database.java:55) at org.neo4j.server.NeoServerWithEmbeddedWebServer.startDatabase(NeoServerWithEmbeddedWebServer.java:179) at org.neo4j.server.NeoServerWithEmbeddedWebServer.start(NeoServerWithEmbeddedWebServer.java:93) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87) at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:76) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:70) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "neo":19,
                  "server":16,
                  "logger":1,
                  "shell":1,
                  "field":1,
                  "data":1,
                  "std":1,
                  "main":2,
                  "embed":8,
                  "info":3,
                  "sep":1,
                  "web":4,
                  "mortbay":1,
                  "thread":2,
                  "port":1,
                  "error":1,
                  "bup":1,
                  "bootstrapp":4,
                  "src":2,
                  "enabl":1,
                  "err":1,
                  "graph":1,
                  "stderr":1,
                  "databas":9,
                  "lang":1,
                  "org":8,
                  "start":5,
                  "creat":2,
                  "init":1,
                  "communiti":1,
                  "log":5,
                  "remot":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"org",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"mortbay",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"log",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"StdErrLog",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"org",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"neo4j",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"server",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"logging",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Logger",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>And My programme code is,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19047938]-[-648480779]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>And My programme code is,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "code":1,
                  "programm":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"new GraphDatabaseFactory().newEmbeddedDatabase(DB_PATH).shutdown(); createLock(); Map&lt;String, String&gt; config = new HashMap&lt;String, String&gt;(); config.put( &quot;neostore.nodestore.db.mapped_memory&quot;, &quot;10M&quot; ); config.put( &quot;string_block_size&quot;, &quot;60&quot; ); config.put( &quot;array_block_size&quot;, &quot;300&quot; ); config.put( &quot;remote_shell_enabled&quot;, &quot;false&quot; ); // lock.release(); graphDb = new GraphDatabaseFactory() .newEmbeddedDatabaseBuilder(DB_PATH) .setConfig( config ) .newGraphDatabase(); Configurator configurator = new ServerConfigurator((GraphDatabaseAPI)graphDb); configurator.configuration().setProperty(Configurator.WEBSERVER_ADDRESS_PROPERTY_KEY, &quot;127.0.0.1&quot;); configurator.configuration().setProperty(Configurator.WEBSERVER_PORT_PROPERTY_KEY, 7474); WrappingNeoServerBootstrapper bootstrapper = new WrappingNeoServerBootstrapper((GraphDatabaseAPI)graphDb, configurator); bootstrapper.start(); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19047938]-[665281569]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":".",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"ConstructorCreatorNode",
                        "creatorType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"GraphDatabaseFactory",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "expressionArgs":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"newEmbeddedDatabase",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"DB_PATH",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"shutdown",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"createLock",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                },
                {
                  "type":"LocalVariableDeclarationStatementNode",
                  "modifiers":[
                    
                  ],
                  "declarators":{
                    "type":"VariableDeclaratorsNode",
                    "declarators":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"config",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "assignment":{
                          "type":"VariableAssignmentNode",
                          "variableAssignment":{
                            "type":"VariableExpressionInitNode",
                            "expression":{
                              "type":"ConstructorCreatorNode",
                              "creatorType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"HashMap",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "typeArguments":{
                                      "type":"TypeArgumentsNode",
                                      "types":[
                                        {
                                          "type":"ReferenceTypeNode",
                                          "ids":[
                                            {
                                              "type":"ParameterizedTypeNode",
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"String",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        {
                                          "type":"ReferenceTypeNode",
                                          "ids":[
                                            {
                                              "type":"ParameterizedTypeNode",
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"String",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "expressionArgs":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Map",
                                "comments":[
                                  
                                ]
                              },
                              "typeArguments":{
                                "type":"TypeArgumentsNode",
                                "types":[
                                  {
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "qualifiedIdentifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"config",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"put",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"neostore.nodestore.db.mapped_memory\""
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"10M\""
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "qualifiedIdentifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"config",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"put",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"string_block_size\""
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"60\""
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "qualifiedIdentifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"config",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"put",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"array_block_size\""
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"300\""
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "qualifiedIdentifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"config",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"put",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"remote_shell_enabled\""
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LiteralNode",
                        "node":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"false\""
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    {
                      "text":"// lock.release(); graphDb = new GraphDatabaseFactory() .newEmbeddedDatabaseBuilder(DB_PATH) .setConfig( config ) .newGraphDatabase(); Configurator configurator = new ServerConfigurator((GraphDatabaseAPI)graphDb); configurator.configuration().setProperty(Configurator.WEBSERVER_ADDRESS_PROPERTY_KEY, \"127.0.0.1\"); configurator.configuration().setProperty(Configurator.WEBSERVER_PORT_PROPERTY_KEY, 7474); WrappingNeoServerBootstrapper bootstrapper = new WrappingNeoServerBootstrapper((GraphDatabaseAPI)graphDb, configurator); bootstrapper.start(); \n"
                    }
                  ]
                }
              ]
            },
            "rawText":"new GraphDatabaseFactory().newEmbeddedDatabase(DB_PATH).shutdown(); createLock(); Map<String, String> config = new HashMap<String, String>(); configput( \"neostore.nodestore.db.mapped_memory\", \"10M\"); configput( \"string_block_size\", \"60\"); configput( \"array_block_size\", \"300\"); configput( \"remote_shell_enabled\", \"false\"); // lock.release(); graphDb = new GraphDatabaseFactory() .newEmbeddedDatabaseBuilder(DB_PATH) .setConfig( config ) .newGraphDatabase(); Configurator configurator = new ServerConfigurator((GraphDatabaseAPI)graphDb); configurator.configuration().setProperty(Configurator.WEBSERVER_ADDRESS_PROPERTY_KEY, \"127.0.0.1\"); configurator.configuration().setProperty(Configurator.WEBSERVER_PORT_PROPERTY_KEY, 7474); WrappingNeoServerBootstrapper bootstrapper = new WrappingNeoServerBootstrapper((GraphDatabaseAPI)graphDb, configurator); bootstrapper.start(); \n",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "properti":4,
                  "neo":2,
                  "server":3,
                  "path":2,
                  "size":2,
                  "shell":1,
                  "map":3,
                  "set":3,
                  "builder":1,
                  "lock":2,
                  "config":3,
                  "embed":2,
                  "configur":10,
                  "neostor":1,
                  "factori":2,
                  "key":2,
                  "array":1,
                  "shutdown":1,
                  "block":2,
                  "hash":1,
                  "releas":1,
                  "wrap":2,
                  "port":1,
                  "bootstrapp":4,
                  "address":1,
                  "enabl":1,
                  "fals":1,
                  "graph":8,
                  "webserv":2,
                  "databas":7,
                  "configput":4,
                  "api":2,
                  "start":1,
                  "creat":1,
                  "nodestor":1,
                  "remot":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"GraphDatabaseFactory",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HashMap",
                          "comments":[
                            
                          ]
                        },
                        "typeArguments":{
                          "type":"TypeArgumentsNode",
                          "types":[
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"String",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"String",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Map",
                          "comments":[
                            
                          ]
                        },
                        "typeArguments":{
                          "type":"TypeArgumentsNode",
                          "types":[
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"String",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"String",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"config",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"put",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"remote_shell_enabled\""
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"false\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      {
                        "text":"// lock.release(); graphDb = new GraphDatabaseFactory() .newEmbeddedDatabaseBuilder(DB_PATH) .setConfig( config ) .newGraphDatabase(); Configurator configurator = new ServerConfigurator((GraphDatabaseAPI)graphDb); configurator.configuration().setProperty(Configurator.WEBSERVER_ADDRESS_PROPERTY_KEY, \"127.0.0.1\"); configurator.configuration().setProperty(Configurator.WEBSERVER_PORT_PROPERTY_KEY, 7474); WrappingNeoServerBootstrapper bootstrapper = new WrappingNeoServerBootstrapper((GraphDatabaseAPI)graphDb, configurator); bootstrapper.start(); \n"
                      }
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"config",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"put",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"neostore.nodestore.db.mapped_memory\""
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"10M\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"shutdown",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"createLock",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"newEmbeddedDatabase",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"DB_PATH",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"config",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"put",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"array_block_size\""
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"300\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"config",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"put",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"string_block_size\""
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"60\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"config",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"HashMap",
                                  "comments":[
                                    
                                  ]
                                },
                                "typeArguments":{
                                  "type":"TypeArgumentsNode",
                                  "types":[
                                    {
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"String",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"String",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Map",
                            "comments":[
                              
                            ]
                          },
                          "typeArguments":{
                            "type":"TypeArgumentsNode",
                            "types":[
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>New exception,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19047938]-[-502858008]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>New exception,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: Lorg/neo4j/graphdb/factory/GraphDatabaseSetting$BooleanSetting; at java.lang.Class.getDeclaredFields0(Native Method) at java.lang.Class.privateGetDeclaredFields(Unknown Source) at java.lang.Class.getDeclaredFields(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:41) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.&lt;init&gt;(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.&lt;init&gt;(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.&lt;init&gt;(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.&lt;init&gt;(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:52) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19047938]-[1246194830]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"main\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"NoClassDefFoundError",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "message":"Lorg/neo4j/graphdb/factory/GraphDatabaseSetting$BooleanSetting; at java.lang.Class.getDeclaredFields0(Native Method) at java.lang.Class.privateGetDeclaredFields(Unknown Source) at java.lang.Class.getDeclaredFields(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:41) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.<init>(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.<init>(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.<init>(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:52) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) ",
                  "lines":[
                    
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":"Exception in thread \"main\" java.lang.NoClassDefFoundError:Lorg/neo4j/graphdb/factory/GraphDatabaseSetting$BooleanSetting; at java.lang.Class.getDeclaredFields0(Native Method) at java.lang.Class.privateGetDeclaredFields(Unknown Source) at java.lang.Class.getDeclaredFields(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:41) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.<init>(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.<init>(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.<init>(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:52) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:42) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "graphdb":4,
                  "find":1,
                  "method":1,
                  "harvest":2,
                  "kernel":5,
                  "neo":15,
                  "lorg":1,
                  "field":5,
                  "set":2,
                  "builder":2,
                  "unknown":2,
                  "config":2,
                  "main":2,
                  "embed":7,
                  "configur":5,
                  "factori":8,
                  "declar":3,
                  "base":2,
                  "found":1,
                  "thread":1,
                  "annot":4,
                  "error":1,
                  "src":2,
                  "graph":12,
                  "def":1,
                  "databas":14,
                  "lang":4,
                  "org":8,
                  "creat":1,
                  "sourc":2,
                  "init":4,
                  "intern":2,
                  "migrat":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Now the exception is coming as,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19047938]-[1026603934]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Now the exception is coming as,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "come":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: org.neo4j.graphdb.factory.GraphDatabaseSetting$BooleanSetting.&lt;init&gt;(Ljava/lang/String;)V at org.neo4j.shell.ShellSettings.&lt;clinit&gt;(ShellSettings.java:37) at sun.misc.Unsafe.ensureClassInitialized(Native Method) at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(Unknown Source) at sun.reflect.ReflectionFactory.newFieldAccessor(Unknown Source) at java.lang.reflect.Field.acquireFieldAccessor(Unknown Source) at java.lang.reflect.Field.getFieldAccessor(Unknown Source) at java.lang.reflect.Field.get(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:47) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.&lt;init&gt;(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.&lt;init&gt;(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.&lt;init&gt;(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.&lt;init&gt;(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:49) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:39) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19047938]-[-1821220246]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"main\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"NoSuchMethodError",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "message":"org.neo4j.graphdb.factory.GraphDatabaseSetting$BooleanSetting.<init>(Ljava/lang/String;)V at org.neo4j.shell.ShellSettings.<clinit>(ShellSettings.java:37) at sun.misc.Unsafe.ensureClassInitialized(Native Method) at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(Unknown Source) at sun.reflect.ReflectionFactory.newFieldAccessor(Unknown Source) at java.lang.reflect.Field.acquireFieldAccessor(Unknown Source) at java.lang.reflect.Field.getFieldAccessor(Unknown Source) at java.lang.reflect.Field.get(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:47) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.<init>(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.<init>(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.<init>(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:49) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:39) ",
                  "lines":[
                    
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":"Exception in thread \"main\" java.lang.NoSuchMethodError:org.neo4j.graphdb.factory.GraphDatabaseSetting$BooleanSetting.<init>(Ljava/lang/String;)V at org.neo4j.shell.ShellSettings.<clinit>(ShellSettings.java:37) at sun.misc.Unsafe.ensureClassInitialized(Native Method) at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(Unknown Source) at sun.reflect.ReflectionFactory.newFieldAccessor(Unknown Source) at java.lang.reflect.Field.acquireFieldAccessor(Unknown Source) at java.lang.reflect.Field.getFieldAccessor(Unknown Source) at java.lang.reflect.Field.get(Unknown Source) at org.neo4j.kernel.configuration.AnnotatedFieldHarvester.findStatic(AnnotatedFieldHarvester.java:47) at org.neo4j.kernel.configuration.AnnotationBasedConfigurationMigrator.<init>(AnnotationBasedConfigurationMigrator.java:40) at org.neo4j.kernel.configuration.Config.<init>(Config.java:89) at org.neo4j.kernel.InternalAbstractGraphDatabase.<init>(InternalAbstractGraphDatabase.java:218) at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:103) at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:88) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:207) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at com.Neo4J.src.EmbeddedNeo4j.createDb(EmbeddedNeo4j.java:49) at com.Neo4J.src.EmbeddedNeo4j.main(EmbeddedNeo4j.java:39) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "graphdb":4,
                  "find":1,
                  "method":2,
                  "harvest":2,
                  "kernel":5,
                  "neo":16,
                  "shell":3,
                  "field":10,
                  "set":4,
                  "sun":3,
                  "ljava":1,
                  "builder":2,
                  "unknown":5,
                  "config":2,
                  "main":2,
                  "embed":7,
                  "configur":5,
                  "factori":10,
                  "base":2,
                  "accessor":5,
                  "thread":1,
                  "annot":4,
                  "error":1,
                  "src":2,
                  "misc":1,
                  "initi":1,
                  "graph":12,
                  "databas":14,
                  "clinit":1,
                  "unsaf":2,
                  "lang":5,
                  "acquir":1,
                  "org":10,
                  "creat":1,
                  "sourc":5,
                  "init":5,
                  "reflect":6,
                  "intern":2,
                  "migrat":2,
                  "ensur":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    
  ]
}