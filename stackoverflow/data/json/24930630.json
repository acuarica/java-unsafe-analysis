{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":24930630,
    "title":"Uninitialized static variable in memory in Java",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":38739520,
        "postId":24930630,
        "creationDate":"2014-07-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":106104,
          "displayName":"immibis",
          "reputation":11558
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Java has no concept of an &quot;address&quot;."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24930630-cu38739520]-[1181424407]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Java has no concept of an &quot;address&quot;."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "address":1,
                      "quot":2,
                      "concept":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":38739559,
        "postId":24930630,
        "creationDate":"2014-07-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":3861603,
          "displayName":"Deepanshu Bedi",
          "reputation":1139
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"are you by some chance talking about reference id?-1."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24930630-cu38739559]-[1316429556]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"are you by some chance talking about reference id?-1."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "chanc":1,
                      "refer":1,
                      "talk":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":38739577,
        "postId":24930630,
        "creationDate":"2014-07-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2759848,
          "displayName":"Eel Lee",
          "reputation":1674
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I cannot understand what are you asking about... can you make it a bit more clear?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24930630-cu38739577]-[985178434]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I cannot understand what are you asking about... can you make it a bit more clear?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "understand":1,
                      "clear":1,
                      "bit":1,
                      "make":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":38739633,
        "postId":24930630,
        "creationDate":"2014-07-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":3872358,
          "displayName":"user3872358",
          "reputation":6
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Deepanshu Bedi I mean reference"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24930630-cu38739633]-[1014607526]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Deepanshu Bedi I mean reference"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Deepanshu",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "deepanshu":1,
                      "refer":1,
                      "bedi":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":38739861,
        "postId":24930630,
        "creationDate":"2014-07-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":106104,
          "displayName":"immibis",
          "reputation":11558
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Java also has no concept of memory allocation."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24930630-cu38739861]-[-373659934]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Java also has no concept of memory allocation."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "alloc":1,
                      "concept":1,
                      "memori":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "memory",
      "static"
    ],
    "creationDate":"2014-07-24",
    "lastActivityDate":"2014-10-27",
    "lastEditDate":"2014-10-27",
    "score":-3,
    "viewCount":74,
    "owner":{
      "type":"StackOverflowUser",
      "id":3872358,
      "displayName":"user3872358",
      "reputation":6
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>In the example below, is memory allocated to j? If so, can the j's address change throughout the program assuming that j will never be initialized?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[24930630]-[-1619936958]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>In the example below, is memory allocated to j? If so, can the j's address change throughout the program assuming that j will never be initialized?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "chang":1,
                  "program":1,
                  "assum":1,
                  "alloc":1,
                  "address":1,
                  "initi":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"public class c{ private static String j; public c(){} .... } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[24930630]-[-1220031810]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"CompilationUnitNode",
                  "imports":[
                    
                  ],
                  "typeDeclarations":[
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        {
                          "type":"KeywordModifierNode",
                          "value":"public",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"c",
                        "comments":[
                          
                        ]
                      },
                      "body":{
                        "type":"ClassBodyNode",
                        "declarations":[
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"KeywordModifierNode",
                                "value":"static",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"j",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"public",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"c",
                              "comments":[
                                
                              ]
                            },
                            "parameters":{
                              "type":"FormalParametersNode",
                              "comments":[
                                
                              ]
                            },
                            "arrayReturnType":[
                              
                            ],
                            "body":{
                              "type":"BlockNode",
                              "statements":[
                                
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"TextFragmentNode",
                            "text":".... "
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                }
              ]
            },
            "rawText":"public class c{ private static String j; public c(){} .... } ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"j",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":24930725,
      "questionId":24930630,
      "comments":[
        
      ],
      "creationDate":"2014-07-24",
      "lastActivityDate":"2014-10-27",
      "lastEditDate":"2014-10-27",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":3482140,
        "displayName":"shekhar suman",
        "reputation":5614
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>First of all, it is <em>Java</em>. Therefore no talking of address accessing and address change.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930725]-[208244970]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>First of all, it is <em>Java</em>. Therefore no talking of address accessing and address change.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "address":2,
                    "chang":1,
                    "talk":1,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The compiler does all this on the behalf of the user for the optimisation and efficiency of the program.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930725]-[-1106495328]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The compiler does all this on the behalf of the user for the optimisation and efficiency of the program.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "optimis":1,
                    "effici":1,
                    "behalf":1,
                    "compil":1,
                    "user":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Next, as the variable j has been declared static, you can't decide about the address, but its value will be permanent on declaration even after the end of its block, unless changed. (It means it doesn't lose the value even after the blocks accessing it and declaring it change.)</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930725]-[1536167570]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Next, as the variable j has been declared static, you can't decide about the address, but its value will be permanent on declaration even after the end of its block, unless changed. (It means it doesn't lose the value even after the blocks accessing it and declaring it change.)</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "decid":1,
                    "chang":2,
                    "mean":1,
                    "declar":3,
                    "perman":1,
                    "block":2,
                    "address":1,
                    "end":1,
                    "variabl":1,
                    "lose":1,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It'll only lose its value after termination of the program!</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930725]-[-949524854]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It'll only lose its value after termination of the program!</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "lose":1,
                    "termin":1,
                    "program":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":24930746,
      "questionId":24930630,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":38740297,
          "postId":24930746,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":139985,
            "displayName":"Stephen C",
            "reputation":291715
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Not a stack frame / local frame. A frame associated with the class. (Actually, the JVM spec doesn't talk about how / where static variables are represented. It just says that they are accessed / set using the getStatic / putStatic bytecodes ..."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930746-cu38740297]-[-791907365]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Not a stack frame / local frame. A frame associated with the class. (Actually, the JVM spec doesn't talk about how / where static variables are represented. It just says that they are accessed / set using the getStatic / putStatic bytecodes ..."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"getStatic",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"putStatic",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "bytecod":1,
                        "set":1,
                        "local":1,
                        "talk":1,
                        "frame":3,
                        "stack":1,
                        "spec":1,
                        "put":1,
                        "variabl":1,
                        "repres":1,
                        "access":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38739918,
          "postId":24930746,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2111035,
            "displayName":"Chris K",
            "reputation":5861
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"frame, as in the method call stack, or somewhere else?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930746-cu38739918]-[159091864]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"frame, as in the method call stack, or somewhere else?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "call":1,
                        "frame":1,
                        "method":1,
                        "stack":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-07-24",
      "lastActivityDate":"2014-07-24",
      "lastEditDate":"2014-07-24",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":139985,
        "displayName":"Stephen C",
        "reputation":291715
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>In the example below is memory allocated to j?</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930746]-[1768026849]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>In the example below is memory allocated to j?</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "blockquot":2,
                    "alloc":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Memory is allocated by the JVM to the frame that includes the <code>j</code> static variable. And it <em>will</em> be default initialized to <code>null</code>. However, <code>null</code> does not refer to any heap node.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930746]-[1835145374]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Memory is allocated by the JVM to the frame that includes the <code>j</code> static variable. And it <em>will</em> be default initialized to <code>null</code>. However, <code>null</code> does not refer to any heap node.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "alloc":1,
                    "frame":1,
                    "includ":1,
                    "code":6,
                    "refer":1,
                    "initi":1,
                    "node":1,
                    "heap":1,
                    "variabl":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>If so, can the j's address change throughout the program assuming that j will never be initialized?</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930746]-[454336704]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>If so, can the j's address change throughout the program assuming that j will never be initialized?</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "program":1,
                    "assum":1,
                    "blockquot":2,
                    "address":1,
                    "initi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It is not specified, but based on my understanding of how JVMs are typically implemented, yes the address of <code>j</code> could change.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930746]-[-966624397]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It is not specified, but based on my understanding of how JVMs are typically implemented, yes the address of <code>j</code> could change.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "understand":1,
                    "jvms":1,
                    "base":1,
                    "code":2,
                    "typic":1,
                    "implement":1,
                    "address":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>However, unless a program tries to access <code>j</code> from native code (or equivalent), it won't be aware of the address, or possible changes to it. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930746]-[1199488401]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>However, unless a program tries to access <code>j</code> from native code (or equivalent), it won't be aware of the address, or possible changes to it. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "equival":1,
                    "code":3,
                    "awar":1,
                    "address":1,
                    "won":1,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":24930759,
      "questionId":24930630,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":38740654,
          "postId":24930759,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2033265,
            "displayName":"holap",
            "reputation":361
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"just my 2 cent. As j is a String, which is an immutable object, every time the value of j changes jvm will create a new object, so reference of j will change too."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930759-cu38740654]-[-1196793304]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"just my 2 cent. As j is a String, which is an immutable object, every time the value of j changes jvm will create a new object, so reference of j will change too."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":1,
                        "jvm":1,
                        "immut":1,
                        "object":2,
                        "refer":1,
                        "time":1,
                        "creat":1,
                        "cent":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38758080,
          "postId":24930759,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":429063,
            "displayName":"Chris Stratton",
            "reputation":25773
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@holap - two different things. There is the storage of &quot;j&quot; the pointer to an object, and there is the storage of the object itself (if any). Since the object is immutable a new one must be created, but the pointer itself would have only its value changed to point to the new object, not its storage location. Changing the location where the pointer itself is stored would tend to occur only for the convenience of the JVM and its memory manager."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930759-cu38758080]-[-1248229154]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@holap - two different things. There is the storage of &quot;j&quot; the pointer to an object, and there is the storage of the object itself (if any). Since the object is immutable a new one must be created, but the pointer itself would have only its value changed to point to the new object, not its storage location. Changing the location where the pointer itself is stored would tend to occur only for the convenience of the JVM and its memory manager."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":2,
                        "jvm":1,
                        "point":1,
                        "pointer":3,
                        "occur":1,
                        "immut":1,
                        "thing":1,
                        "store":1,
                        "object":4,
                        "conveni":1,
                        "tend":1,
                        "holap":1,
                        "quot":2,
                        "manag":1,
                        "storag":3,
                        "creat":1,
                        "locat":2,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-07-24",
      "lastActivityDate":"2014-07-24",
      "lastEditDate":"2014-07-24",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2111035,
        "displayName":"Chris K",
        "reputation":5861
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The JVM will lazy load a class. Upon first reference to the class, the class will be allocated and yes memory will be laid out for all of the static fields. In this case, j will hold 'null'. Where the class and its fields will be allocated will depend on the JVM, and most specifically the Garbage Collector that was selected.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930759]-[1285841937]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The JVM will lazy load a class. Upon first reference to the class, the class will be allocated and yes memory will be laid out for all of the static fields. In this case, j will hold 'null'. Where the class and its fields will be allocated will depend on the JVM, and most specifically the Garbage Collector that was selected.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"will",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"and",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":2,
                    "collector":1,
                    "alloc":2,
                    "depend":1,
                    "field":2,
                    "lazi":1,
                    "load":1,
                    "laid":1,
                    "select":1,
                    "hold":1,
                    "specif":1,
                    "refer":1,
                    "garbag":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The Java language does not give direct access to the underlying memory address as other languages such as C do. And yes, the underlying memory address may change as/when/if the Garbage Collector decides to relocate the class; Some GCs will not relocate classes, the old ones could not even reclaim them. It is important to note that any move by the GC is not visible to the Java program. That is, so long as you avoid using sun.misc.Unsafe, sun.misc.Unsafe is a back door to the JVM that was added in Java 5. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930759]-[-644016075]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The Java language does not give direct access to the underlying memory address as other languages such as C do. And yes, the underlying memory address may change as/when/if the Garbage Collector decides to relocate the class; Some GCs will not relocate classes, the old ones could not even reclaim them. It is important to note that any move by the GC is not visible to the Java program. That is, so long as you avoid using sun.misc.Unsafe, sun.misc.Unsafe is a back door to the JVM that was added in Java 5. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "decid":1,
                    "chang":1,
                    "jvm":1,
                    "program":1,
                    "collector":1,
                    "door":1,
                    "languag":2,
                    "move":1,
                    "gcs":1,
                    "reloc":2,
                    "reclaim":1,
                    "sun":2,
                    "visibl":1,
                    "avoid":1,
                    "direct":1,
                    "import":1,
                    "note":1,
                    "back":1,
                    "give":1,
                    "misc":2,
                    "address":2,
                    "ad":1,
                    "class":1,
                    "under":2,
                    "unsaf":2,
                    "garbag":1,
                    "access":1,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>For more details on Unsafe, this <a href=\"http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/\"rel=\"nofollow\">blog</a> has a nice overview.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930759]-[-1501909553]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>For more details on Unsafe, this <a href=\"http://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/\"rel=\"nofollow\">blog</a> has a nice overview.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "highlyscal":1,
                    "wordpress":1,
                    "rel":1,
                    "nice":1,
                    "direct":1,
                    "blog":1,
                    "nofollow":1,
                    "overview":1,
                    "detail":1,
                    "unsaf":1,
                    "href":1,
                    "http":1,
                    "access":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":24930804,
      "questionId":24930630,
      "comments":[
        
      ],
      "creationDate":"2014-07-24",
      "lastActivityDate":"2014-07-24",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2704032,
        "displayName":"Vishrant",
        "reputation":1673
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can say it will just point to <code>null</code> reference. Memory in Java is allocated using dynamic memory operator i.e. <code>new</code> operator (some class like String have special privileges that it can be initialized using <code>=</code> operator).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930804]-[-402184271]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can say it will just point to <code>null</code> reference. Memory in Java is allocated using dynamic memory operator i.e. <code>new</code> operator (some class like String have special privileges that it can be initialized using <code>=</code> operator).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"like",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "point":1,
                    "alloc":1,
                    "privileg":1,
                    "dynam":1,
                    "code":6,
                    "oper":3,
                    "refer":1,
                    "initi":1,
                    "special":1,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":24930716,
      "questionId":24930630,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":38739678,
          "postId":24930716,
          "creationDate":"2014-07-24",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3419894,
            "displayName":"JonK",
            "reputation":1287
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Is this also true of local variables in methods?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930716-cu38739678]-[-1158168474]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Is this also true of local variables in methods?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "variabl":1,
                        "true":1,
                        "local":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38739701,
          "postId":24930716,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":841108,
            "displayName":"Basile Starynkevitch",
            "reputation":87023
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes, AFAIK, local variables are also implicitly initialized ...."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930716-cu38739701]-[-1556362302]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes, AFAIK, local variables are also implicitly initialized ...."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "local":1,
                        "afaik":1,
                        "implicit":1,
                        "initi":1,
                        "variabl":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38739721,
          "postId":24930716,
          "creationDate":"2014-07-24",
          "score":5,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3419894,
            "displayName":"JonK",
            "reputation":1287
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I'm pretty sure they don't"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930716-cu38739721]-[1182739210]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I'm pretty sure they don't"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "pretti":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38739805,
          "postId":24930716,
          "creationDate":"2014-07-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3482140,
            "displayName":"shekhar suman",
            "reputation":5614
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes @BasileStarynkevitch,these are not initialised to 0 or null by default.Infact,it happens in none of the language for the local variables!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[24930716-cu38739805]-[-1966388331]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes @BasileStarynkevitch,these are not initialised to 0 or null by default.Infact,it happens in none of the language for the local variables!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"BasileStarynkevitch",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "languag":1,
                        "basil":1,
                        "local":1,
                        "starynkevitch":1,
                        "infact":1,
                        "variabl":1,
                        "initialis":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-07-24",
      "lastActivityDate":"2014-07-24",
      "lastEditDate":"2014-07-24",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":841108,
        "displayName":"Basile Starynkevitch",
        "reputation":87023
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Java is not <em>C</em> ... every piece of data (even static variables) gets implicitly initialized (often to <code>null</code> or 0), and the compiler won't accept uninitiliazed local variables. Found <a href=\"http://blog.ajduke.in/2012/03/25/variable-initialization-and-default-values/\"rel=\"nofollow\">this explanation</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[24930716]-[1122441212]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Java is not <em>C</em> ... every piece of data (even static variables) gets implicitly initialized (often to <code>null</code> or 0), and the compiler won't accept uninitiliazed local variables. Found <a href=\"http://blog.ajduke.in/2012/03/25/variable-initialization-and-default-values/\"rel=\"nofollow\">this explanation</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "accept":1,
                    "data":1,
                    "local":1,
                    "rel":1,
                    "ajduk":1,
                    "code":2,
                    "found":1,
                    "explan":1,
                    "blog":1,
                    "uninitiliaz":1,
                    "nofollow":1,
                    "implicit":1,
                    "valu":1,
                    "piec":1,
                    "initi":2,
                    "compil":1,
                    "variabl":3,
                    "href":1,
                    "http":1,
                    "won":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}