{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":24383212,
    "title":"Apache nutch performance tuning for whole web crawling",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":37726642,
        "postId":24383212,
        "creationDate":"2014-06-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2225199,
          "displayName":"nimeshjm",
          "reputation":800
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Is the target site suffering from performance issues?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24383212-cu37726642]-[-448315845]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Is the target site suffering from performance issues?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "site":1,
                      "issu":1,
                      "perform":1,
                      "target":1,
                      "suffer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":37727324,
        "postId":24383212,
        "creationDate":"2014-06-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2225199,
          "displayName":"nimeshjm",
          "reputation":800
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"One thing you can try is to lower the fetcher threads from 100 to about 10 and see if you still have this problem."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24383212-cu37727324]-[-2147429568]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"One thing you can try is to lower the fetcher threads from 100 to about 10 and see if you still have this problem."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "fetcher":1,
                      "problem":1,
                      "thing":1,
                      "lower":1,
                      "thread":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":37746882,
        "postId":24383212,
        "creationDate":"2014-06-25",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1727204,
          "displayName":"Ali n",
          "reputation":160
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"No, the target websites are OK. I already reduced the threads number, performance will be reduced at the beginning and it is same as before at the end. (performance was reduced when the time passes)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[24383212-cu37746882]-[257708044]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"No, the target websites are OK. I already reduced the threads number, performance will be reduced at the beginning and it is same as before at the end. (performance was reduced when the time passes)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "number":1,
                      "begin":1,
                      "reduc":3,
                      "websit":1,
                      "thread":1,
                      "perform":2,
                      "pass":1,
                      "end":1,
                      "target":1,
                      "time":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "performance",
      "web-crawler",
      "nutch"
    ],
    "creationDate":"2014-06-24",
    "lastActivityDate":"2014-06-24",
    "score":0,
    "viewCount":248,
    "owner":{
      "type":"StackOverflowUser",
      "id":1727204,
      "displayName":"Ali n",
      "reputation":160
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am going to use nutch for crawling around 300 web pages. The crawl works fine until around 6 mins! after it starts to becomes slower and slower until it drops to near zero performance. I check the log and it seems that the number of spinWaiting threads increases with passing the time. Would you please guide me through this problem?!</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[24383212]-[1453676182]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am going to use nutch for crawling around 300 web pages. The crawl works fine until around 6 mins! after it starts to becomes slower and slower until it drops to near zero performance. I check the log and it seems that the number of spinWaiting threads increases with passing the time. Would you please guide me through this problem?!</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"spinWaiting",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "number":1,
                  "wait":1,
                  "guid":1,
                  "problem":1,
                  "nutch":1,
                  "page":1,
                  "spin":1,
                  "min":1,
                  "work":1,
                  "crawl":2,
                  "drop":1,
                  "web":1,
                  "thread":1,
                  "check":1,
                  "slower":2,
                  "perform":1,
                  "increas":1,
                  "pass":1,
                  "fine":1,
                  "time":1,
                  "start":1,
                  "log":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Here is my nutch-site.xml config file:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[24383212]-[-1285649678]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Here is my nutch-site.xml config file:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "nutch":1,
                  "site":1,
                  "config":1,
                  "xml":1,
                  "file":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":" &lt;property&gt; &lt;name&gt;plugin.folders&lt;/name&gt; &lt;value&gt;/home/nutch/workspace/trunk/src/plugin&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;http.agent.name&lt;/name&gt; &lt;value&gt;nutch-test&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;parser.skip.truncated&lt;/name&gt; &lt;value&gt;false&lt;/value&gt; &lt;description&gt;Boolean value for whether we should skip parsing for truncated documents. By default this property is activated due to extremely high levels of CPU which parsing can sometimes take. &lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;db.ignore.external.links&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;description&gt;If true, outlinks leading from a page to external hosts will be ignored. This is an effective way to limit the crawl to include only initially injected hosts, without creating complex URLFilters. &lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fetcher.server.delay&lt;/name&gt; &lt;value&gt;1.0&lt;/value&gt; &lt;description&gt;The number of seconds the fetcher will delay between successive requests to the same server.&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;http.max.delays&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; &lt;description&gt;The number of times a thread will delay when trying to fetch a page. Each time it finds that a host is busy, it will wait fetcher.server.delay. After http.max.delays attepts, it will give up on the page for now.&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fetcher.server.min.delay&lt;/name&gt; &lt;value&gt;0.5&lt;/value&gt; &lt;description&gt;The minimum number of seconds the fetcher will delay between successive requests to the same server. This value is applicable ONLY if fetcher.threads.per.host is greater than 1 (i.e. the host blocking is turned off).&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fetcher.threads.per.host&lt;/name&gt; &lt;value&gt;3&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fetcher.threads.fetch&lt;/name&gt; &lt;value&gt;100&lt;/value&gt; &lt;description&gt;The number of FetcherThreads the fetcher should use. This is also determines the maximum number of requests that are made at once (each FetcherThread handles one connection). The total number of threads running in distributed mode will be the number of fetcher threads * number of nodes as fetcher has one map task per node. &lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;generate.max.count&lt;/name&gt; &lt;value&gt;10000&lt;/value&gt; &lt;description&gt;The maximum number of urls in a single fetchlist. -1 if unlimited. The urls are counted according to the value of the parameter generator.count.mode. &lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fetcher.max.crawl.delay&lt;/name&gt; &lt;value&gt;10&lt;/value&gt; &lt;description&gt; If the Crawl-Delay in robots.txt is set to greater than this value (in seconds) then the fetcher will skip this page, generating an error report. If set to -1 the fetcher will never skip such pages and will wait the amount of time retrieved from robots.txt Crawl-Delay, however long that might be. &lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;generate.max.per.host&lt;/name&gt; &lt;value&gt;3&lt;/value&gt; &lt;/property&gt; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[24383212]-[-434790108]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"plugin.folders"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"/home/nutch/workspace/trunk/src/plugin"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"http.agent.name"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"nutch-test"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"parser.skip.truncated"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"false"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"Boolean value for whether we should skip parsing for truncated documents. By default this property is activated due to extremely high levels of CPU which parsing can sometimes take. "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"db.ignore.external.links"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"true"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"If true, outlinks leading from a page to external hosts will be ignored. This is an effective way to limit the crawl to include only initially injected hosts, without creating complex URLFilters. "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"fetcher.server.delay"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"1.0"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"The number of seconds the fetcher will delay between successive requests to the same server."
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"http.max.delays"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"2"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"The number of times a thread will delay when trying to fetch a page. Each time it finds that a host is busy, it will wait fetcher.server.delay. After http.max.delays attepts, it will give up on the page for now."
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"fetcher.server.min.delay"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"0.5"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"The minimum number of seconds the fetcher will delay between successive requests to the same server. This value is applicable ONLY if fetcher.threads.per.host is greater than 1 (i.e. the host blocking is turned off)."
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"fetcher.threads.per.host"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"3"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"fetcher.threads.fetch"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"100"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"The number of FetcherThreads the fetcher should use. This is also determines the maximum number of requests that are made at once (each FetcherThread handles one connection). The total number of threads running in distributed mode will be the number of fetcher threads * number of nodes as fetcher has one map task per node. "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"generate.max.count"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"10000"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"The maximum number of urls in a single fetchlist. -1 if unlimited. The urls are counted according to the value of the parameter generator.count.mode. "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"fetcher.max.crawl.delay"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"10"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"description"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":" If the Crawl-Delay in robots.txt is set to greater than this value (in seconds) then the fetcher will skip this page, generating an error report. If set to -1 the fetcher will never skip such pages and will wait the amount of time retrieved from robots.txt Crawl-Delay, however long that might be. "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"generate.max.per.host"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"value"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"3"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                }
              ]
            },
            "rawText":" <property> <name>plugin.folders</name> <value>/home/nutch/workspace/trunk/src/plugin</value> </property> <property> <name>http.agent.name</name> <value>nutch-test</value> </property> <property> <name>parser.skip.truncated</name> <value>false</value> <description>Boolean value for whether we should skip parsing for truncated documents. By default this property is activated due to extremely high levels of CPU which parsing can sometimes take. </description> </property> <property> <name>db.ignore.external.links</name> <value>true</value> <description>If true, outlinks leading from a page to external hosts will be ignored. This is an effective way to limit the crawl to include only initially injected hosts, without creating complex URLFilters. </description> </property> <property> <name>fetcher.server.delay</name> <value>1.0</value> <description>The number of seconds the fetcher will delay between successive requests to the same server.</description> </property> <property> <name>http.max.delays</name> <value>2</value> <description>The number of times a thread will delay when trying to fetch a page. Each time it finds that a host is busy, it will wait fetcher.server.delay. After http.max.delays attepts, it will give up on the page for now.</description> </property> <property> <name>fetcher.server.min.delay</name> <value>0.5</value> <description>The minimum number of seconds the fetcher will delay between successive requests to the same server. This value is applicable ONLY if fetcher.threads.per.host is greater than 1 (i.e. the host blocking is turned off).</description> </property> <property> <name>fetcher.threads.per.host</name> <value>3</value> </property> <property> <name>fetcher.threads.fetch</name> <value>100</value> <description>The number of FetcherThreads the fetcher should use. This is also determines the maximum number of requests that are made at once (each FetcherThread handles one connection). The total number of threads running in distributed mode will be the number of fetcher threads * number of nodes as fetcher has one map task per node. </description> </property> <property> <name>generate.max.count</name> <value>10000</value> <description>The maximum number of urls in a single fetchlist. -1 if unlimited. The urls are counted according to the value of the parameter generator.count.mode. </description> </property> <property> <name>fetcher.max.crawl.delay</name> <value>10</value> <description> If the Crawl-Delay in robots.txt is set to greater than this value (in seconds) then the fetcher will skip this page, generating an error report. If set to -1 the fetcher will never skip such pages and will wait the amount of time retrieved from robots.txt Crawl-Delay, however long that might be. </description> </property> <property> <name>generate.max.per.host</name> <value>3</value> </property> ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":2,
                  "number":9,
                  "find":1,
                  "properti":25,
                  "ignor":1,
                  "singl":1,
                  "descript":16,
                  "test":1,
                  "due":1,
                  "lead":1,
                  "count":3,
                  "determin":1,
                  "delay":11,
                  "success":2,
                  "wait":2,
                  "task":1,
                  "request":3,
                  "server":5,
                  "connect":1,
                  "map":1,
                  "url":2,
                  "fetcher":16,
                  "retriev":1,
                  "document":1,
                  "nutch":2,
                  "parser":1,
                  "host":7,
                  "run":1,
                  "effect":1,
                  "page":5,
                  "set":2,
                  "min":1,
                  "skip":4,
                  "attept":1,
                  "agent":1,
                  "total":1,
                  "amount":1,
                  "crawl":4,
                  "txt":2,
                  "unlimit":1,
                  "includ":1,
                  "maximum":2,
                  "home":1,
                  "block":1,
                  "second":3,
                  "thread":8,
                  "pars":2,
                  "paramet":1,
                  "folder":1,
                  "activ":1,
                  "max":5,
                  "workspac":1,
                  "truncat":2,
                  "busi":1,
                  "error":1,
                  "link":1,
                  "cpu":1,
                  "src":1,
                  "extern":2,
                  "fetchlist":1,
                  "extrem":1,
                  "applic":1,
                  "give":1,
                  "true":2,
                  "fetch":2,
                  "turn":1,
                  "robot":2,
                  "urlfilt":1,
                  "inject":1,
                  "mode":2,
                  "generat":4,
                  "report":1,
                  "fals":1,
                  "outlink":1,
                  "initi":1,
                  "node":2,
                  "time":3,
                  "minimum":1,
                  "trunk":1,
                  "greater":2,
                  "http":3,
                  "creat":1,
                  "distribut":1,
                  "limit":1,
                  "made":1,
                  "handl":1,
                  "high":1,
                  "complex":1,
                  "level":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Best regards.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[24383212]-[-2038571539]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Best regards.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    
  ]
}