{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":10767181,
    "title":"Are object variables pointers in Java?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":13997757,
        "postId":10767181,
        "creationDate":"2012-05-26",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":139010,
          "displayName":"Matt Ball",
          "reputation":181784
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"In Java, the term is &quot;reference,&quot; not &quot;pointer,&quot; though you can think of them as basically the same thing."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10767181-cu13997757]-[1301570715]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"In Java, the term is &quot;reference,&quot; not &quot;pointer,&quot; though you can think of them as basically the same thing."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "pointer":1,
                      "term":1,
                      "thing":1,
                      "refer":1,
                      "quot":4,
                      "basic":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "android",
      "oop",
      "object"
    ],
    "creationDate":"2012-05-26",
    "lastActivityDate":"2013-05-03",
    "lastEditDate":"2013-05-03",
    "score":0,
    "viewCount":242,
    "owner":{
      "type":"StackOverflowUser",
      "id":1315692,
      "displayName":"Geeks On Hugs",
      "reputation":641
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Are object variables pointers? If I declare an object variable and then assign another object to it, do I have one object or two?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[10767181]-[1140357118]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Are object variables pointers? If I declare an object variable and then assign another object to it, do I have one object or two?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "pointer":1,
                  "assign":1,
                  "declar":1,
                  "object":4,
                  "variabl":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Specifically what I need to do is in Android, I want to capture a location object and set it aside to compare to the next location object that comes along.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[10767181]-[2057975645]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Specifically what I need to do is in Android, I want to capture a location object and set it aside to compare to the next location object that comes along.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "set":1,
                  "object":2,
                  "captur":1,
                  "compar":1,
                  "specif":1,
                  "locat":2,
                  "android":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":10767191,
      "questionId":10767181,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":13997789,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1315692,
            "displayName":"Geeks On Hugs",
            "reputation":641
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"thank you, that's what I thought but I thought I heard at one point that java doesn't have pointers so wasn't sure how that would work"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997789]-[396933256]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"thank you, that's what I thought but I thought I heard at one point that java doesn't have pointers so wasn't sure how that would work"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "heard":1,
                        "point":1,
                        "pointer":1,
                        "thought":2,
                        "wasn":1,
                        "work":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997808,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":240443,
            "displayName":"Amadan",
            "reputation":54264
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It doesn't have pointers as one understands them in C - there is no pointer arythmetic, for one thing. Everything is dealt with transparently. You never need to dereference a reference. References are pointers made safe."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997808]-[-75362888]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It doesn't have pointers as one understands them in C - there is no pointer arythmetic, for one thing. Everything is dealt with transparently. You never need to dereference a reference. References are pointers made safe."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "pointer":3,
                        "derefer":1,
                        "understand":1,
                        "thing":1,
                        "safe":1,
                        "arythmet":1,
                        "transpar":1,
                        "dealt":1,
                        "refer":2,
                        "made":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997810,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1315692,
            "displayName":"Geeks On Hugs",
            "reputation":641
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I'll have to check it complete in a few minutes it won't let me know. May I ask a follow up here or should I post this seperate? I can figure this out easily enough but if you know...in android when I receive a location object, and then the location is updated is it the same object or a new object?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997810]-[1765417768]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I'll have to check it complete in a few minutes it won't let me know. May I ask a follow up here or should I post this seperate? I can figure this out easily enough but if you know...in android when I receive a location object, and then the location is updated is it the same object or a new object?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "minut":1,
                        "post":1,
                        "receiv":1,
                        "seper":1,
                        "updat":1,
                        "object":3,
                        "easili":1,
                        "check":1,
                        "figur":1,
                        "complet":1,
                        "won":1,
                        "locat":2,
                        "android":1,
                        "follow":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997825,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":240443,
            "displayName":"Amadan",
            "reputation":54264
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Sorry, I answered a Java question, I have no clue about Android platform :P"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997825]-[291802292]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Sorry, I answered a Java question, I have no clue about Android platform :P"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "answer":1,
                        "platform":1,
                        "clue":1,
                        "android":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997827,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1315692,
            "displayName":"Geeks On Hugs",
            "reputation":641
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"i see, thank you for clarifying...so if I create an object reference it won't get rid of that object till I'm done with it, correct?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997827]-[-771977815]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"i see, thank you for clarifying...so if I create an object reference it won't get rid of that object till I'm done with it, correct?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "rid":1,
                        "till":1,
                        "correct":1,
                        "object":2,
                        "refer":1,
                        "creat":1,
                        "clarifi":1,
                        "won":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997851,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":240443,
            "displayName":"Amadan",
            "reputation":54264
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Objects are garbage-collected; if there is no way to access the object any more, it will automagically disappear. No action is needed on the programmer's part. That means, if you put an object into a local variable and never store it anywhere else, it will be forgotten some time after you exited the local scope."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997851]-[872057478]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Objects are garbage-collected; if there is no way to access the object any more, it will automagically disappear. No action is needed on the programmer's part. That means, if you put an object into a local variable and never store it anywhere else, it will be forgotten some time after you exited the local scope."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ExpressionStatement",
                        "expression":{
                          "type":"BinaryExpressionNode",
                          "operator":{
                            "type":"OperatorNode",
                            "symbol":"-",
                            "comments":[
                              
                            ]
                          },
                          "left":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"garbage",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "right":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"collected",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "forgotten":1,
                        "disappear":1,
                        "scope":1,
                        "local":2,
                        "mean":1,
                        "store":1,
                        "object":3,
                        "need":1,
                        "programm":1,
                        "exit":1,
                        "put":1,
                        "automag":1,
                        "collect":1,
                        "time":1,
                        "part":1,
                        "variabl":1,
                        "action":1,
                        "garbag":1,
                        "access":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13997857,
          "postId":10767191,
          "creationDate":"2012-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1315692,
            "displayName":"Geeks On Hugs",
            "reputation":641
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"no worries regarding android, I'll figure that out :) thanks for your help in understanding this :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10767191-cu13997857]-[-1917425196]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"no worries regarding android, I'll figure that out :) thanks for your help in understanding this :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "understand":1,
                        "android":1,
                        "worri":1,
                        "figur":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-05-26",
      "lastActivityDate":"2012-05-26",
      "score":3,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":240443,
        "displayName":"Amadan",
        "reputation":54264
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You have one object, with two references. Specifically,</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10767191]-[-1513867787]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You have one object, with two references. Specifically,</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "object":1,
                    "refer":1,
                    "specif":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"int[] a = {1, 2}; int[] b = a; a[0] = 17; System.out.println(b[0]); // 17 "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10767191]-[868256612]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"int[] a = {1, 2}; int[] "
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"=",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"b",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"a",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"=",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"ArrayAccessSelectorNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "dimExpression":{
                          "type":"DimExpressionNode",
                          "argument":{
                            "type":"LiteralNode",
                            "node":{
                              "type":"IntegerLiteralNode",
                              "valueRep":"0"
                            },
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"LiteralNode",
                        "node":{
                          "type":"IntegerLiteralNode",
                          "valueRep":"17"
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"System",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"out",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"println",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"ArrayAccessSelectorNode",
                          "identifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"b",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "dimExpression":{
                            "type":"DimExpressionNode",
                            "argument":{
                              "type":"LiteralNode",
                              "node":{
                                "type":"IntegerLiteralNode",
                                "valueRep":"0"
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      {
                        "text":"// 17 \n"
                      }
                    ]
                  }
                ]
              },
              "rawText":"int[] a = {1, 2}; int[] b = a; a[0] = 17; Systemoutprintln(b[0]); // 17 \n",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "systemoutprintln":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"out",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"println",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"ArrayAccessSelectorNode",
                            "identifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"b",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "dimExpression":{
                              "type":"DimExpressionNode",
                              "argument":{
                                "type":"LiteralNode",
                                "node":{
                                  "type":"IntegerLiteralNode",
                                  "valueRep":"0"
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        {
                          "text":"// 17 \n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You would need to explicitly clone an object (if it is <code>Cloneable</code>) or copy its contents in some other way to create a non-shared new instance.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10767191]-[-740166751]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You would need to explicitly clone an object (if it is <code>Cloneable</code>) or copy its contents in some other way to create a non-shared new instance.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "cloneabl":1,
                    "object":1,
                    "code":2,
                    "share":1,
                    "clone":1,
                    "content":1,
                    "explicit":1,
                    "creat":1,
                    "copi":1,
                    "instanc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}