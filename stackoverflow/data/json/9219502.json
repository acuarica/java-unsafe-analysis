{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":9219502,
    "title":"How to keep track of my internal frames?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":11609499,
        "postId":9219502,
        "creationDate":"2012-02-09",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":230513,
          "displayName":"trashgod",
          "reputation":146248
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"This [answer](http://stackoverflow.com/a/2741726/230513) cites an example that uses `Action` to track multiple internal frames."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9219502-cu11609499]-[328265494]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"This [answer](http://stackoverflow.com/a/2741726/230513) cites an example that uses `Action` to track multiple internal frames."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "track":1,
                      "frame":1,
                      "stackoverflow":1,
                      "cite":1,
                      "answer":1,
                      "http":1,
                      "multipl":1,
                      "intern":1,
                      "action":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":11618198,
        "postId":9219502,
        "creationDate":"2012-02-10",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1200643,
          "displayName":"Arjhun",
          "reputation":1
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@mKorbel I have edited my question. I added an simple example of the problem. Hope this helps!"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9219502-cu11618198]-[1074587660]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@mKorbel I have edited my question. I added an simple example of the problem. Hope this helps!"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"mKorbel",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "simpl":1,
                      "problem":1,
                      "edit":1,
                      "help":1,
                      "korbel":1,
                      "hope":1,
                      "ad":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":11608683,
        "postId":9219502,
        "creationDate":"2012-02-09",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1181050,
          "displayName":"Dodd10x",
          "reputation":1204
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"You won't create a new FrameListIntFrame after the first one because you check to make sure that it's not null. It looks like you are only entering that if statement once."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9219502-cu11608683]-[7542963]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"You won't create a new FrameListIntFrame after the first one because you check to make sure that it's not null. It looks like you are only entering that if statement once."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"FrameListIntFrame",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "enter":1,
                      "statement":1,
                      "frame":2,
                      "check":1,
                      "make":1,
                      "creat":1,
                      "won":1,
                      "list":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"FrameListIntFrame",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":11609014,
        "postId":9219502,
        "creationDate":"2012-02-09",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":714968,
          "displayName":"mKorbel",
          "reputation":93498
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"it could be nice question, please edit your post with a http://sscce.org/"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9219502-cu11609014]-[-868236716]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"it could be nice question, please edit your post with a http://sscce.org/"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "post":1,
                      "nice":1,
                      "edit":1,
                      "org":1,
                      "http":1,
                      "sscce":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "swing",
      "jtable",
      "jinternalframe"
    ],
    "creationDate":"2012-02-09",
    "lastActivityDate":"2012-02-10",
    "lastEditDate":"2012-02-10",
    "score":0,
    "viewCount":637,
    "owner":{
      "type":"StackOverflowUser",
      "id":1200643,
      "displayName":"Arjhun",
      "reputation":1
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>This example code is a short version of my actual program:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9219502]-[356735394]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>This example code is a short version of my actual program:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "code":1,
                  "actual":1,
                  "program":1,
                  "version":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"import java.awt.BorderLayout; import java.awt.EventQueue; import javax.swing.*; public class Example extends JFrame { private JPanel contentPane; private JTable table; /** * Launch the application. */ public static void main(String[] args) { EventQueue.invokeLater(new Runnable() { public void run() { try { Example frame = new Example(); frame.setVisible(true); } catch (Exception e) { e.printStackTrace(); } } }); } /** * Create the frame. */ public Example() { //what to do @ close setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); setBounds(100, 100, 792, 585); //content pane contentPane = new JPanel(); contentPane.setBorder(new EmptyBorder(5, 5, 5, 5)); contentPane.setLayout(new BorderLayout(0, 0)); setContentPane(contentPane); //create desktop pane add it to content pane final JDesktopPane desktopPane = new JDesktopPane(); contentPane.add(desktopPane, BorderLayout.CENTER); //create Int Frame with table JInternalFrame tableIntFrame = new JInternalFrame(&quot;TableIntFrame&quot;); tableIntFrame.setBounds(31, 29, 300, 205); desktopPane.add(tableIntFrame); //create the table table = new JTable(); table.setFillsViewportHeight(true); table.setModel(new DefaultTableModel( new Object[][] { {&quot;Row 0 (click for more info)&quot;}, {&quot;Row 1 (click for more info)&quot;}, }, new String[] { &quot;Collumn 0&quot; } )); //add the table to a ScrollPane JScrollPane scrollPane = new JScrollPane(); scrollPane.setViewportView(table); //add Scrollpane to table tableIntFrame.getContentPane().add(scrollPane, BorderLayout.CENTER); tableIntFrame.setVisible(true); //Listen for events on selection table.getSelectionModel().addListSelectionListener(new ListSelectionListener() { public void valueChanged(ListSelectionEvent e) { // only fires ones if (! e.getValueIsAdjusting()) { //create info frame with title set to selectedrow index createFrame(desktopPane, table.getSelectedRow()+&quot;&quot;); } } }); // Allow only one row to be selected. table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); } //Creates an int frame with the title set to the row private void createFrame(JDesktopPane desktopPane, String selectedRow){ JInternalFrame InfoIntFrame = new JInternalFrame(&quot;Info Row &quot;+selectedRow); InfoIntFrame.setBounds(425, 44, 183, 72); //add to desktop desktopPane.add(InfoIntFrame); //set visible InfoIntFrame.setVisible(true); } } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[9219502]-[-498865031]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"CompilationUnitNode",
                  "imports":[
                    {
                      "type":"ImportDeclarationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"awt",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"BorderLayout",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "isStatic":false,
                      "isOnDemand":false,
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ImportDeclarationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"awt",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"EventQueue",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "isStatic":false,
                      "isOnDemand":false,
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ImportDeclarationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"javax",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"swing",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "isStatic":false,
                      "isOnDemand":true,
                      "comments":[
                        
                      ]
                    }
                  ],
                  "typeDeclarations":[
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        {
                          "type":"KeywordModifierNode",
                          "value":"public",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Example",
                        "comments":[
                          
                        ]
                      },
                      "superTypes":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"JFrame",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "body":{
                        "type":"ClassBodyNode",
                        "declarations":[
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"contentPane",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"JPanel",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"table",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"JTable",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              {
                                "text":"/** * Launch the application. */"
                              }
                            ]
                          },
                          {
                            "type":"MethodDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"public",
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"KeywordModifierNode",
                                "value":"static",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "returnType":{
                              "type":"PrimitiveTypeNode",
                              "name":"void",
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"main",
                              "comments":[
                                
                              ]
                            },
                            "parameters":{
                              "type":"FormalParametersNode",
                              "parameters":{
                                "type":"FormalParameterDeclsNode",
                                "modifiers":[
                                  
                                ],
                                "parameterType":{
                                  "type":"ArrayTypeNode",
                                  "typeNode":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "depth":[
                                    {
                                      "type":"ArrayDimensionNode",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ]
                                },
                                "nextDeclarator":{
                                  "type":"AdditionalFormalParameterDeclNode",
                                  "variableDeclarator":{
                                    "type":"VariableDeclaratorNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"args",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "arrayDepth":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              },
                              "comments":[
                                
                              ]
                            },
                            "arrayReturnType":[
                              
                            ],
                            "body":{
                              "type":"BlockNode",
                              "statements":[
                                {
                                  "type":"ExpressionStatement",
                                  "expression":{
                                    "type":"MethodInvocationNode",
                                    "qualifiedIdentifier":{
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"EventQueue",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"invokeLater",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "args":{
                                      "type":"ExpressionListNode",
                                      "arguments":[
                                        {
                                          "type":"ConstructorCreatorNode",
                                          "creatorType":{
                                            "type":"ReferenceTypeNode",
                                            "ids":[
                                              {
                                                "type":"ParameterizedTypeNode",
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"Runnable",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "expressionArgs":{
                                            "type":"ExpressionListNode",
                                            "arguments":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "classBody":{
                                            "type":"ClassBodyNode",
                                            "declarations":[
                                              {
                                                "type":"MethodDeclaratorNode",
                                                "modifiers":[
                                                  {
                                                    "type":"KeywordModifierNode",
                                                    "value":"public",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "returnType":{
                                                  "type":"PrimitiveTypeNode",
                                                  "name":"void",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"run",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "parameters":{
                                                  "type":"FormalParametersNode",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "arrayReturnType":[
                                                  
                                                ],
                                                "body":{
                                                  "type":"BlockNode",
                                                  "statements":[
                                                    {
                                                      "type":"TryCatchStatementNode",
                                                      "block":{
                                                        "type":"BlockNode",
                                                        "statements":[
                                                          {
                                                            "type":"LocalVariableDeclarationStatementNode",
                                                            "modifiers":[
                                                              
                                                            ],
                                                            "declarators":{
                                                              "type":"VariableDeclaratorsNode",
                                                              "declarators":[
                                                                {
                                                                  "type":"VariableDeclaratorNode",
                                                                  "identifier":{
                                                                    "type":"IdentifierNode",
                                                                    "name":"frame",
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  },
                                                                  "arrayDepth":[
                                                                    
                                                                  ],
                                                                  "assignment":{
                                                                    "type":"VariableAssignmentNode",
                                                                    "variableAssignment":{
                                                                      "type":"VariableExpressionInitNode",
                                                                      "expression":{
                                                                        "type":"ConstructorCreatorNode",
                                                                        "creatorType":{
                                                                          "type":"ReferenceTypeNode",
                                                                          "ids":[
                                                                            {
                                                                              "type":"ParameterizedTypeNode",
                                                                              "identifier":{
                                                                                "type":"IdentifierNode",
                                                                                "name":"Example",
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "expressionArgs":{
                                                                          "type":"ExpressionListNode",
                                                                          "arguments":[
                                                                            
                                                                          ],
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      }
                                                                    },
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  },
                                                                  "varType":{
                                                                    "type":"ReferenceTypeNode",
                                                                    "ids":[
                                                                      {
                                                                        "type":"ParameterizedTypeNode",
                                                                        "identifier":{
                                                                          "type":"IdentifierNode",
                                                                          "name":"Example",
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "labels":[
                                                              
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          {
                                                            "type":"ExpressionStatement",
                                                            "expression":{
                                                              "type":"MethodInvocationNode",
                                                              "qualifiedIdentifier":{
                                                                "type":"QualifiedIdentifierNode",
                                                                "identifiers":[
                                                                  {
                                                                    "type":"IdentifierNode",
                                                                    "name":"frame",
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "identifier":{
                                                                "type":"IdentifierNode",
                                                                "name":"setVisible",
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "args":{
                                                                "type":"ExpressionListNode",
                                                                "arguments":[
                                                                  {
                                                                    "type":"LiteralNode",
                                                                    "node":{
                                                                      "type":"BooleanLiteralNode",
                                                                      "valueRep":"true"
                                                                    },
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "labels":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "labels":[
                                                          
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "catches":[
                                                        {
                                                          "type":"CatchClauseNode",
                                                          "modifiers":[
                                                            
                                                          ],
                                                          "catchType":{
                                                            "type":"CatchTypeNode",
                                                            "identifiers":[
                                                              {
                                                                "type":"QualifiedIdentifierNode",
                                                                "identifiers":[
                                                                  {
                                                                    "type":"IdentifierNode",
                                                                    "name":"Exception",
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"e",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "block":{
                                                            "type":"BlockNode",
                                                            "statements":[
                                                              {
                                                                "type":"ExpressionStatement",
                                                                "expression":{
                                                                  "type":"MethodInvocationNode",
                                                                  "qualifiedIdentifier":{
                                                                    "type":"QualifiedIdentifierNode",
                                                                    "identifiers":[
                                                                      {
                                                                        "type":"IdentifierNode",
                                                                        "name":"e",
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  },
                                                                  "identifier":{
                                                                    "type":"IdentifierNode",
                                                                    "name":"printStackTrace",
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  },
                                                                  "args":{
                                                                    "type":"ExpressionListNode",
                                                                    "arguments":[
                                                                      
                                                                    ],
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  },
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "labels":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "labels":[
                                                              
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "labels":[
                                                        
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "labels":[
                                                    
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "labels":[
                                    
                                  ]
                                }
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                {
                                  "text":"/** * Create the frame. */"
                                }
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"public",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Example",
                              "comments":[
                                
                              ]
                            },
                            "parameters":{
                              "type":"FormalParametersNode",
                              "comments":[
                                
                              ]
                            },
                            "arrayReturnType":[
                              
                            ],
                            "body":{
                              "type":"BlockNode",
                              "statements":[
                                
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                {
                                  "text":"//what to do @ close setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); setBounds(100, 100, 792, 585); //content pane contentPane = new JPanel(); contentPane.setBorder(new EmptyBorder(5, 5, 5, 5)); contentPane.setLayout(new BorderLayout(0, 0)); setContentPane(contentPane); //create desktop pane add it to content pane final JDesktopPane desktopPane = new JDesktopPane(); contentPane.add(desktopPane, BorderLayout.CENTER); //create Int Frame with table JInternalFrame tableIntFrame = new JInternalFrame(\"TableIntFrame\"); tableIntFrame.setBounds(31, 29, 300, 205); desktopPane.add(tableIntFrame); //create the table table = new JTable(); table.setFillsViewportHeight(true); table.setModel(new DefaultTableModel( new Object[][] { {\"Row 0 (click for more info)\"}, {\"Row 1 (click for more info)\"}, }, new String[] { \"Collumn 0\" } )); //add the table to a ScrollPane JScrollPane scrollPane = new JScrollPane(); scrollPane.setViewportView(table); //add Scrollpane to table tableIntFrame.getContentPane().add(scrollPane, BorderLayout.CENTER); tableIntFrame.setVisible(true); //Listen for events on selection table.getSelectionModel().addListSelectionListener(new ListSelectionListener() { public void valueChanged(ListSelectionEvent e) { // only fires ones if (! e.getValueIsAdjusting()) { //create info frame with title set to selectedrow index createFrame(desktopPane, table.getSelectedRow()+\"\"); } } }); // Allow only one row to be selected. table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); } //Creates an int frame with the title set to the row private void createFrame(JDesktopPane desktopPane, String selectedRow){ JInternalFrame InfoIntFrame = new JInternalFrame(\"Info Row \"+selectedRow); InfoIntFrame.setBounds(425, 44, 183, 72); //add to desktop desktopPane.add(InfoIntFrame); //set visible InfoIntFrame.setVisible(true); } } \n"
                                }
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                }
              ]
            },
            "rawText":"import java.awt.BorderLayout; import java.awt.EventQueue; import javax.swing.*; public class Example extends JFrame { private JPanel contentPane; private JTable table; /** * Launch the application. */ public static void main(String[] args) { EventQueue.invokeLater(new Runnable() { public void run() { try { Example frame = new Example(); frame.setVisible(true); } catch (Exception e) { e.printStackTrace(); } } }); } /** * Create the frame. */ public Example() { //what to do @ close setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); setBounds(100, 100, 792, 585); //content pane contentPane = new JPanel(); contentPane.setBorder(new EmptyBorder(5, 5, 5, 5)); contentPane.setLayout(new BorderLayout(0, 0)); setContentPane(contentPane); //create desktop pane add it to content pane final JDesktopPane desktopPane = new JDesktopPane(); contentPane.add(desktopPane, BorderLayout.CENTER); //create Int Frame with table JInternalFrame tableIntFrame = new JInternalFrame(\"TableIntFrame\"); tableIntFrame.setBounds(31, 29, 300, 205); desktopPane.add(tableIntFrame); //create the table table = new JTable(); table.setFillsViewportHeight(true); table.setModel(new DefaultTableModel( new Object[][] { {\"Row 0 (click for more info)\"}, {\"Row 1 (click for more info)\"}, }, new String[] { \"Collumn 0\" } )); //add the table to a ScrollPane JScrollPane scrollPane = new JScrollPane(); scrollPane.setViewportView(table); //add Scrollpane to table tableIntFrame.getContentPane().add(scrollPane, BorderLayout.CENTER); tableIntFrame.setVisible(true); //Listen for events on selection table.getSelectionModel().addListSelectionListener(new ListSelectionListener() { public void valueChanged(ListSelectionEvent e) { // only fires ones if (! e.getValueIsAdjusting()) { //create info frame with title set to selectedrow index createFrame(desktopPane, table.getSelectedRow()+\"\"); } } }); // Allow only one row to be selected. table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); } //Creates an int frame with the title set to the row private void createFrame(JDesktopPane desktopPane, String selectedRow){ JInternalFrame InfoIntFrame = new JInternalFrame(\"Info Row \"+selectedRow); InfoIntFrame.setBounds(425, 44, 183, 72); //add to desktop desktopPane.add(InfoIntFrame); //set visible InfoIntFrame.setVisible(true); } } \n...\n}...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "launch":1,
                  "desktop":8,
                  "chang":1,
                  "singl":1,
                  "scrollpan":1,
                  "scroll":4,
                  "trace":1,
                  "fire":1,
                  "model":4,
                  "border":6,
                  "jscroll":2,
                  "event":4,
                  "queue":2,
                  "center":2,
                  "viewport":2,
                  "print":1,
                  "jpanel":2,
                  "run":1,
                  "set":17,
                  "jdesktop":3,
                  "selectedrow":1,
                  "invok":1,
                  "jframe":2,
                  "height":1,
                  "titl":2,
                  "visibl":4,
                  "row":8,
                  "swing":1,
                  "main":1,
                  "jtabl":2,
                  "info":8,
                  "frame":22,
                  "object":1,
                  "pane":26,
                  "adjust":1,
                  "oper":1,
                  "select":12,
                  "tabl":19,
                  "javax":1,
                  "bound":3,
                  "listen":3,
                  "click":2,
                  "fill":1,
                  "empti":1,
                  "collumn":1,
                  "applic":1,
                  "stack":1,
                  "content":10,
                  "runnabl":1,
                  "true":4,
                  "exit":1,
                  "mode":1,
                  "layout":5,
                  "close":3,
                  "creat":8,
                  "jintern":4,
                  "add":9,
                  "awt":2,
                  "arg":1,
                  "list":4,
                  "index":1,
                  "view":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"awt",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"BorderLayout",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"awt",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"EventQueue",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"javax",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"swing",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JTable",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JPanel",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Runnable",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JFrame",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Example",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  {
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"EventQueue",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"invokeLater",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Runnable",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "classBody":{
                            "type":"ClassBodyNode",
                            "declarations":[
                              {
                                "type":"MethodDeclaratorNode",
                                "modifiers":[
                                  {
                                    "type":"KeywordModifierNode",
                                    "value":"public",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "returnType":{
                                  "type":"PrimitiveTypeNode",
                                  "name":"void",
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"run",
                                  "comments":[
                                    
                                  ]
                                },
                                "parameters":{
                                  "type":"FormalParametersNode",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayReturnType":[
                                  
                                ],
                                "body":{
                                  "type":"BlockNode",
                                  "statements":[
                                    {
                                      "type":"TryCatchStatementNode",
                                      "block":{
                                        "type":"BlockNode",
                                        "statements":[
                                          {
                                            "type":"LocalVariableDeclarationStatementNode",
                                            "modifiers":[
                                              
                                            ],
                                            "declarators":{
                                              "type":"VariableDeclaratorsNode",
                                              "declarators":[
                                                {
                                                  "type":"VariableDeclaratorNode",
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"frame",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "arrayDepth":[
                                                    
                                                  ],
                                                  "assignment":{
                                                    "type":"VariableAssignmentNode",
                                                    "variableAssignment":{
                                                      "type":"VariableExpressionInitNode",
                                                      "expression":{
                                                        "type":"ConstructorCreatorNode",
                                                        "creatorType":{
                                                          "type":"ReferenceTypeNode",
                                                          "ids":[
                                                            {
                                                              "type":"ParameterizedTypeNode",
                                                              "identifier":{
                                                                "type":"IdentifierNode",
                                                                "name":"Example",
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "comments":[
                                                                
                                                              ]
                                                            }
                                                          ],
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "expressionArgs":{
                                                          "type":"ExpressionListNode",
                                                          "arguments":[
                                                            
                                                          ],
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "varType":{
                                                    "type":"ReferenceTypeNode",
                                                    "ids":[
                                                      {
                                                        "type":"ParameterizedTypeNode",
                                                        "identifier":{
                                                          "type":"IdentifierNode",
                                                          "name":"Example",
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "labels":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"ExpressionStatement",
                                            "expression":{
                                              "type":"MethodInvocationNode",
                                              "qualifiedIdentifier":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"frame",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"setVisible",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "args":{
                                                "type":"ExpressionListNode",
                                                "arguments":[
                                                  {
                                                    "type":"LiteralNode",
                                                    "node":{
                                                      "type":"BooleanLiteralNode",
                                                      "valueRep":"true"
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "labels":[
                                              
                                            ]
                                          }
                                        ],
                                        "labels":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "catches":[
                                        {
                                          "type":"CatchClauseNode",
                                          "modifiers":[
                                            
                                          ],
                                          "catchType":{
                                            "type":"CatchTypeNode",
                                            "identifiers":[
                                              {
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"Exception",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"e",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "block":{
                                            "type":"BlockNode",
                                            "statements":[
                                              {
                                                "type":"ExpressionStatement",
                                                "expression":{
                                                  "type":"MethodInvocationNode",
                                                  "qualifiedIdentifier":{
                                                    "type":"QualifiedIdentifierNode",
                                                    "identifiers":[
                                                      {
                                                        "type":"IdentifierNode",
                                                        "name":"e",
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"printStackTrace",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "args":{
                                                    "type":"ExpressionListNode",
                                                    "arguments":[
                                                      
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "labels":[
                                                  
                                                ]
                                              }
                                            ],
                                            "labels":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "labels":[
                                    
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"frame",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"setVisible",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"BooleanLiteralNode",
                            "valueRep":"true"
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"e",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"printStackTrace",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"contentPane",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JPanel",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"table",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JTable",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"args",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"frame",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Example",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Example",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How do I get it to work for that clicking a row when it's corresponding infoIntFrame is already open doesn't create another instance of infoIntframe? (note: The infoIntFrames have to be created at runtime)</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9219502]-[347837665]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How do I get it to work for that clicking a row when it's corresponding infoIntFrame is already open doesn't create another instance of infoIntframe? (note: The infoIntFrames have to be created at runtime)</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"infoIntFrame",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"infoIntframe",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"infoIntFrames",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "runtim":1,
                  "row":1,
                  "open":1,
                  "info":3,
                  "work":1,
                  "frame":2,
                  "intfram":1,
                  "click":1,
                  "note":1,
                  "creat":2,
                  "instanc":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":9228507,
      "questionId":9219502,
      "comments":[
        
      ],
      "creationDate":"2012-02-10",
      "lastActivityDate":"2012-02-10",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":714968,
        "displayName":"mKorbel",
        "reputation":93498
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>there are two areas:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9228507]-[-1921215525]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>there are two areas:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "area":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>1) <code>JInternalFrame tableIntFrame = new JInternalFrame(&quot;TableIntFrame&quot;);</code> lost Focus </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9228507]-[-1492623159]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>1) <code>JInternalFrame tableIntFrame = new JInternalFrame(&quot;TableIntFrame&quot;);</code> lost Focus </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"LocalVariableDeclarationStatementNode",
                    "modifiers":[
                      
                    ],
                    "declarators":{
                      "type":"VariableDeclaratorsNode",
                      "declarators":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"tableIntFrame",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "assignment":{
                            "type":"VariableAssignmentNode",
                            "variableAssignment":{
                              "type":"VariableExpressionInitNode",
                              "expression":{
                                "type":"ConstructorCreatorNode",
                                "creatorType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"JInternalFrame",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "expressionArgs":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"LiteralNode",
                                      "node":{
                                        "type":"StringLiteralNode",
                                        "valueRep":"\"TableIntFrame\""
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            },
                            "comments":[
                              
                            ]
                          },
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"JInternalFrame",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "lost":1,
                    "frame":4,
                    "code":2,
                    "tabl":2,
                    "focus":1,
                    "quot":2,
                    "jintern":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JInternalFrame",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"tableIntFrame",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"ConstructorCreatorNode",
                            "creatorType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"JInternalFrame",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "expressionArgs":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"StringLiteralNode",
                                    "valueRep":"\"TableIntFrame\""
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"JInternalFrame",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>2) you have to check if exist in array that returns <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/swing/JDesktopPane.html#getAllFrames%28%29\"rel=\"nofollow\">desktopPane.getAllFrames()</a> before creating new another <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html\"rel=\"nofollow\">JInternalFrame</a>, add <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html\"rel=\"nofollow\">InternalFrameListener,</a> because (AFAIK) method desktopPane.getAllFrames() returns only visible <code>JInternalFrame</code> </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9228507]-[1867881530]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>2) you have to check if exist in array that returns <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/swing/JDesktopPane.html#getAllFrames%28%29\"rel=\"nofollow\">desktopPane.getAllFrames()</a> before creating new another <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html\"rel=\"nofollow\">JInternalFrame</a>, add <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html\"rel=\"nofollow\">InternalFrameListener,</a> because (AFAIK) method desktopPane.getAllFrames() returns only visible <code>JInternalFrame</code> </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"desktopPane",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getAllFrames",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JInternalFrame",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"InternalFrameListener",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"desktopPane",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getAllFrames",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JInternalFrame",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "desktop":2,
                    "method":1,
                    "internalfram":1,
                    "exist":1,
                    "event":1,
                    "return":2,
                    "jdesktop":1,
                    "rel":3,
                    "afaik":1,
                    "oracl":3,
                    "visibl":1,
                    "swing":1,
                    "doc":4,
                    "frame":6,
                    "compon":1,
                    "pane":3,
                    "code":2,
                    "javax":1,
                    "array":1,
                    "uisw":2,
                    "listen":1,
                    "nofollow":3,
                    "check":1,
                    "javas":3,
                    "api":1,
                    "html":3,
                    "href":3,
                    "http":3,
                    "tutori":2,
                    "creat":1,
                    "jintern":2,
                    "add":1,
                    "intern":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JInternalFrame",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"InternalFrameListener",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}