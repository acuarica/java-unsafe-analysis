{"type":"StackOverflowArtifact","question":{"type":"StackOverflowQuestion","id":14789985,"title":"Trick to use largeHeap on older Androids &lt; 3?","comments":[{"type":"StackOverflowComment","id":20711549,"postId":14789985,"creationDate":"2013-02-09","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":115145,"displayName":"CommonsWare","reputation":450125},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"There is no &quot;task manager&quot; in Android."},"units":[{"type":"TextUnit","id":"[14789985-cu20711549]-[-1934335479]","astNode":{"type":"TextFragmentNode","text":"There is no &quot;task manager&quot; in Android."},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"manag":1,"android":1,"task":1,"quot":2}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":78.87285714285716,"fleshKincaidGradeLevel":3.997142857142858,"automatedReadingIndex":1.5828571428571436,"gunningFogIndex":2.8000000000000003,"smogIndex":3.0,"colemanLiauIndex":4.315714285714286}]}]}]},{"type":"StackOverflowComment","id":20712054,"postId":14789985,"creationDate":"2013-02-09","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":194609,"displayName":"Karussell","reputation":7805},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"Hmmh, but I have one - maybe Samsung software? I'll check"},"units":[{"type":"TextUnit","id":"[14789985-cu20712054]-[2004952999]","astNode":{"type":"TextFragmentNode","text":"Hmmh, but I have one - maybe Samsung software? I'll check"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"softwar":1,"hmmh":1,"samsung":1,"check":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":101.27068181818181,"fleshKincaidGradeLevel":0.5004545454545486,"automatedReadingIndex":0.16000000000000014,"gunningFogIndex":2.2,"smogIndex":3.0,"colemanLiauIndex":2.3054545454545448}]}]}]},{"type":"StackOverflowComment","id":20712120,"postId":14789985,"creationDate":"2013-02-09","score":1,"isEdited":false,"owner":{"type":"StackOverflowUser","id":115145,"displayName":"CommonsWare","reputation":450125},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"My point is that you have no idea what this &quot;task manager&quot; is actually measuring. Dianne Hackborn wrote [the definitive answer on measuring memory consumption](http://stackoverflow.com/questions/2298208/how-to-discover-memory-usage-of-my-application-in-android/2299813#2299813), and you will note that she did not rely upon random &quot;task manager&quot; apps from random pieces of hardware."},"units":[{"type":"TextUnit","id":"[14789985-cu20712120]-[-1253234894]","astNode":{"type":"TextFragmentNode","text":"My point is that you have no idea what this &quot;task manager&quot; is actually measuring. Dianne Hackborn wrote [the definitive answer on measuring memory consumption](http://stackoverflow.com/questions/2298208/how-to-discover-memory-usage-of-my-application-in-android/2299813#2299813), and you will note that she did not rely upon random &quot;task manager&quot; apps from random pieces of hardware."},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"question":1,"random":2,"point":1,"task":2,"diann":1,"idea":1,"wrote":1,"measur":2,"stackoverflow":1,"note":1,"definit":1,"discov":1,"applic":1,"hardwar":1,"piec":1,"answer":1,"app":1,"usag":1,"quot":4,"reli":1,"manag":2,"http":1,"hackborn":1,"consumpt":1,"android":1,"memori":2}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":3.5175000000000125,"fleshKincaidGradeLevel":18.358333333333338,"automatedReadingIndex":24.150666666666666,"gunningFogIndex":10.777777777777779,"smogIndex":8.477225575051662,"colemanLiauIndex":25.79822222222222}]}]}]},{"type":"StackOverflowComment","id":20712155,"postId":14789985,"creationDate":"2013-02-09","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":194609,"displayName":"Karussell","reputation":7805},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"Ok, that is a good point. (BTW: the task manager is an app from samsung)"},"units":[{"type":"TextUnit","id":"[14789985-cu20712155]-[-1551573352]","astNode":{"type":"TextFragmentNode","text":"Ok, that is a good point. (BTW: the task manager is an app from samsung)"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"point":1,"task":1,"good":1,"btw":1,"app":1,"manag":1,"samsung":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Neutral"},{"fleshReadingEaseScore":97.7025,"fleshKincaidGradeLevel":1.495000000000001,"automatedReadingIndex":-1.0380000000000003,"gunningFogIndex":3.0,"smogIndex":3.0,"colemanLiauIndex":1.0113333333333294}]}]}]}],"tags":["android","memory-management","graphhopper"],"creationDate":"2013-02-09","lastActivityDate":"2013-11-25","lastEditDate":"2013-11-25","score":4,"viewCount":639,"owner":{"type":"StackOverflowUser","id":194609,"displayName":"Karussell","reputation":7805},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>When I tried to allocate more than approx. 30MB on Android 2.3 (an Samsung Galaxy 1) for my graphhopper project I run into OutOfMemory errors. But I recognized that for applications like Firefox and skobbler on the same device it is somehow possible to have more than 80MB allocated! At least I saw used memory of 90 or even 120MB in the task manager!</p>"},"units":[{"type":"TextUnit","id":"[14789985]-[1017131477]","astNode":{"type":"TextFragmentNode","text":"<p>When I tried to allocate more than approx. 30MB on Android 2.3 (an Samsung Galaxy 1) for my graphhopper project I run into OutOfMemory errors. But I recognized that for applications like Firefox and skobbler on the same device it is somehow possible to have more than 80MB allocated! At least I saw used memory of 90 or even 120MB in the task manager!</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"OutOfMemory","comments":[]},"comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"task":1,"alloc":2,"project":1,"run":1,"approx":1,"error":1,"recogn":1,"galaxi":1,"applic":1,"devic":1,"skobbler":1,"manag":1,"firefox":1,"samsung":1,"android":1,"graphhopp":1,"memori":2}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"OutOfMemory","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"OutOfMemory","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>I found that newer Android versions >= 3 allow to set the big heap flag (largeHeap=true), but how are the Firefox guys doing this for Android 2.3?</p>"},"units":[{"type":"TextUnit","id":"[14789985]-[1218417096]","astNode":{"type":"TextFragmentNode","text":"<p>I found that newer Android versions >= 3 allow to set the big heap flag (largeHeap=true), but how are the Firefox guys doing this for Android 2.3?</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"largeHeap","comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"guy":1,"big":1,"set":1,"newer":1,"version":1,"found":1,"larg":1,"true":1,"flag":1,"heap":2,"firefox":1,"android":2}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"largeHeap","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]}]},"answers":[{"type":"StackOverflowAnswer","id":16357723,"questionId":14789985,"comments":[{"type":"StackOverflowComment","id":23436786,"postId":16357723,"creationDate":"2013-05-03","score":2,"isEdited":false,"owner":{"type":"StackOverflowUser","id":282398,"displayName":"Delyan","reputation":5618},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"Bear in mind that &quot;inNativeAlloc&quot; does not exist in newer framework.jars. There's another thing you can do, if you know the Bitmap size in advance. You can make a blank png of the same size (BitmapFactory will put it off the Java heap), decode it and force the &quot;mIsMutable&quot; flag to be true. Then, you can draw over it. Unfortunately, you need to know the pixel size in advance. :/ Source - I've spent hours on this. Also, I'm the guy from that webpage."},"units":[{"type":"TextUnit","id":"[16357723-cu23436786]-[661200262]","astNode":{"type":"TextFragmentNode","text":"Bear in mind that &quot;inNativeAlloc&quot; does not exist in newer framework.jars. There's another thing you can do, if you know the Bitmap size in advance. You can make a blank png of the same size (BitmapFactory will put it off the Java heap), decode it and force the &quot;mIsMutable&quot; flag to be true. Then, you can draw over it. Unfortunately, you need to know the pixel size in advance. :/ Source - I've spent hours on this. Also, I'm the guy from that webpage."},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"inNativeAlloc","comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]}],"comments":[]},{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"mIsMutable","comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"advanc":2,"guy":1,"png":1,"alloc":1,"size":3,"bear":1,"exist":1,"newer":1,"thing":1,"bitmap":2,"framework":1,"blank":1,"factori":1,"hour":1,"pixel":1,"draw":1,"mind":1,"true":1,"flag":1,"make":1,"put":1,"decod":1,"quot":4,"heap":1,"forc":1,"sourc":1,"jar":1,"webpag":1,"spent":1,"mutabl":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"inNativeAlloc","comments":[]},{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},{"type":"IdentifierNode","name":"mIsMutable","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":83.03705882352945,"fleshKincaidGradeLevel":4.6939495798319335,"automatedReadingIndex":3.9247226890756295,"gunningFogIndex":5.798319327731093,"smogIndex":5.927700218845599,"colemanLiauIndex":5.8437647058823465}]}]}]}],"creationDate":"2013-05-03","lastActivityDate":"2013-05-03","lastEditDate":"2013-05-03","score":2,"isAccepted":false,"owner":{"type":"StackOverflowUser","id":194609,"displayName":"Karussell","reputation":7805},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>I think it could be that those applications are using native memory which can exceed the limit (they request memory from native code). </p>"},"units":[{"type":"TextUnit","id":"[16357723]-[1944151908]","astNode":{"type":"TextFragmentNode","text":"<p>I think it could be that those applications are using native memory which can exceed the limit (they request memory from native code). </p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"request":1,"exceed":1,"code":1,"applic":1,"limit":1,"memori":2}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>It should be possible to do that even without native code via using a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\" rel=\"nofollow\">ByteBuffer</a> and call allocateDirect. This could be validated using <a href=\"http://stackoverflow.com/q/3908520/194609\">this hack</a>.</p>"},"units":[{"type":"TextUnit","id":"[16357723]-[19175036]","astNode":{"type":"TextFragmentNode","text":"<p>It should be possible to do that even without native code via using a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\" rel=\"nofollow\">ByteBuffer</a> and call allocateDirect. This could be validated using <a href=\"http://stackoverflow.com/q/3908520/194609\">this hack</a>.</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"ByteBuffer","comments":[]},"comments":[]}],"comments":[]},{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"allocateDirect","comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"alloc":1,"rel":1,"oracl":1,"nio":1,"buffer":2,"doc":2,"direct":1,"code":1,"stackoverflow":1,"nofollow":1,"valid":1,"javas":1,"hack":1,"api":1,"html":1,"href":2,"http":2,"call":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"ByteBuffer","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"ByteBuffer","comments":[]},{"type":"IdentifierNode","name":"allocateDirect","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p><strong>Update</strong> Sadly this is only possible via native code according to <a href=\"http://www.badlogicgames.com/wordpress/?p=2367\" rel=\"nofollow\">this post</a>. They've wrapped that in a java <a href=\"https://github.com/libgdx/libgdx/blob/32c6cd2768bba27bff0d5c6a026ca65771131671/gdx/src/com/badlogic/gdx/utils/BufferUtils.java#L287\" rel=\"nofollow\">utility call</a>. But for the commenter 'Delyan' suggests the following Java-only hack for image-processing:</p>"},"units":[{"type":"TextUnit","id":"[16357723]-[-1387956919]","astNode":{"type":"TextFragmentNode","text":"<p><strong>Update</strong> Sadly this is only possible via native code according to <a href=\"http://www.badlogicgames.com/wordpress/?p=2367\" rel=\"nofollow\">this post</a>. They've wrapped that in a java <a href=\"https://github.com/libgdx/libgdx/blob/32c6cd2768bba27bff0d5c6a026ca65771131671/gdx/src/com/badlogic/gdx/utils/BufferUtils.java#L287\" rel=\"nofollow\">utility call</a>. But for the commenter 'Delyan' suggests the following Java-only hack for image-processing:</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"github":1,"post":1,"util":3,"wordpress":1,"process":1,"suggest":1,"updat":1,"rel":2,"buffer":1,"strong":2,"https":1,"code":1,"delyan":1,"bba":1,"badlogicgam":1,"wrap":1,"nofollow":2,"gdx":2,"bff":1,"comment":1,"src":1,"libgdx":2,"badlog":1,"hack":1,"sad":1,"href":2,"http":1,"call":1,"blob":1,"imag":1,"www":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlNode","name":{"type":"XmlNameNode","value":"pre"},"attributes":[],"elements":[{"type":"XmlNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"BitmapFactory.Options opts = new BitmapFactory.Options();\nField field = opts.getClass().getField(\"inNativeAlloc\");\nfield.setBoolean(opts, true);\n"}]}]},"units":[{"type":"StructuredFragmentUnit","id":"[16357723]-[-1223565824]","astNode":{"type":"CodeFragmentSequence","fragments":[{"type":"LocalVariableDeclarationStatementNode","modifiers":[],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"opts","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Options","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Options","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"LocalVariableDeclarationStatementNode","modifiers":[],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"field","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":".","comments":[]},"left":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"opts","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"getClass","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"right":{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"getField","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"inNativeAlloc\""},"comments":[]}],"comments":[]},"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Field","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"field","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"setBoolean","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"opts","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"BooleanLiteralNode","valueRep":"true"},"comments":[]}],"comments":[]},"comments":[]},{"type":"TextFragmentNode","text":";\n"}]},"rawText":"BitmapFactory.Options opts = new BitmapFactory.Options();\nField field = opts.getClass().getField(\"inNativeAlloc\");\nfield.setBoolean(opts, true);\n","metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"alloc":1,"opt":3,"field":4,"set":1,"option":2,"bitmap":2,"factori":2,"true":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Options","comments":[]},"comments":[]}],"comments":[]}],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Field","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"opts","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"getClass","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"getField","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"inNativeAlloc\""},"comments":[]}],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"field","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"setBoolean","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"opts","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"BooleanLiteralNode","valueRep":"true"},"comments":[]}],"comments":[]},"comments":[]}]},{"type":"CodeVariablesMetaInformation","variables":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"opts","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Options","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"BitmapFactory","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Options","comments":[]},"comments":[]}],"comments":[]}},{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"field","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":".","comments":[]},"left":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"opts","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"getClass","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"right":{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"getField","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"inNativeAlloc\""},"comments":[]}],"comments":[]},"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Field","comments":[]},"comments":[]}],"comments":[]}}]},{"identifiers":[{"type":"IdentifierNode","name":"getClass","comments":[]},{"type":"IdentifierNode","name":"Options","comments":[]},{"type":"IdentifierNode","name":"setBoolean","comments":[]},{"type":"IdentifierNode","name":"getField","comments":[]},{"type":"IdentifierNode","name":"opts","comments":[]},{"type":"IdentifierNode","name":"field","comments":[]},{"type":"IdentifierNode","name":"Field","comments":[]},{"type":"IdentifierNode","name":"BitmapFactory","comments":[]}]},{"declarators":[]},{"grade":0.015792978927493095}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>but: <em>\"That said, bear in mind that this is <strong>dangerous</strong>. If the device runs out of memory, the oomkiller is going after you first. No warning, no nothing, just SIGKILL. So, more than ever, recycle everything you don't need and be very, very careful!\"</em></p>"},"units":[{"type":"TextUnit","id":"[16357723]-[-1449639562]","astNode":{"type":"TextFragmentNode","text":"<p>but: <em>\"That said, bear in mind that this is <strong>dangerous</strong>. If the device runs out of memory, the oomkiller is going after you first. No warning, no nothing, just SIGKILL. So, more than ever, recycle everything you don't need and be very, very careful!\"</em></p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"oomkil":1,"warn":1,"bear":1,"run":1,"recycl":1,"care":1,"strong":2,"mind":1,"devic":1,"sigkil":1,"danger":1,"memori":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p><strong>Update 2</strong> Eventually we can hack via reflections to access <a href=\"http://stackoverflow.com/q/5357390/194609\">sun.misc.Unsafe</a> as done in the popular <a href=\"https://github.com/peter-lawrey/Java-Chronicle/blob/master/chronicle/src/main/java/com/higherfrequencytrading/chronicle/impl/UnsafeExcerpt.java\" rel=\"nofollow\">Java-Chronicle project</a>?</p>"},"units":[{"type":"TextUnit","id":"[16357723]-[886457430]","astNode":{"type":"TextFragmentNode","text":"<p><strong>Update 2</strong> Eventually we can hack via reflections to access <a href=\"http://stackoverflow.com/q/5357390/194609\">sun.misc.Unsafe</a> as done in the popular <a href=\"https://github.com/peter-lawrey/Java-Chronicle/blob/master/chronicle/src/main/java/com/higherfrequencytrading/chronicle/impl/UnsafeExcerpt.java\" rel=\"nofollow\">Java-Chronicle project</a>?</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"sun","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"misc","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Unsafe","comments":[]},"comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"github":1,"excerpt":1,"master":1,"project":1,"peter":1,"updat":1,"sun":1,"rel":1,"popular":1,"strong":2,"https":1,"eventu":1,"main":1,"impl":1,"stackoverflow":1,"nofollow":1,"src":1,"misc":1,"hack":1,"unsaf":2,"href":2,"lawrey":1,"http":1,"chronicl":4,"reflect":1,"blob":1,"access":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"sun","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"misc","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Unsafe","comments":[]},"comments":[]}],"comments":[]}],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"sun","comments":[]},{"type":"IdentifierNode","name":"misc","comments":[]},{"type":"IdentifierNode","name":"Unsafe","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]}]}]}