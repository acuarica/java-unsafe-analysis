{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":25600736,
    "title":"is there any way to run mongodb server using java programming?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":39991701,
        "postId":25600736,
        "creationDate":"2014-09-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1189885,
          "displayName":"chrylis",
          "reputation":24837
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"There are ways, but there is probably a better approach. Please explain what you're trying to get done."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[25600736-cu39991701]-[90719895]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"There are ways, but there is probably a better approach. Please explain what you're trying to get done."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "approach":1,
                      "explain":1,
                      "way":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "mongodb"
    ],
    "creationDate":"2014-09-01",
    "lastActivityDate":"2014-09-01",
    "score":0,
    "viewCount":83,
    "owner":{
      "type":"StackOverflowUser",
      "id":3326858,
      "displayName":"manish payasi",
      "reputation":22
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>It can connect with database when we run the <strong>mongod</strong> server manually. But I want to run <strong>mongodb server by java code</strong>, so is there any way to do it? </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25600736]-[926137153]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>It can connect with database when we run the <strong>mongod</strong> server manually. But I want to run <strong>mongodb server by java code</strong>, so is there any way to do it? </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "server":2,
                  "connect":1,
                  "run":2,
                  "strong":4,
                  "code":1,
                  "mongod":1,
                  "databas":1,
                  "mongodb":1,
                  "manual":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Mongo mongo = new Mongo(&quot;localhost&quot;, 27017); DB db = mongo.getDB(&quot;@NEW_DB&quot;); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[25600736]-[-1384792629]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"LocalVariableDeclarationStatementNode",
                  "modifiers":[
                    
                  ],
                  "declarators":{
                    "type":"VariableDeclaratorsNode",
                    "declarators":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"mongo",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "assignment":{
                          "type":"VariableAssignmentNode",
                          "variableAssignment":{
                            "type":"VariableExpressionInitNode",
                            "expression":{
                              "type":"ConstructorCreatorNode",
                              "creatorType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Mongo",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "expressionArgs":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  {
                                    "type":"LiteralNode",
                                    "node":{
                                      "type":"StringLiteralNode",
                                      "valueRep":"\"localhost\""
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"LiteralNode",
                                    "node":{
                                      "type":"IntegerLiteralNode",
                                      "valueRep":"27017"
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Mongo",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"LocalVariableDeclarationStatementNode",
                  "modifiers":[
                    
                  ],
                  "declarators":{
                    "type":"VariableDeclaratorsNode",
                    "declarators":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"db",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "assignment":{
                          "type":"VariableAssignmentNode",
                          "variableAssignment":{
                            "type":"VariableExpressionInitNode",
                            "expression":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"mongo",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"getDB",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  {
                                    "type":"LiteralNode",
                                    "node":{
                                      "type":"StringLiteralNode",
                                      "valueRep":"\"@NEW_DB\""
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"DB",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"Mongo mongo = new Mongo(\"localhost\", 27017); DB db = mongo.getDB(\"@NEW_DB\"); ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "localhost":1,
                  "mongo":4
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Mongo",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DB",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"mongo",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getDB",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"@NEW_DB\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"mongo",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Mongo",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"StringLiteralNode",
                                  "valueRep":"\"localhost\""
                                },
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"IntegerLiteralNode",
                                  "valueRep":"27017"
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Mongo",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"db",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"mongo",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"getDB",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"StringLiteralNode",
                                  "valueRep":"\"@NEW_DB\""
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"DB",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":25602914,
      "questionId":25600736,
      "comments":[
        
      ],
      "creationDate":"2014-09-01",
      "lastActivityDate":"2014-09-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1032890,
        "displayName":"greyfairer",
        "reputation":4935
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>MongoDB is not written in Java, so you need to launch an external process, as indicated by the previous answers.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602914]-[931664727]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>MongoDB is not written in Java, so you need to launch an external process, as indicated by the previous answers.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "process":1,
                    "previous":1,
                    "written":1,
                    "extern":1,
                    "answer":1,
                    "mongo":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you want to run and shutdown MongoDB for integration tests, there is a test framework that will do that: <a href=\"https://github.com/lordofthejars/nosql-unit/\"rel=\"nofollow\">https://github.com/lordofthejars/nosql-unit/</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602914]-[725016635]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you want to run and shutdown MongoDB for integration tests, there is a test framework that will do that: <a href=\"https://github.com/lordofthejars/nosql-unit/\"rel=\"nofollow\">https://github.com/lordofthejars/nosql-unit/</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":2,
                    "test":2,
                    "run":1,
                    "nosql":2,
                    "rel":1,
                    "integr":1,
                    "https":2,
                    "framework":1,
                    "shutdown":1,
                    "nofollow":1,
                    "lordofthejar":2,
                    "unit":2,
                    "href":1,
                    "mongo":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In your JUnit 4 test:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602914]-[1205436431]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In your JUnit 4 test:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "junit":1,
                    "test":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"import static com.lordofthejars.nosqlunit.mongodb.ManagedMongoDb.MongoServerRuleBuilder.newManagedMongoDbRule; @ClassRule public static ManagedMongoDb managedMongoDb = newManagedMongoDbRule().build(); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[25602914]-[-144464633]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ImportDeclarationNode",
                    "identifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"com",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"lordofthejars",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"nosqlunit",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"mongodb",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"ManagedMongoDb",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"MongoServerRuleBuilder",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"newManagedMongoDbRule",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "isStatic":true,
                    "isOnDemand":false,
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"FieldDeclaratorNode",
                    "modifiers":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ClassRule",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"KeywordModifierNode",
                        "value":"public",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "variables":{
                      "type":"VariableDeclaratorsNode",
                      "declarators":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"managedMongoDb",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "assignment":{
                            "type":"VariableAssignmentNode",
                            "variableAssignment":{
                              "type":"VariableExpressionInitNode",
                              "expression":{
                                "type":"BinaryExpressionNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":".",
                                  "comments":[
                                    
                                  ]
                                },
                                "left":{
                                  "type":"MethodInvocationNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"newManagedMongoDbRule",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "args":{
                                    "type":"ExpressionListNode",
                                    "arguments":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "right":{
                                  "type":"MethodInvocationNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"build",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "args":{
                                    "type":"ExpressionListNode",
                                    "arguments":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            },
                            "comments":[
                              
                            ]
                          },
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"ManagedMongoDb",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"import static com.lordofthejars.nosqlunit.mongodb.ManagedMongoDb.MongoServerRuleBuilder.newManagedMongoDbRule; @ClassRule public static ManagedMongoDb managedMongoDb = newManagedMongoDbRule().build(); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "server":1,
                    "build":1,
                    "rule":4,
                    "builder":1,
                    "lordofthejar":1,
                    "mongodb":1,
                    "manag":5,
                    "mongo":6,
                    "nosqlunit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"com",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lordofthejars",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"nosqlunit",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"mongodb",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ManagedMongoDb",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MongoServerRuleBuilder",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"newManagedMongoDbRule",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ManagedMongoDb",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"newManagedMongoDbRule",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"build",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"managedMongoDb",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":".",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"newManagedMongoDbRule",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"build",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ManagedMongoDb",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>IIRC, It will download and launch a new MongoDB instance at localhost:27017 by default.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602914]-[-586755106]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>IIRC, It will download and launch a new MongoDB instance at localhost:27017 by default.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "localhost":1,
                    "iirc":1,
                    "mongo":1,
                    "download":1,
                    "instanc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":25600946,
      "questionId":25600736,
      "comments":[
        
      ],
      "creationDate":"2014-09-01",
      "lastActivityDate":"2014-09-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":784540,
        "displayName":"Rafael Osipov",
        "reputation":10465
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In this case you need an application that runs on the server and gets the command from your client application to launch the mongo db server.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[-1879046846]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In this case you need an application that runs on the server and gets the command from your client application to launch the mongo db server.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "server":2,
                    "run":1,
                    "command":1,
                    "client":1,
                    "applic":2,
                    "mongo":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If there's no some &quot;command listener&quot; application on the server side and mongodb server is down, you cannot launch it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[1787304426]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If there's no some &quot;command listener&quot; application on the server side and mongodb server is down, you cannot launch it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "side":1,
                    "server":2,
                    "command":1,
                    "listen":1,
                    "applic":1,
                    "quot":2,
                    "mongodb":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Make an <a href=\"http://www.tutorialspoint.com/java/java_networking.htm\"rel=\"nofollow\">application</a>, that runs on the server and listens to a network port.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[615395836]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Make an <a href=\"http://www.tutorialspoint.com/java/java_networking.htm\"rel=\"nofollow\">application</a>, that runs on the server and listens to a network port.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "htm":1,
                    "network":2,
                    "server":1,
                    "run":1,
                    "rel":1,
                    "listen":1,
                    "nofollow":1,
                    "port":1,
                    "applic":1,
                    "make":1,
                    "tutorialspoint":1,
                    "href":1,
                    "http":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Your client application sends command via this port. Listener application receives this command and launches an external process (mongodb server). Also consider to add some security measures, to prevent getting such commands from an unauthorized source.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[-1237650823]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Your client application sends command via this port. Listener application receives this command and launches an external process (mongodb server). Also consider to add some security measures, to prevent getting such commands from an unauthorized source.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "receiv":1,
                    "server":1,
                    "process":1,
                    "prevent":1,
                    "secur":1,
                    "command":3,
                    "measur":1,
                    "listen":1,
                    "port":1,
                    "unauthor":1,
                    "client":1,
                    "extern":1,
                    "applic":2,
                    "mongodb":1,
                    "add":1,
                    "sourc":1,
                    "send":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To launch an external process from your java code consider <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/ProcessBuilder.html\"rel=\"nofollow\">ProcessBuilder</a> class.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[-469482505]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To launch an external process from your java code consider <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/ProcessBuilder.html\"rel=\"nofollow\">ProcessBuilder</a> class.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ProcessBuilder",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "launch":1,
                    "process":3,
                    "rel":1,
                    "oracl":1,
                    "builder":2,
                    "doc":2,
                    "code":1,
                    "nofollow":1,
                    "extern":1,
                    "javas":1,
                    "api":1,
                    "lang":1,
                    "html":1,
                    "href":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ProcessBuilder",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I personally prefer to use <a href=\"http://commons.apache.org/proper/commons-exec/\"rel=\"nofollow\">Apache Commons Exec</a> for this purpose.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25600946]-[594056709]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I personally prefer to use <a href=\"http://commons.apache.org/proper/commons-exec/\"rel=\"nofollow\">Apache Commons Exec</a> for this purpose.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "apach":2,
                    "proper":1,
                    "rel":1,
                    "nofollow":1,
                    "common":3,
                    "person":1,
                    "org":1,
                    "href":1,
                    "exec":2,
                    "http":1,
                    "purpos":1,
                    "prefer":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":25602332,
      "questionId":25600736,
      "comments":[
        
      ],
      "creationDate":"2014-09-01",
      "lastActivityDate":"2014-09-01",
      "lastEditDate":"2014-09-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1620671,
        "displayName":"Philipp",
        "reputation":26003
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>When no <code>mongod</code> process is running on the local machine, you need to start one. There are different methods to start another program from a Java program.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602332]-[-66767449]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>When no <code>mongod</code> process is running on the local machine, you need to start one. There are different methods to start another program from a Java program.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":2,
                    "method":1,
                    "process":1,
                    "run":1,
                    "local":1,
                    "code":2,
                    "machin":1,
                    "mongod":1,
                    "start":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The most crude way is to use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Runtime.html#exec%28java.lang.String[]%29\"rel=\"nofollow\"><code>Runtime.exec(String)</code></a> which executes a command as if it were entered into the operating systems command shell. It returns a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Process.html\"rel=\"nofollow\"><code>Process</code></a> object which allows you to retrieve the output of the process you start and gives you some control over the process.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602332]-[-185803642]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The most crude way is to use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Runtime.html#exec%28java.lang.String[]%29\"rel=\"nofollow\"><code>Runtime.exec(String)</code></a> which executes a command as if it were entered into the operating systems command shell. It returns a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Process.html\"rel=\"nofollow\"><code>Process</code></a> object which allows you to retrieve the output of the process you start and gives you some control over the process.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "runtim":2,
                    "system":1,
                    "shell":1,
                    "return":1,
                    "retriev":1,
                    "process":4,
                    "enter":1,
                    "rel":2,
                    "oracl":2,
                    "command":2,
                    "doc":4,
                    "crude":1,
                    "object":1,
                    "code":4,
                    "oper":1,
                    "nofollow":2,
                    "javas":2,
                    "control":1,
                    "api":2,
                    "output":1,
                    "lang":3,
                    "html":2,
                    "href":2,
                    "start":1,
                    "exec":2,
                    "http":2,
                    "execut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>A more sophisticated but also more verbose way is to use the class <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/ProcessBuilder.html\"rel=\"nofollow\"><code>ProcessBuilder</code></a>. The main advantage is that the process builder allows you to write code which is more operating-system independent.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602332]-[-27898545]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>A more sophisticated but also more verbose way is to use the class <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/ProcessBuilder.html\"rel=\"nofollow\"><code>ProcessBuilder</code></a>. The main advantage is that the process builder allows you to write code which is more operating-system independent.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"ProcessBuilder",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "verbos":1,
                    "system":1,
                    "process":3,
                    "rel":1,
                    "oracl":1,
                    "builder":3,
                    "main":1,
                    "doc":2,
                    "code":3,
                    "oper":1,
                    "nofollow":1,
                    "advantag":1,
                    "independ":1,
                    "javas":1,
                    "api":1,
                    "lang":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "sophist":1,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Keep in mind that <strong>either method only works when mongodb runs on the same server as your application</strong>. In a usual production-setup, mongodb runs on multiple dedicated servers which are physically separated from the application server. Starting a process on a different machine isn't that simple for obvious reasons. There are software solutions available which allow you to remotely manage multiple processes on many servers at once (the server admins at our company like <a href=\"http://www.bmc.com/it-solutions/control-m.html\"rel=\"nofollow\">Control-M</a>), but this is <a href=\"http://serverfault.com\">in the realm of server administrations</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25602332]-[-1972057220]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Keep in mind that <strong>either method only works when mongodb runs on the same server as your application</strong>. In a usual production-setup, mongodb runs on multiple dedicated servers which are physically separated from the application server. Starting a process on a different machine isn't that simple for obvious reasons. There are software solutions available which allow you to remotely manage multiple processes on many servers at once (the server admins at our company like <a href=\"http://www.bmc.com/it-solutions/control-m.html\"rel=\"nofollow\">Control-M</a>), but this is <a href=\"http://serverfault.com\">in the realm of server administrations</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "admin":1,
                    "server":6,
                    "simpl":1,
                    "administr":1,
                    "process":2,
                    "serverfault":1,
                    "obvious":1,
                    "run":2,
                    "separ":1,
                    "rel":1,
                    "softwar":1,
                    "strong":2,
                    "reason":1,
                    "work":1,
                    "nofollow":1,
                    "mind":1,
                    "usual":1,
                    "machin":1,
                    "applic":2,
                    "isn":1,
                    "control":2,
                    "realm":1,
                    "dedic":1,
                    "bmc":1,
                    "mongodb":2,
                    "html":1,
                    "href":2,
                    "manag":1,
                    "start":1,
                    "compani":1,
                    "http":2,
                    "multipl":2,
                    "solut":2,
                    "physic":1,
                    "setup":1,
                    "remot":1,
                    "www":1,
                    "product":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":25607391,
      "questionId":25600736,
      "comments":[
        
      ],
      "creationDate":"2014-09-01",
      "lastActivityDate":"2014-09-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":573153,
        "displayName":"xeraa",
        "reputation":2934
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There's a platform independent wrapper, that will download and run the requested MongoDB binary: <a href=\"https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo\"rel=\"nofollow\">https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25607391]-[765899656]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There's a platform independent wrapper, that will download and run the requested MongoDB binary: <a href=\"https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo\"rel=\"nofollow\">https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":2,
                    "flapdoodl":4,
                    "request":1,
                    "oss":2,
                    "run":1,
                    "binari":1,
                    "rel":1,
                    "https":2,
                    "nofollow":1,
                    "independ":1,
                    "wrapper":1,
                    "href":1,
                    "platform":1,
                    "mongo":3,
                    "download":1,
                    "emb":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You'll need to make some changes to your test configuration, but otherwise it's a drop-in replacement. It has been working for us without any problems.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25607391]-[-48886054]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You'll need to make some changes to your test configuration, but otherwise it's a drop-in replacement. It has been working for us without any problems.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "test":1,
                    "problem":1,
                    "configur":1,
                    "work":1,
                    "drop":1,
                    "replac":1,
                    "make":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}