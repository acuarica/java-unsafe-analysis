{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":14964122,
    "title":"How do I access the memory used by a Java program?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":21008081,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":985906,
          "displayName":"JoshDM",
          "reputation":2538
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"You're going to need to reword this for readability."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008081]-[-1814291931]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"You're going to need to reword this for readability."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "reword":1,
                      "readabl":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21008105,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1120021,
          "displayName":"DKG",
          "reputation":122
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Sorry My English is weak"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008105]-[22812493]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Sorry My English is weak"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "weak":1,
                      "english":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21008130,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":14,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2084433,
          "displayName":"parsifal",
          "reputation":251
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"This is one of those &quot;what are you really trying to do&quot; questions. Because modifying *any* program's data from outside that program is a bad way to do almost anything."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008130]-[1944641459]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"This is one of those &quot;what are you really trying to do&quot; questions. Because modifying *any* program's data from outside that program is a bad way to do almost anything."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "program":2,
                      "question":1,
                      "data":1,
                      "bad":1,
                      "modifi":1,
                      "quot":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21008502,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1891219,
          "displayName":"GaborSch",
          "reputation":6900
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@DKG Why don't you write it in Java (or Scala or other JVM language)? This way you will have access to all of Java objects (if you have the reference)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008502]-[684592869]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@DKG Why don't you write it in Java (or Scala or other JVM language)? This way you will have access to all of Java objects (if you have the reference)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"DKG",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jvm":1,
                      "languag":1,
                      "object":1,
                      "dkg":1,
                      "scala":1,
                      "refer":1,
                      "write":1,
                      "access":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21008634,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1120021,
          "displayName":"DKG",
          "reputation":122
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Actually I want to do some kind of hacking. So that the data being used by a java process is manipulated before being stored in database"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008634]-[1751108468]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Actually I want to do some kind of hacking. So that the data being used by a java process is manipulated before being stored in database"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "process":1,
                      "data":1,
                      "manipul":1,
                      "store":1,
                      "hack":1,
                      "databas":1,
                      "kind":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21008754,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":869736,
          "displayName":"Louis Wasserman",
          "reputation":77769
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Why would you want to do this?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21008754]-[85884229]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Why would you want to do this?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21009286,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1551209,
          "displayName":"darkpbj",
          "reputation":440
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"So you want to access the Java heapspace and auto-magically locate a given variable (a near impossible task in and of itself) edit it and have java pick it up being none-the-wiser? You could do a heap dump to get a bunch of raw unreadable data, but then the current stack frame that you're trying to spoof would not pick it up unless it was marked as volatile (i.e. it would have to know it was coming) In short, no there's no way to do this. Sorry! but if you're feeling masochistic: http://docs.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21009286]-[87417639]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"So you want to access the Java heapspace and auto-magically locate a given variable (a near impossible task in and of itself) edit it and have java pick it up being none-the-wiser? You could do a heap dump to get a bunch of raw unreadable data, but then the current stack frame that you're trying to spoof would not pick it up unless it was marked as volatile (i.e. it would have to know it was coming) In short, no there's no way to do this. Sorry! but if you're feeling masochistic: http://docs.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jre":1,
                      "wiser":1,
                      "unread":1,
                      "feel":1,
                      "heapspac":1,
                      "auto":1,
                      "mxbean":1,
                      "task":1,
                      "imposs":1,
                      "data":1,
                      "sun":1,
                      "oracl":1,
                      "bunch":1,
                      "dump":1,
                      "come":1,
                      "spoof":1,
                      "doc":2,
                      "frame":1,
                      "masochist":1,
                      "edit":1,
                      "diagnost":1,
                      "raw":1,
                      "pick":2,
                      "stack":1,
                      "javas":1,
                      "spot":1,
                      "hot":1,
                      "magic":1,
                      "api":1,
                      "heap":1,
                      "html":1,
                      "variabl":1,
                      "mark":1,
                      "manag":2,
                      "current":1,
                      "http":1,
                      "extens":1,
                      "locat":1,
                      "access":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21009352,
        "postId":14964122,
        "creationDate":"2013-02-19",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1698073,
          "displayName":"jalynn2",
          "reputation":2167
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Hacking into another Java process that is not coded to cooperate and share it's local data is not possible. As with many other languages, most variables local to a method are allocated on the stack and may have a different address each time the method is executed. An object is resident in a random place in the heap. It is all designed to be resistant to the type of program you are attempting to code."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[14964122-cu21009352]-[-1299527440]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Hacking into another Java process that is not coded to cooperate and share it's local data is not possible. As with many other languages, most variables local to a method are allocated on the stack and may have a different address each time the method is executed. An object is resident in a random place in the heap. It is all designed to be resistant to the type of program you are attempting to code."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "program":1,
                      "resid":1,
                      "method":2,
                      "random":1,
                      "languag":1,
                      "design":1,
                      "alloc":1,
                      "cooper":1,
                      "process":1,
                      "data":1,
                      "local":2,
                      "object":1,
                      "code":2,
                      "share":1,
                      "resist":1,
                      "stack":1,
                      "address":1,
                      "hack":1,
                      "place":1,
                      "time":1,
                      "heap":1,
                      "attempt":1,
                      "type":1,
                      "variabl":1,
                      "execut":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "memory",
      "operating-system",
      "jvm",
      "jni"
    ],
    "creationDate":"2013-02-19",
    "lastActivityDate":"2013-02-19",
    "lastEditDate":"2013-02-19",
    "score":-1,
    "viewCount":134,
    "owner":{
      "type":"StackOverflowUser",
      "id":1120021,
      "displayName":"DKG",
      "reputation":122
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I want to access memory locations currently used by Java variables. I plan to access these locations using C or another language, and I plan to change the location values.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14964122]-[7481238]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I want to access memory locations currently used by Java variables. I plan to access these locations using C or another language, and I plan to change the location values.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "chang":1,
                  "languag":1,
                  "valu":1,
                  "variabl":1,
                  "locat":3,
                  "plan":2,
                  "access":2,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The program which will access the Java program has no control over the program; it will do this task by searching the memory.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14964122]-[1289080864]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The program which will access the Java program has no control over the program; it will do this task by searching the memory.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "program":3,
                  "task":1,
                  "control":1,
                  "access":1,
                  "search":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I need advice on how to write this second program.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14964122]-[239961353]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I need advice on how to write this second program.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "advic":1,
                  "write":1,
                  "program":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p><img src=\"http://i.stack.imgur.com/1nE6r.jpg\"alt=\"enter image description here\"/></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14964122]-[1347633453]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p><img src=\"http://i.stack.imgur.com/1nE6r.jpg\"alt=\"enter image description here\"/></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "imgur":1,
                  "descript":1,
                  "jpg":1,
                  "img":1,
                  "enter":1,
                  "alt":1,
                  "src":1,
                  "stack":1,
                  "http":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":14965211,
      "questionId":14964122,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21009993,
          "postId":14965211,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1120021,
            "displayName":"DKG",
            "reputation":122
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks this is exactly i was looking for"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14965211-cu21009993]-[1689975967]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks this is exactly i was looking for"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21010093,
          "postId":14965211,
          "creationDate":"2013-02-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2084433,
            "displayName":"parsifal",
            "reputation":251
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I can't imagine that you've actually had the time to read and understand all those links in two minutes ..."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14965211-cu21010093]-[-722699219]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I can't imagine that you've actually had the time to read and understand all those links in two minutes ..."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "minut":1,
                        "understand":1,
                        "link":1,
                        "imagin":1,
                        "time":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21024035,
          "postId":14965211,
          "creationDate":"2013-02-20",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1120021,
            "displayName":"DKG",
            "reputation":122
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I had idea about JPDA but the idea didn't striked me before"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14965211-cu21024035]-[464628387]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I had idea about JPDA but the idea didn't striked me before"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jpda":1,
                        "strike":1,
                        "idea":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-02-19",
      "lastActivityDate":"2013-02-19",
      "score":1,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":2084433,
        "displayName":"parsifal",
        "reputation":251
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You are essentially wanting to write a <a href=\"http://en.wikipedia.org/wiki/Debugger\"rel=\"nofollow\">debugger</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14965211]-[-69836903]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You are essentially wanting to write a <a href=\"http://en.wikipedia.org/wiki/Debugger\"rel=\"nofollow\">debugger</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "want":1,
                    "rel":1,
                    "debugg":2,
                    "wikipedia":1,
                    "nofollow":1,
                    "wiki":1,
                    "org":1,
                    "href":1,
                    "http":1,
                    "essenti":1,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Java has a built-in debugging facility, called <a href=\"http://docs.oracle.com/javase/6/docs/technotes/guides/jpda/index.html\"rel=\"nofollow\">JPDA</a>. However, normally the debugged process needs to be started with options that allow the debugger to attach. If you can do this, great.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14965211]-[1923878701]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Java has a built-in debugging facility, called <a href=\"http://docs.oracle.com/javase/6/docs/technotes/guides/jpda/index.html\"rel=\"nofollow\">JPDA</a>. However, normally the debugged process needs to be started with options that allow the debugger to attach. If you can do this, great.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "built":1,
                    "guid":1,
                    "process":1,
                    "option":1,
                    "rel":1,
                    "oracl":1,
                    "doc":2,
                    "technot":1,
                    "debug":2,
                    "jpda":2,
                    "attach":1,
                    "debugg":1,
                    "nofollow":1,
                    "facil":1,
                    "javas":1,
                    "html":1,
                    "href":1,
                    "start":1,
                    "http":1,
                    "call":1,
                    "great":1,
                    "index":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/tools/jmap/JMap.java\"rel=\"nofollow\">JMap</a> program can attach to a running process. I haven't looked at it very deeply, but it appears that there is a way to load a debugging agent into that process through classes in the Sun Tools JAR. Of course, that only works with a Sun/Oracle JVM (or OpenJDK).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14965211]-[825411295]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/tools/jmap/JMap.java\"rel=\"nofollow\">JMap</a> program can attach to a running process. I haven't looked at it very deeply, but it appears that there is a way to load a debugging agent into that process through classes in the Sun Tools JAR. Of course, that only works with a Sun/Oracle JVM (or OpenJDK).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "openjdk":1,
                    "jvm":1,
                    "program":1,
                    "root":1,
                    "tool":2,
                    "process":2,
                    "appear":1,
                    "run":1,
                    "look":1,
                    "sun":3,
                    "rel":1,
                    "oracl":1,
                    "load":1,
                    "repositori":1,
                    "agent":1,
                    "open":1,
                    "work":1,
                    "grepcod":2,
                    "debug":1,
                    "attach":1,
                    "nofollow":1,
                    "class":1,
                    "file":1,
                    "jmap":3,
                    "href":1,
                    "http":1,
                    "deepli":1,
                    "jar":1,
                    "jdk":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The third option is to step outside of the JVM altogether, and use a tool like <a href=\"http://www.gnu.org/software/gdb/\"rel=\"nofollow\">gdb</a>. To take this route, you'll need to understand the <a href=\"http://openjdk.java.net/\"rel=\"nofollow\">JVM implementation</a>. I'm not sure how much debugging information is left in the distributed executable, but you might be able to identify an entry point once you're sufficiently familiar with the build.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14965211]-[-1702142061]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The third option is to step outside of the JVM altogether, and use a tool like <a href=\"http://www.gnu.org/software/gdb/\"rel=\"nofollow\">gdb</a>. To take this route, you'll need to understand the <a href=\"http://openjdk.java.net/\"rel=\"nofollow\">JVM implementation</a>. I'm not sure how much debugging information is left in the distributed executable, but you might be able to identify an entry point once you're sufficiently familiar with the build.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "openjdk":1,
                    "jvm":2,
                    "point":1,
                    "step":1,
                    "familiar":1,
                    "tool":1,
                    "left":1,
                    "understand":1,
                    "option":1,
                    "rel":2,
                    "softwar":1,
                    "altogeth":1,
                    "build":1,
                    "rout":1,
                    "net":1,
                    "gnu":1,
                    "debug":1,
                    "gdb":2,
                    "entri":1,
                    "nofollow":2,
                    "suffici":1,
                    "inform":1,
                    "implement":1,
                    "identifi":1,
                    "org":1,
                    "href":2,
                    "http":2,
                    "distribut":1,
                    "execut":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Of course, the OS will enforce access rules, so if the process-to-be-hacked is running as another user and you're not the superuser, you're out of luck.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14965211]-[1773097833]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Of course, the OS will enforce access rules, so if the process-to-be-hacked is running as another user and you're not the superuser, you're out of luck.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "enforc":1,
                    "process":1,
                    "luck":1,
                    "run":1,
                    "rule":1,
                    "superus":1,
                    "hack":1,
                    "user":1,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":14964289,
      "questionId":14964122,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21008549,
          "postId":14964289,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1120021,
            "displayName":"DKG",
            "reputation":122
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"But the original java program is **unaware** that other process is viewing its memory"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14964289-cu21008549]-[-1918564912]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"But the original java program is **unaware** that other process is viewing its memory"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "process":1,
                        "origin":1,
                        "unawar":1,
                        "view":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21008632,
          "postId":14964289,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1551209,
            "displayName":"darkpbj",
            "reputation":440
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Ah ha! and it doesn't have to be but you will need to be running multiple processes. (One for Java to do its thing, and another one to concurrently make the data available) Well how about this, you could also write your data out to a file as it becomes available, and that way anyone else with permissions could access it (given that it isn't currently being written to)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14964289-cu21008632]-[-1561096406]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Ah ha! and it doesn't have to be but you will need to be running multiple processes. (One for Java to do its thing, and another one to concurrently make the data available) Well how about this, you could also write your data out to a file as it becomes available, and that way anyone else with permissions could access it (given that it isn't currently being written to)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "permiss":1,
                        "concurr":1,
                        "process":1,
                        "run":1,
                        "data":2,
                        "thing":1,
                        "written":1,
                        "isn":1,
                        "make":1,
                        "file":1,
                        "multipl":1,
                        "write":1,
                        "access":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21008728,
          "postId":14964289,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1120021,
            "displayName":"DKG",
            "reputation":122
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"So I should write another java program using jni, It will call native functions that will manipulate the memory of first java process, right?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14964289-cu21008728]-[-1511204438]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"So I should write another java program using jni, It will call native functions that will manipulate the memory of first java process, right?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "process":1,
                        "manipul":1,
                        "jni":1,
                        "function":1,
                        "call":1,
                        "write":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21008751,
          "postId":14964289,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1551209,
            "displayName":"darkpbj",
            "reputation":440
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It really depends on what application your going for. Can you elaborate on what you're trying to accomplish? What kind of data? How much of it?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14964289-cu21008751]-[1774158574]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It really depends on what application your going for. Can you elaborate on what you're trying to accomplish? What kind of data? How much of it?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "depend":1,
                        "data":1,
                        "elabor":1,
                        "applic":1,
                        "accomplish":1,
                        "kind":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21009225,
          "postId":14964289,
          "creationDate":"2013-02-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1120021,
            "displayName":"DKG",
            "reputation":122
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I have upload a pic for description"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14964289-cu21009225]-[-2109630702]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I have upload a pic for description"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "descript":1,
                        "pic":1,
                        "upload":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-02-19",
      "lastActivityDate":"2013-02-19",
      "lastEditDate":"2013-02-19",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1551209,
        "displayName":"darkpbj",
        "reputation":440
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Parsifal has it right . . . </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964289]-[-1412690066]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Parsifal has it right . . . </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "parsif":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>That said JNI is your answer. With JNI you can call C executables in java that handle all of the logic that you want to share memory. At that point it's just a matter of doing typical IPC between threads written in C. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964289]-[591532516]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>That said JNI is your answer. With JNI you can call C executables in java that handle all of the logic that you want to share memory. At that point it's just a matter of doing typical IPC between threads written in C. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "point":1,
                    "ipc":1,
                    "logic":1,
                    "jni":2,
                    "share":1,
                    "thread":1,
                    "typic":1,
                    "written":1,
                    "answer":1,
                    "matter":1,
                    "call":1,
                    "handl":1,
                    "execut":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This can be quick and dirty (and a pain to debug) but you can pass in the data as parameters without too much trouble, but prepare to do some multithreading.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964289]-[-156840131]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This can be quick and dirty (and a pain to debug) but you can pass in the data as parameters without too much trouble, but prepare to do some multithreading.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "data":1,
                    "debug":1,
                    "paramet":1,
                    "multithread":1,
                    "troubl":1,
                    "pain":1,
                    "pass":1,
                    "prepar":1,
                    "quick":1,
                    "dirti":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Alternatively, you could use a JMS compliant messaging engine like ActiveMQ. You would serialize your data into some sort of message as it is available, and Java could then broadcast it to whomever is listening. (It could be 1000 clients, it could be 0--Java doesn't have to know about it) This will take some extra setup however. I believe at a minimum AMQ will be setting up a Jetty server local to do it's thing.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964289]-[-2094011550]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Alternatively, you could use a JMS compliant messaging engine like ActiveMQ. You would serialize your data into some sort of message as it is available, and Java could then broadcast it to whomever is listening. (It could be 1000 clients, it could be 0--Java doesn't have to know about it) This will take some extra setup however. I believe at a minimum AMQ will be setting up a Jetty server local to do it's thing.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "serial":1,
                    "jms":1,
                    "server":1,
                    "compliant":1,
                    "data":1,
                    "set":1,
                    "local":1,
                    "thing":1,
                    "altern":1,
                    "listen":1,
                    "activ":1,
                    "whomev":1,
                    "engin":1,
                    "broadcast":1,
                    "jetti":1,
                    "client":1,
                    "amq":1,
                    "extra":1,
                    "messag":2,
                    "minimum":1,
                    "sort":1,
                    "setup":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Lastly (as suggested in the comment below,) if your data is simple enough, you could always make a swap file (i.e. a plain old file to hold you data.) Just write your data out as it becomes available, and that way any other process with permissions could get to it provided it was not currently being written to.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964289]-[-401581313]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Lastly (as suggested in the comment below,) if your data is simple enough, you could always make a swap file (i.e. a plain old file to hold you data.) Just write your data out as it becomes available, and that way any other process with permissions could get to it provided it was not currently being written to.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "provid":1,
                    "permiss":1,
                    "simpl":1,
                    "process":1,
                    "suggest":1,
                    "data":3,
                    "last":1,
                    "hold":1,
                    "comment":1,
                    "written":1,
                    "plain":1,
                    "swap":1,
                    "make":1,
                    "file":2,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":14964319,
      "questionId":14964122,
      "comments":[
        
      ],
      "creationDate":"2013-02-19",
      "lastActivityDate":"2013-02-19",
      "lastEditDate":"2013-02-19",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":733309,
        "displayName":"JohnKlehm",
        "reputation":1688
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Edit:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964319]-[563059719]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Edit:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "edit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I missed that the Java side of things had to be unaware of the memory access. For that case See <a href=\"http://stackoverflow.com/questions/5574241/interesting-uses-of-sun-misc-unsafe\">Interesting uses of sun.misc.Unsafe</a> for how to get the raw addresses for JVM memory.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14964319]-[-1525542799]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I missed that the Java side of things had to be unaware of the memory access. For that case See <a href=\"http://stackoverflow.com/questions/5574241/interesting-uses-of-sun-misc-unsafe\">Interesting uses of sun.misc.Unsafe</a> for how to get the raw addresses for JVM memory.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "side":1,
                    "jvm":1,
                    "question":1,
                    "sun":2,
                    "thing":1,
                    "miss":1,
                    "stackoverflow":1,
                    "interest":2,
                    "raw":1,
                    "misc":2,
                    "address":1,
                    "unsaf":2,
                    "unawar":1,
                    "href":1,
                    "http":1,
                    "access":1,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}