{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":11022661,
    "title":"How does composite object communicate with parent object?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":14410195,
        "postId":11022661,
        "creationDate":"2012-06-13",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":418556,
          "displayName":"Andrew Thompson",
          "reputation":117299
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"*&quot;I have 2 `JFrame` Objects&quot;* That is where it starts to go wrong. See [The Use of Multiple JFrames, Good/Bad Practice?](http://stackoverflow.com/a/9554657/418556)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[11022661-cu14410195]-[1049670691]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"*&quot;I have 2 `JFrame` Objects&quot;* That is where it starts to go wrong. See [The Use of Multiple JFrames, Good/Bad Practice?](http://stackoverflow.com/a/9554657/418556)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "wrong":1,
                      "good":1,
                      "jframe":2,
                      "bad":1,
                      "object":1,
                      "stackoverflow":1,
                      "quot":2,
                      "practic":1,
                      "start":1,
                      "http":1,
                      "multipl":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":14410282,
        "postId":11022661,
        "creationDate":"2012-06-13",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1336626,
          "displayName":"avimonk",
          "reputation":8
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"They can be delayed until it is closed."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[11022661-cu14410282]-[559640876]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"They can be delayed until it is closed."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "delay":1,
                      "close":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "oop",
      "message",
      "composition"
    ],
    "creationDate":"2012-06-13",
    "lastActivityDate":"2012-06-14",
    "lastEditDate":"2012-06-13",
    "score":0,
    "viewCount":340,
    "owner":{
      "type":"StackOverflowUser",
      "id":1336626,
      "displayName":"avimonk",
      "reputation":8
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am from system programming background in C and Java programming is Greek and Latin for me.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[11022661]-[1932158630]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am from system programming background in C and Java programming is Greek and Latin for me.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "program":2,
                  "greek":1,
                  "system":1,
                  "background":1,
                  "latin":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>So my problem is:- I have 2 <code>JFrame</code> Objects</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[11022661]-[-1344446060]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>So my problem is:- I have 2 <code>JFrame</code> Objects</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "object":1,
                  "code":2,
                  "jframe":1,
                  "problem":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<ul> \n <li>I have a parent Object A</li> \n <li>which has child Objects B.</li> \n</ul>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[11022661]-[-36419020]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<ul> \n <li>I have a parent Object A</li> \n <li>which has child Objects B.</li> \n</ul>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "object":2,
                  "child":1,
                  "parent":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Object B has buttons on it. If a button is clicked in B I want to update the UI of parent Object.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[11022661]-[716974551]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Object B has buttons on it. If a button is clicked in B I want to update the UI of parent Object.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "parent":1,
                  "updat":1,
                  "object":2,
                  "button":2,
                  "click":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How can I can communicate to the parent - to update itself?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[11022661]-[-1544245852]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How can I can communicate to the parent - to update itself?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "updat":1,
                  "communic":1,
                  "parent":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":11022761,
      "questionId":11022661,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":14410410,
          "postId":11022761,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1336626,
            "displayName":"avimonk",
            "reputation":8
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I see. It makes sense modal dialog."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022761-cu14410410]-[1094097727]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I see. It makes sense modal dialog."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "dialog":1,
                        "sens":1,
                        "make":1,
                        "modal":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":14410509,
          "postId":11022761,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":418556,
            "displayName":"Andrew Thompson",
            "reputation":117299
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"See also the edit where I expand a bit. :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022761-cu14410509]-[-1868666028]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"See also the edit where I expand a bit. :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "bit":1,
                        "edit":1,
                        "expand":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-06-13",
      "lastActivityDate":"2012-06-13",
      "lastEditDate":"2012-06-13",
      "score":3,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":418556,
        "displayName":"Andrew Thompson",
        "reputation":117299
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>Do the updates need to be made 'live' while the values are adjusting and the 2nd GUI is open, or can they be delayed until it is closed? </p> \n <blockquote> \n  <p>They can be delayed until it is closed. </p> \n </blockquote> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022761]-[1819794229]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>Do the updates need to be made 'live' while the values are adjusting and the 2nd GUI is open, or can they be delayed until it is closed? </p> \n <blockquote> \n  <p>They can be delayed until it is closed. </p> \n </blockquote> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "delay":2,
                    "updat":1,
                    "open":1,
                    "blockquot":4,
                    "adjust":1,
                    "live":1,
                    "valu":1,
                    "close":2,
                    "made":1,
                    "gui":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Use a modal dialog or <code>JOptionPane</code> instead. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022761]-[-43646661]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Use a modal dialog or <code>JOptionPane</code> instead. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JOptionPane",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "modal":1,
                    "joption":1,
                    "pane":1,
                    "code":2,
                    "dialog":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JOptionPane",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\"rel=\"nofollow\">How to Make Dialogs</a></li> \n <li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html\"rel=\"nofollow\">How to Use Modality in Dialogs</a></li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022761]-[373470565]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\"rel=\"nofollow\">How to Make Dialogs</a></li> \n <li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html\"rel=\"nofollow\">How to Use Modality in Dialogs</a></li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "modal":2,
                    "rel":2,
                    "oracl":2,
                    "doc":2,
                    "compon":1,
                    "uisw":2,
                    "nofollow":2,
                    "misc":1,
                    "javas":2,
                    "make":1,
                    "html":2,
                    "href":2,
                    "http":2,
                    "tutori":2,
                    "dialog":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Using a modal dialog, whatever code line comes immediately after setting it visible, is blocked from being processed until it is closed. That is where you examine (the return value of the option pane &amp;) the value of the controls you put in the dialog. Note that the idea here is <strong>do not extend dialog</strong>. Instead just create an instance of one in the main code, create the controls, add them to it, and show it using the main frame as the parent.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022761]-[897576775]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Using a modal dialog, whatever code line comes immediately after setting it visible, is blocked from being processed until it is closed. That is where you examine (the return value of the option pane &amp;) the value of the controls you put in the dialog. Note that the idea here is <strong>do not extend dialog</strong>. Instead just create an instance of one in the main code, create the controls, add them to it, and show it using the main frame as the parent.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "examin":1,
                    "parent":1,
                    "modal":1,
                    "show":1,
                    "line":1,
                    "process":1,
                    "set":1,
                    "idea":1,
                    "option":1,
                    "visibl":1,
                    "strong":2,
                    "main":2,
                    "amp":1,
                    "extend":1,
                    "frame":1,
                    "pane":1,
                    "code":2,
                    "block":1,
                    "note":1,
                    "put":1,
                    "control":2,
                    "immedi":1,
                    "close":1,
                    "creat":2,
                    "add":1,
                    "dialog":3,
                    "instanc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Putting 'everything in one class' is not a good design, nor what I am suggesting in general. It is just that there is little cause here for the main GUI <em>not</em> to have references to controls that affect/update it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022761]-[1815821556]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Putting 'everything in one class' is not a good design, nor what I am suggesting in general. It is just that there is little cause here for the main GUI <em>not</em> to have references to controls that affect/update it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "design":1,
                    "good":1,
                    "suggest":1,
                    "updat":1,
                    "main":1,
                    "affect":1,
                    "general":1,
                    "refer":1,
                    "put":1,
                    "control":1,
                    "gui":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":11027753,
      "questionId":11022661,
      "comments":[
        
      ],
      "creationDate":"2012-06-14",
      "lastActivityDate":"2012-06-14",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1336626,
        "displayName":"avimonk",
        "reputation":8
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I have found one more way to solve this problem.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11027753]-[9261465]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I have found one more way to solve this problem.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "found":1,
                    "solv":1,
                    "problem":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I guess it can solve a general delegation problem.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11027753]-[-1265600395]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I guess it can solve a general delegation problem.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "solv":1,
                    "problem":1,
                    "general":1,
                    "guess":1,
                    "deleg":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Parent Object composes of Child Object. Parent Object passes this value to Child Object in constructor. This way the Child can call a method on the Parent Object and notify any change.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11027753]-[1692234428]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Parent Object composes of Child Object. Parent Object passes this value to Child Object in constructor. This way the Child can call a method on the Parent Object and notify any change.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "parent":3,
                    "method":1,
                    "compos":1,
                    "notifi":1,
                    "constructor":1,
                    "object":5,
                    "child":3,
                    "pass":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In this case Child Frame calls Parent frame and asks the parent to refresh itself.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11027753]-[-318913536]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In this case Child Frame calls Parent frame and asks the parent to refresh itself.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "parent":2,
                    "refresh":1,
                    "frame":2,
                    "child":1,
                    "ask":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":11022810,
      "questionId":11022661,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":14410492,
          "postId":11022810,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1336626,
            "displayName":"avimonk",
            "reputation":8
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I have implemented the Listener. However my question is bit different. I want to call the parent Object from my action Listener. Thanks neways,"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022810-cu14410492]-[1053516138]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I have implemented the Listener. However my question is bit different. I want to call the parent Object from my action Listener. Thanks neways,"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "parent":1,
                        "bit":1,
                        "neway":1,
                        "object":1,
                        "listen":2,
                        "implement":1,
                        "call":1,
                        "action":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":14410518,
          "postId":11022810,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1055001,
            "displayName":"Apurv",
            "reputation":1683
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"You can call any function of the parent class which is a JFrame class from inside the actionPerformed() method."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022810-cu14410518]-[-852786113]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"You can call any function of the parent class which is a JFrame class from inside the actionPerformed() method."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"which",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"from",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"actionPerformed",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "parent":1,
                        "method":1,
                        "jframe":1,
                        "insid":1,
                        "function":1,
                        "perform":1,
                        "call":1,
                        "action":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":14410665,
          "postId":11022810,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1336626,
            "displayName":"avimonk",
            "reputation":8
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thats the problem I donot know how to access the parent class. Child is not aware of the parent."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022810-cu14410665]-[-1020628223]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thats the problem I donot know how to access the parent class. Child is not aware of the parent."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "parent":2,
                        "problem":1,
                        "donot":1,
                        "child":1,
                        "awar":1,
                        "access":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":14410616,
          "postId":11022810,
          "creationDate":"2012-06-13",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":418556,
            "displayName":"Andrew Thompson",
            "reputation":117299
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Apurv Sure, but you are missing the bigger picture. The OP is launching a new GUI from within that button - it has its **own** controls &amp; they have no direct reference back to the main GUI, nor does it have a reference to those controls."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022810-cu14410616]-[-1760049019]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Apurv Sure, but you are missing the bigger picture. The OP is launching a new GUI from within that button - it has its **own** controls &amp; they have no direct reference back to the main GUI, nor does it have a reference to those controls."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Apurv",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "launch":1,
                        "main":1,
                        "amp":1,
                        "direct":1,
                        "miss":1,
                        "button":1,
                        "apurv":1,
                        "back":1,
                        "refer":2,
                        "control":2,
                        "bigger":1,
                        "pictur":1,
                        "gui":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":14410633,
          "postId":11022810,
          "creationDate":"2012-06-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1087848,
            "displayName":"11684",
            "reputation":4248
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"only if the addEventListener() is inside the parent class."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11022810-cu14410633]-[-1576967045]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"only if the addEventListener() is inside the parent class."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"addEventListener",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "parent":1,
                        "event":1,
                        "listen":1,
                        "insid":1,
                        "add":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-06-13",
      "lastActivityDate":"2012-06-13",
      "lastEditDate":"2012-06-13",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1055001,
        "displayName":"Apurv",
        "reputation":1683
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Well normally you have a parent JFrame object into which you put your widgets like buttons, panels etc. You can simply add an anonymous action listener with the button and then call any function of the parent class from inside it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022810]-[-645774277]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Well normally you have a parent JFrame object into which you put your widgets like buttons, panels etc. You can simply add an anonymous action listener with the button and then call any function of the parent class from inside it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"from",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "panel":1,
                    "parent":2,
                    "anonym":1,
                    "widget":1,
                    "jframe":1,
                    "object":1,
                    "button":2,
                    "listen":1,
                    "simpli":1,
                    "insid":1,
                    "function":1,
                    "put":1,
                    "call":1,
                    "add":1,
                    "action":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"public class MyFrame extends JFrame{ private Button button 2 = new Button(); public void init(){ b = new Button(&quot;Click me&quot;); b.addActionListener(new ActionListener(){ public void actionPerformed(ActionEvent e) { //CALL ANY FUNCTION OF PARENT CLASS FROM HERE. updateText(); } }); } updateText(){ this.button2.setText(&quot;new text&quot;); } } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[11022810]-[-1666166846]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"public",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"MyFrame",
                      "comments":[
                        
                      ]
                    },
                    "superTypes":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JFrame",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"{ private Button button "
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"=",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"LiteralNode",
                        "node":{
                          "type":"IntegerLiteralNode",
                          "valueRep":"2"
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"ConstructorCreatorNode",
                        "creatorType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Button",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "expressionArgs":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"MethodDeclaratorNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"public",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "returnType":{
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"init",
                      "comments":[
                        
                      ]
                    },
                    "parameters":{
                      "type":"FormalParametersNode",
                      "comments":[
                        
                      ]
                    },
                    "arrayReturnType":[
                      
                    ],
                    "body":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"=",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"b",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"ConstructorCreatorNode",
                              "creatorType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Button",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "expressionArgs":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  {
                                    "type":"LiteralNode",
                                    "node":{
                                      "type":"StringLiteralNode",
                                      "valueRep":"\"Click me\""
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"b"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"."
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"addActionListener"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"("
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"new"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"ActionListener"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"("
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":")"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"{"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"public"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"void"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"actionPerformed"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"("
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"ActionEvent"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":"e"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":")"
                        },
                        {
                          "type":"TextFragmentNode",
                          "text":" "
                        },
                        {
                          "type":"BlockNode",
                          "statements":[
                            
                          ],
                          "labels":[
                            
                          ],
                          "comments":[
                            {
                              "text":"//CALL ANY FUNCTION OF PARENT CLASS FROM HERE. updateText(); } }); } updateText(){ this.button2.setText(\"new text\"); } } \n"
                            }
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"public class MyFrame extends JFrame{ private Button button 2= new Button(); public void init(){ b = new Button(\"Click me\"); b.addActionListener(new ActionListener(){ public void actionPerformed(ActionEvent e) { //CALL ANY FUNCTION OF PARENT CLASS FROM HERE. updateText(); } }); } updateText(){ this.button2.setText(\"new text\"); } } \n...\n}...\n}",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "parent":1,
                    "event":1,
                    "set":1,
                    "updat":2,
                    "jframe":1,
                    "text":4,
                    "frame":1,
                    "button":5,
                    "listen":2,
                    "click":1,
                    "function":1,
                    "perform":1,
                    "call":1,
                    "add":1,
                    "init":1,
                    "action":4
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JFrame",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Button",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can find more info about it on this page <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html\"rel=\"nofollow\">http://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11022810]-[535450417]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can find more info about it on this page <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html\"rel=\"nofollow\">http://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "event":2,
                    "page":1,
                    "rel":1,
                    "oracl":2,
                    "doc":2,
                    "info":1,
                    "actionlisten":2,
                    "uisw":2,
                    "nofollow":1,
                    "javas":2,
                    "html":2,
                    "href":1,
                    "http":2,
                    "tutori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}