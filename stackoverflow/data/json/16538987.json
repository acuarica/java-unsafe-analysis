{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":16538987,
    "title":"JVM emits general protection fault whilst executing code in DozerBeanMapper",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":23753899,
        "postId":16538987,
        "creationDate":"2013-05-14",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":540873,
          "displayName":"Thomas Jungblut",
          "reputation":12336
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"The only help might be asking IBM for support and report this unsual behaviour to them."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16538987-cu23753899]-[848259450]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"The only help might be asking IBM for support and report this unsual behaviour to them."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "support":1,
                      "unsual":1,
                      "behaviour":1,
                      "report":1,
                      "ibm":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "dozer",
      "general-protection-fault"
    ],
    "creationDate":"2013-05-14",
    "lastActivityDate":"2013-05-14",
    "score":1,
    "viewCount":283,
    "owner":{
      "type":"StackOverflowUser",
      "id":343763,
      "displayName":"Edd Grant",
      "reputation":205
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Bit of a curious one here, we're running Dozer (5.3.2) in one of our apps (in an IBM 64bit JVM). Last Friday one of our production boxes suddenly came to a halt as the JVM emitted a general protection fault. Unfortunately we don't have any useful logging to show us what was going on at the time however the JVM's javacore file suggests that the issue occurred whilst executing code in Dozer's DozerBeanMapper:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[-309284280]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Bit of a curious one here, we're running Dozer (5.3.2) in one of our apps (in an IBM 64bit JVM). Last Friday one of our production boxes suddenly came to a halt as the JVM emitted a general protection fault. Unfortunately we don't have any useful logging to show us what was going on at the time however the JVM's javacore file suggests that the issue occurred whilst executing code in Dozer's DozerBeanMapper:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DozerBeanMapper",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":3,
                  "javacor":1,
                  "halt":1,
                  "show":1,
                  "bit":2,
                  "mapper":1,
                  "occur":1,
                  "suggest":1,
                  "run":1,
                  "issu":1,
                  "emit":1,
                  "code":1,
                  "dozer":3,
                  "general":1,
                  "bean":1,
                  "whilst":1,
                  "curious":1,
                  "app":1,
                  "friday":1,
                  "file":1,
                  "box":1,
                  "protect":1,
                  "time":1,
                  "fault":1,
                  "ibm":1,
                  "log":1,
                  "sudden":1,
                  "execut":1,
                  "product":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DozerBeanMapper",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"1XMCURTHDINFO Current thread NULL ---------------------- 3XMTHREADINFO &quot;WebContainer : 70&quot; J9VMThread:0x0000000011B1C600, j9thread_t:0x00002AAAC4F95920, java/lang/Thread:0x000000012D92E198, state:R, prio=5 3XMTHREADINFO1 (native thread ID:0x6BE2, native priority:0x5, native policy:UNKNOWN) 3XMTHREADINFO2 (native stack address range from:0x00002AAAC2CD4000, to:0x00002AAAC2D15000, size:0x41000) 3XMTHREADINFO3 Java callstack: 4XESTACKTRACE at org/dozer/DozerBeanMapper.getMappingProcessor(DozerBeanMapper.java:184) 1INTERNAL Unable to walk in-flight data on call stack "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[16538987]-[-1816139258]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"1XMCURTHDINFO Current thread NULL ---------------------- 3XMTHREADINFO \""
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"WebContainer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":": 70\" J9VMThread:0x0000000011B1C600, "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"j9thread_t",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":":0x00002AAAC4F95920, java/lang/Thread:0x000000012D92E198, state:R, prio=5 3XMTHREADINFO1 (native thread ID:0x6BE2, native priority:0x5, native policy:UNKNOWN) 3XMTHREADINFO2 (native stack address range from:0x00002AAAC2CD4000, to:0x00002AAAC2D15000, size:0x41000) 3XMTHREADINFO3 Java callstack: 4XESTACKTRACE at org/dozer/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"DozerBeanMapper",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"getMappingProcessor",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"(DozerBeanMapper.java:184) 1INTERNAL Unable to walk in-flight data on call stack "
                }
              ]
            },
            "rawText":"1XMCURTHDINFO Current thread NULL ---------------------- 3XMTHREADINFO \"WebContainer : 70\" J9VMThread:0x0000000011B1C600, j9thread_t:0x00002AAAC4F95920, java/lang/Thread:0x000000012D92E198, state:R, prio=5 3XMTHREADINFO1 (native thread ID:0x6BE2, native priority:0x5, native policy:UNKNOWN) 3XMTHREADINFO2 (native stack address range from:0x00002AAAC2CD4000, to:0x00002AAAC2D15000, size:0x41000) 3XMTHREADINFO3 Java callstack: 4XESTACKTRACE at org/dozer/DozerBeanMappergetMappingProcessor(DozerBeanMapper.java:184) 1INTERNAL Unable to walk in-flight data on call stack ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "aaac":3,
                  "xmcurthdinfo":1,
                  "size":1,
                  "vmthread":1,
                  "state":1,
                  "mapper":1,
                  "map":1,
                  "flight":1,
                  "rang":1,
                  "data":1,
                  "walk":1,
                  "unknown":1,
                  "contain":1,
                  "callstack":1,
                  "xestacktrac":1,
                  "xmthreadinfo":4,
                  "web":1,
                  "dozer":3,
                  "thread":4,
                  "bean":2,
                  "processor":1,
                  "polici":1,
                  "stack":2,
                  "address":1,
                  "mapperget":1,
                  "lang":1,
                  "org":1,
                  "prioriti":1,
                  "current":1,
                  "unabl":1,
                  "prio":1,
                  "call":1,
                  "intern":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"WebContainer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I took a quick look at the Dozer source for DozerBeanMapper and noticed that the <a href=\"http://grepcode.com/file/repo1.maven.org/maven2/net.sf.dozer/dozer/5.3.2/org/dozer/DozerBeanMapper.java?av=f#184\"rel=\"nofollow\">line of code which is reported in the javacore log</a> uses Sun's <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/atomic/AtomicBoolean.html\"rel=\"nofollow\">java.util.concurrent.atomic.AtomicBoolean</a> which itself uses <a href=\"http://www.javasourcecode.org/html/open-source/jdk/jdk-6u23/sun/misc/Unsafe.java.html\"rel=\"nofollow\">sun.misc.Unsafe</a>. From what understand about <code>sun.misc.Unsafe</code> it allows rather more direct and arbitrary memory allocation capabilities than would usually be exposed by the JVM. I am of course speculating here but that got me wondering whether the gpf that we saw could have been related to Dozer's use of <code>sun.misc.Unsafe</code>.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[-1481339252]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I took a quick look at the Dozer source for DozerBeanMapper and noticed that the <a href=\"http://grepcode.com/file/repo1.maven.org/maven2/net.sf.dozer/dozer/5.3.2/org/dozer/DozerBeanMapper.java?av=f#184\"rel=\"nofollow\">line of code which is reported in the javacore log</a> uses Sun's <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/atomic/AtomicBoolean.html\"rel=\"nofollow\">java.util.concurrent.atomic.AtomicBoolean</a> which itself uses <a href=\"http://www.javasourcecode.org/html/open-source/jdk/jdk-6u23/sun/misc/Unsafe.java.html\"rel=\"nofollow\">sun.misc.Unsafe</a>. From what understand about <code>sun.misc.Unsafe</code> it allows rather more direct and arbitrary memory allocation capabilities than would usually be exposed by the JVM. I am of course speculating here but that got me wondering whether the gpf that we saw could have been related to Dozer's use of <code>sun.misc.Unsafe</code>.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DozerBeanMapper",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"atomic",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"AtomicBoolean",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "javacor":1,
                  "concurr":2,
                  "arbitrari":1,
                  "alloc":1,
                  "util":2,
                  "mapper":2,
                  "relat":1,
                  "capabl":1,
                  "line":1,
                  "javasourcecod":1,
                  "understand":1,
                  "sun":5,
                  "rel":3,
                  "oracl":1,
                  "specul":1,
                  "open":1,
                  "expos":1,
                  "doc":2,
                  "net":1,
                  "grepcod":1,
                  "direct":1,
                  "code":5,
                  "gpf":1,
                  "dozer":7,
                  "maven":2,
                  "nofollow":3,
                  "bean":2,
                  "wonder":1,
                  "misc":4,
                  "javas":1,
                  "report":1,
                  "file":1,
                  "notic":1,
                  "atom":4,
                  "quick":1,
                  "api":1,
                  "unsaf":4,
                  "repo":1,
                  "org":3,
                  "html":3,
                  "href":3,
                  "http":3,
                  "sourc":2,
                  "jdk":2,
                  "log":1,
                  "www":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"util",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"concurrent",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"atomic",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"AtomicBoolean",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DozerBeanMapper",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To further complicate things we are unfortunately using multiple DozerBeanMappers in our application (something we're working towards fixing... isn't it fun inheriting code). These mappers are at least instantiated only once at app-startup time rather than on a per-request basis.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[-1808892714]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To further complicate things we are unfortunately using multiple DozerBeanMappers in our application (something we're working towards fixing... isn't it fun inheriting code). These mappers are at least instantiated only once at app-startup time rather than on a per-request basis.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DozerBeanMappers",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "basi":1,
                  "request":1,
                  "instanti":1,
                  "mapper":2,
                  "complic":1,
                  "startup":1,
                  "fix":1,
                  "thing":1,
                  "work":1,
                  "code":1,
                  "dozer":1,
                  "inherit":1,
                  "bean":1,
                  "fun":1,
                  "applic":1,
                  "isn":1,
                  "app":1,
                  "time":1,
                  "multipl":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DozerBeanMappers",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Unfortunately I haven't yet figured out how to replicate the issue so thought I'd gather some information while I try and do so as I'm currently struggling to think how I might prove/ disprove my theory. Has anyone else experienced any gpf situations when using Dozer? Is it likely that our usage of multiple DozerMapperBeans is causing the issue?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[-1573286403]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Unfortunately I haven't yet figured out how to replicate the issue so thought I'd gather some information while I try and do so as I'm currently struggling to think how I might prove/ disprove my theory. Has anyone else experienced any gpf situations when using Dozer? Is it likely that our usage of multiple DozerMapperBeans is causing the issue?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DozerMapperBeans",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "replic":1,
                  "prove":1,
                  "disprov":1,
                  "thought":1,
                  "mapper":1,
                  "issu":2,
                  "theori":1,
                  "gpf":1,
                  "situat":1,
                  "dozer":2,
                  "bean":1,
                  "inform":1,
                  "struggl":1,
                  "caus":1,
                  "figur":1,
                  "usag":1,
                  "multipl":1,
                  "experienc":1,
                  "gather":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DozerMapperBeans",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Grateful for any thoughts,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[1910235656]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Grateful for any thoughts,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "grate":1,
                  "thought":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Edd</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16538987]-[973060924]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Edd</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "edd":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    
  ]
}