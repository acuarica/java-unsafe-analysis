{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":20655372,
    "title":"Identity Hashcode to Java Object",
    "comments":[
      
    ],
    "tags":[
      "java",
      "hashcode",
      "jvmti"
    ],
    "creationDate":"2013-12-18",
    "lastActivityDate":"2013-12-18",
    "score":2,
    "viewCount":144,
    "owner":{
      "type":"StackOverflowUser",
      "id":2515729,
      "displayName":"Rittel",
      "reputation":105
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>A friend of mine and I have the following bet going:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[1500327465]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>A friend of mine and I have the following bet going:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "friend":1,
                  "bet":1,
                  "mine":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>It is possible to get the <code>Object</code> again from the memory by using the <code>Identity Hashcode</code> received for that <code>Object</code> using <code>System.identityHashCode()</code> in <code>Java</code>. With the restriction that it has not yet been cleaned up by the Garbage Collector.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[-1385524009]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>It is possible to get the <code>Object</code> again from the memory by using the <code>Identity Hashcode</code> received for that <code>Object</code> using <code>System.identityHashCode()</code> in <code>Java</code>. With the restriction that it has not yet been cleaned up by the Garbage Collector.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"System",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"identityHashCode",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "hashcod":1,
                  "collector":1,
                  "receiv":1,
                  "system":1,
                  "clean":1,
                  "object":2,
                  "code":11,
                  "hash":1,
                  "ident":2,
                  "restrict":1,
                  "garbag":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have been looking for an answer for quite some while now and am not able to find a definite one.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[873239654]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have been looking for an answer for quite some while now and am not able to find a definite one.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "definit":1,
                  "find":1,
                  "answer":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I think that it might be possible to do so using the <code>JVMTI</code>, but I havn't yet worked with it.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[-1885102784]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I think that it might be possible to do so using the <code>JVMTI</code>, but I havn't yet worked with it.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "havn":1,
                  "work":1,
                  "jvmti":1,
                  "code":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Does anyone of you have an answer to that? Will buy you a coffie, if I can do so on your site ;)</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[1730868352]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Does anyone of you have an answer to that? Will buy you a coffie, if I can do so on your site ;)</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "buy":1,
                  "site":1,
                  "coffi":1,
                  "answer":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Thanks in advance, Felix</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[-362204139]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Thanks in advance, Felix</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "advanc":1,
                  "felix":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>p.s: I am saying this behaviour can be achieved and the friend of mine says it is not possible</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20655372]-[-555925166]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>p.s: I am saying this behaviour can be achieved and the friend of mine says it is not possible</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "achiev":1,
                  "friend":1,
                  "behaviour":1,
                  "mine":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":20655485,
      "questionId":20655372,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30923178,
          "postId":20655485,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2515729,
            "displayName":"Rittel",
            "reputation":105
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Ok, so I learned something today! Thanks for the detailed answer. Where can I buy you a coffie?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655485-cu30923178]-[421340616]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Ok, so I learned something today! Thanks for the detailed answer. Where can I buy you a coffie?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "learn":1,
                        "buy":1,
                        "coffi":1,
                        "answer":1,
                        "detail":1,
                        "today":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30923280,
          "postId":20655485,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Rittel When I am in town, I travel quite a bit these days. ;) Mostly USA and Europe."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655485-cu30923280]-[-176489409]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Rittel When I am in town, I travel quite a bit these days. ;) Mostly USA and Europe."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Rittel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "bit":1,
                        "travel":1,
                        "usa":1,
                        "rittel":1,
                        "town":1,
                        "europ":1,
                        "day":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30923368,
          "postId":20655485,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Rittel Added a more obscure note ;)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655485-cu30923368]-[-491296329]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Rittel Added a more obscure note ;)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Rittel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "ad":1,
                        "note":1,
                        "rittel":1,
                        "obscur":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30923527,
          "postId":20655485,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2515729,
            "displayName":"Rittel",
            "reputation":105
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Haha ok :D I'll be glad to organize a coffie if I am able to do so ;)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655485-cu30923527]-[318853594]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Haha ok :D I'll be glad to organize a coffie if I am able to do so ;)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "glad":1,
                        "organ":1,
                        "haha":1,
                        "coffi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-12-18",
      "lastActivityDate":"2013-12-18",
      "lastEditDate":"2013-12-18",
      "score":4,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In theory it is possible however you have some issues.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655485]-[-185226646]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In theory it is possible however you have some issues.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "issu":1,
                    "theori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li>it is randomly generated so it is not unique. Any number of objects (though unlikely) could have the same identity hash code.</li> \n <li>it is not a memory location, it doesn't change when moved from Eden, around the Survivors spaces or in tenured space.</li> \n <li>you need to find all the object roots to potentially find it.</li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655485]-[2040283200]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li>it is randomly generated so it is not unique. Any number of objects (though unlikely) could have the same identity hash code.</li> \n <li>it is not a memory location, it doesn't change when moved from Eden, around the Survivors spaces or in tenured space.</li> \n <li>you need to find all the object roots to potentially find it.</li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "number":1,
                    "chang":1,
                    "find":2,
                    "random":1,
                    "move":1,
                    "uniqu":1,
                    "tenur":1,
                    "root":1,
                    "potenti":1,
                    "object":2,
                    "code":1,
                    "eden":1,
                    "hash":1,
                    "ident":1,
                    "space":2,
                    "survivor":1,
                    "generat":1,
                    "locat":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you can assumes it is visible to a known object like a static collection, it should be easy to navigate via reflection.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655485]-[705775969]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you can assumes it is visible to a known object like a static collection, it should be easy to navigate via reflection.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "assum":1,
                    "easi":1,
                    "visibl":1,
                    "object":1,
                    "collect":1,
                    "reflect":1,
                    "navig":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>BTW One the 64-bit OpenJDK/Oracle JVM, the identity hash code is stored in the header from offset 1, this means you can read it, or even change it using sun.misc.Unsafe. ;)</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655485]-[1067966720]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>BTW One the 64-bit OpenJDK/Oracle JVM, the identity hash code is stored in the header from offset 1, this means you can read it, or even change it using sun.misc.Unsafe. ;)</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "chang":1,
                    "jvm":1,
                    "bit":1,
                    "btw":1,
                    "sun":1,
                    "mean":1,
                    "oracl":1,
                    "store":1,
                    "open":1,
                    "code":1,
                    "hash":1,
                    "ident":1,
                    "offset":1,
                    "misc":1,
                    "header":1,
                    "unsaf":1,
                    "jdk":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>BTW2 The 31-bit hashCode (not 32-bit) stored in the header is lazily set and is also used for biased locking. i.e. once you call Object.hashCode() or System.identityHashCode() you disable biased locking for the object.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655485]-[-2125534577]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>BTW2 The 31-bit hashCode (not 32-bit) stored in the header is lazily set and is also used for biased locking. i.e. once you call Object.hashCode() or System.identityHashCode() you disable biased locking for the object.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"hashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Object",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"hashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"System",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "disabl":1,
                    "bit":2,
                    "system":1,
                    "btw":1,
                    "set":1,
                    "lazili":1,
                    "store":1,
                    "lock":2,
                    "object":2,
                    "code":3,
                    "hash":3,
                    "ident":1,
                    "bias":2,
                    "header":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20655489,
      "questionId":20655372,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30922788,
          "postId":20655489,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"... and C/C++ has references/pointers to memory addresses which makes looking them up *much* easier."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655489-cu30922788]-[-387615645]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"... and C/C++ has references/pointers to memory addresses which makes looking them up *much* easier."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "pointer":1,
                        "easier":1,
                        "refer":1,
                        "address":1,
                        "make":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30923208,
          "postId":20655489,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2515729,
            "displayName":"Rittel",
            "reputation":105
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Ok thanks, I will take a look at those `References` :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655489-cu30923208]-[1907413302]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Ok thanks, I will take a look at those `References` :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "refer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-12-18",
      "lastActivityDate":"2013-12-18",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":3049628,
        "displayName":"Tim B",
        "reputation":22297
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I think your friend is going to win this bet. Java/the JVM manages the memory for you and there is no way to access it once you drop all your references to something.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655489]-[1753261069]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I think your friend is going to win this bet. Java/the JVM manages the memory for you and there is no way to access it once you drop all your references to something.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "win":1,
                    "bet":1,
                    "friend":1,
                    "drop":1,
                    "refer":1,
                    "manag":1,
                    "access":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Phantom References, Weak References, etc are all designed to allow just what you are describing - so if you keep a Weak or Phantom reference to something you can. identityHashCode is neither though.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655489]-[-1282777530]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Phantom References, Weak References, etc are all designed to allow just what you are describing - so if you keep a Weak or Phantom reference to something you can. identityHashCode is neither though.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "design":1,
                    "weak":2,
                    "code":1,
                    "hash":1,
                    "ident":1,
                    "refer":3,
                    "describ":1,
                    "phantom":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>C and C++ might let you do this since you have more direct control of the memory, but even then you would need the memory location not a hash of it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655489]-[1216608890]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>C and C++ might let you do this since you have more direct control of the memory, but even then you would need the memory location not a hash of it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "direct":1,
                    "hash":1,
                    "control":1,
                    "locat":1,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20655504,
      "questionId":20655372,
      "comments":[
        
      ],
      "creationDate":"2013-12-18",
      "lastActivityDate":"2013-12-18",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":964243,
        "displayName":"Boann",
        "reputation":17229
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>No, because the identityHashCodes are not necessarily unique. They are not pointers to the objects.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655504]-[-1732123176]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>No, because the identityHashCodes are not necessarily unique. They are not pointers to the objects.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCodes",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "uniqu":1,
                    "pointer":1,
                    "object":1,
                    "code":1,
                    "hash":1,
                    "ident":1,
                    "necessarili":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20655517,
      "questionId":20655372,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30922848,
          "postId":20655517,
          "creationDate":"2013-12-18",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The hash code doesn't change when an object is moved between generations so you can assume it is not a memory address. ;)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655517-cu30922848]-[1393475375]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The hash code doesn't change when an object is moved between generations so you can assume it is not a memory address. ;)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":1,
                        "assum":1,
                        "move":1,
                        "object":1,
                        "code":1,
                        "hash":1,
                        "address":1,
                        "generat":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30923378,
          "postId":20655517,
          "creationDate":"2013-12-18",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1297272,
            "displayName":"Javier",
            "reputation":5407
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Right. I wrote that only because I wanted to address explicitly the comment on the documentation of Object.hashCode that &quot;this is typically implemented by converting the internal address of the object into an integer&quot;."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655517-cu30923378]-[-761866294]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Right. I wrote that only because I wanted to address explicitly the comment on the documentation of Object.hashCode that &quot;this is typically implemented by converting the internal address of the object into an integer&quot;."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Object",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"hashCode",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "want":1,
                        "document":1,
                        "wrote":1,
                        "object":2,
                        "code":1,
                        "hash":1,
                        "typic":1,
                        "comment":1,
                        "implement":1,
                        "address":2,
                        "quot":2,
                        "explicit":1,
                        "intern":1,
                        "convert":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30924012,
          "postId":20655517,
          "creationDate":"2013-12-18",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"My point being that the &quot;internal address&quot; doesn't correspond to any actual address. You can prove that objects with the same address e.g. after a GC they are at the bottom of the Eden space and you can show they have the same address, but they have different hash code each time."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20655517-cu30924012]-[-672344984]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"My point being that the &quot;internal address&quot; doesn't correspond to any actual address. You can prove that objects with the same address e.g. after a GC they are at the bottom of the Eden space and you can show they have the same address, but they have different hash code each time."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "prove":1,
                        "point":1,
                        "show":1,
                        "bottom":1,
                        "correspond":1,
                        "object":1,
                        "code":1,
                        "eden":1,
                        "hash":1,
                        "space":1,
                        "address":4,
                        "quot":2,
                        "time":1,
                        "actual":1,
                        "intern":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-12-18",
      "lastActivityDate":"2013-12-18",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1297272,
        "displayName":"Javier",
        "reputation":5407
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>No. The <code>identityHashCode</code> is not necessarily a memory address: it is only the default implementation of <code>hashCode</code>. It is also not guaranteed to be unique for all objects (but different instances should have different identityHashCodes).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655517]-[-1796497505]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>No. The <code>identityHashCode</code> is not necessarily a memory address: it is only the default implementation of <code>hashCode</code>. It is also not guaranteed to be unique for all objects (but different instances should have different identityHashCodes).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"hashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCodes",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "uniqu":1,
                    "object":1,
                    "code":7,
                    "guarante":1,
                    "hash":3,
                    "ident":2,
                    "implement":1,
                    "address":1,
                    "necessarili":1,
                    "instanc":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Even if the identityHashCode is derived from a memory address, the object may be reallocated (but the identityHashCode <strong>cannot</strong> change, by definition). </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20655517]-[975139329]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Even if the identityHashCode is derived from a memory address, the object may be reallocated (but the identityHashCode <strong>cannot</strong> change, by definition). </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"identityHashCode",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "deriv":1,
                    "strong":2,
                    "object":1,
                    "code":2,
                    "hash":2,
                    "ident":2,
                    "definit":1,
                    "realloc":1,
                    "address":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}