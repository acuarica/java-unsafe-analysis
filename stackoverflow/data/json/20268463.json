{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":20268463,
    "title":"Will java code compiled using OpenJDK always run on Oracle's Hotspot or vice versa?",
    "comments":[
      
    ],
    "tags":[
      "java",
      "jvm",
      "javac",
      "openjdk"
    ],
    "creationDate":"2013-11-28",
    "lastActivityDate":"2013-11-28",
    "score":1,
    "viewCount":492,
    "owner":{
      "type":"StackOverflowUser",
      "id":2514942,
      "displayName":"Aman Arora",
      "reputation":633
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I came through this <a href=\"http://mail.openjdk.java.net/pipermail/compiler-dev/2009-November/001645.html\"rel=\"nofollow\">document</a> where the same java code compiles in Oracle JDK but not on OpenJDK. Some references for the same problems are present <a href=\"http://stackoverflow.com/questions/11629444/is-it-possible-to-compile-java-using-oracle-jdk-and-run-the-code-on-openjdk\">here too on SO</a>. Does it mean <code>&quot;javac&quot;</code> is vendor specific?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20268463]-[429609060]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I came through this <a href=\"http://mail.openjdk.java.net/pipermail/compiler-dev/2009-November/001645.html\"rel=\"nofollow\">document</a> where the same java code compiles in Oracle JDK but not on OpenJDK. Some references for the same problems are present <a href=\"http://stackoverflow.com/questions/11629444/is-it-possible-to-compile-java-using-oracle-jdk-and-run-the-code-on-openjdk\">here too on SO</a>. Does it mean <code>&quot;javac&quot;</code> is vendor specific?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "openjdk":2,
                  "question":1,
                  "problem":1,
                  "document":1,
                  "present":1,
                  "run":1,
                  "pipermail":1,
                  "rel":1,
                  "oracl":2,
                  "open":1,
                  "net":1,
                  "code":4,
                  "stackoverflow":1,
                  "novemb":1,
                  "nofollow":1,
                  "dev":1,
                  "mail":1,
                  "specif":1,
                  "refer":1,
                  "quot":2,
                  "compil":3,
                  "html":1,
                  "href":2,
                  "vendor":1,
                  "http":2,
                  "jdk":3,
                  "javac":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>And if the answer is yes ? then there is a possibility that they may produce different bytecode. <a href=\"http://stackoverflow.com/questions/9207288/differences-in-java-bytecode-produced-by-oracles-and-eclipses-compilers\">Refer here</a>. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20268463]-[409814763]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>And if the answer is yes ? then there is a possibility that they may produce different bytecode. <a href=\"http://stackoverflow.com/questions/9207288/differences-in-java-bytecode-produced-by-oracles-and-eclipses-compilers\">Refer here</a>. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "question":1,
                  "produc":2,
                  "bytecod":2,
                  "differ":1,
                  "oracl":1,
                  "possibl":1,
                  "eclips":1,
                  "stackoverflow":1,
                  "refer":1,
                  "answer":1,
                  "compil":1,
                  "href":1,
                  "http":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p><strong>So if the bytecode is different, How will Oracle's JVM handle bytecode generated by OpenJDK's javac?</strong></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20268463]-[490168059]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p><strong>So if the bytecode is different, How will Oracle's JVM handle bytecode generated by OpenJDK's javac?</strong></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "bytecod":2,
                  "oracl":1,
                  "strong":2,
                  "open":1,
                  "generat":1,
                  "handl":1,
                  "jdk":1,
                  "javac":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Is it safe to say: <em>&quot;Java is &quot;Write Once and Run Anywhere, provided the javac compiler and JVM are from the same vendor? &quot;</em></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20268463]-[-1983908475]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Is it safe to say: <em>&quot;Java is &quot;Write Once and Run Anywhere, provided the javac compiler and JVM are from the same vendor? &quot;</em></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "provid":1,
                  "run":1,
                  "safe":1,
                  "quot":3,
                  "compil":1,
                  "vendor":1,
                  "javac":1,
                  "write":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":20268563,
      "questionId":20268463,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30249352,
          "postId":20268563,
          "creationDate":"2013-11-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@AmanArora Yes, but different versions of Java can produce subtly different byte code, however they should do the same thing. Note: Scala, groovy, JRuby, Jython etc all produce byte code and these should run on the major JVMs. Java is not the only language which runs on a JVM."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30249352]-[161392532]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@AmanArora Yes, but different versions of Java can produce subtly different byte code, however they should do the same thing. Note: Scala, groovy, JRuby, Jython etc all produce byte code and these should run on the major JVMs. Java is not the only language which runs on a JVM."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"AmanArora",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "languag":1,
                        "arora":1,
                        "subt":1,
                        "produc":2,
                        "run":2,
                        "thing":1,
                        "jvms":1,
                        "code":2,
                        "version":1,
                        "note":1,
                        "groovi":1,
                        "scala":1,
                        "jython":1,
                        "jrubi":1,
                        "aman":1,
                        "major":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235060,
          "postId":20268563,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2514942,
            "displayName":"Aman Arora",
            "reputation":633
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for the reply. [As mentioned here](http://stackoverflow.com/questions/9207288/differences-in-java-bytecode-produced-by-oracles-and-eclipses-compilers), the byte code itself is different.Then how it will run on different JVMs?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30235060]-[-1402579510]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for the reply. [As mentioned here](http://stackoverflow.com/questions/9207288/differences-in-java-bytecode-produced-by-oracles-and-eclipses-compilers), the byte code itself is different.Then how it will run on different JVMs?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "produc":1,
                        "bytecod":1,
                        "differ":1,
                        "run":1,
                        "oracl":1,
                        "jvms":1,
                        "code":1,
                        "eclips":1,
                        "stackoverflow":1,
                        "mention":1,
                        "repli":1,
                        "compil":1,
                        "http":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235121,
          "postId":20268563,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@AmanArora Most likely the difference is not important for the running of the program. e.g. you can include debugging or not , use obfuscation, reorder the methods and the class will run the same."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30235121]-[-783566298]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@AmanArora Most likely the difference is not important for the running of the program. e.g. you can include debugging or not , use obfuscation, reorder the methods and the class will run the same."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"AmanArora",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"will",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "method":1,
                        "arora":1,
                        "reorder":1,
                        "differ":1,
                        "run":2,
                        "obfusc":1,
                        "debug":1,
                        "includ":1,
                        "import":1,
                        "aman":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235153,
          "postId":20268563,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@AmanArora Don't forget the JVM doesn't actually run the byte code. It is translated into a data structure and possibly compiled to native code. All you have is a syntax checked binary format. The `javac` compiler doesn't even optimise 99% of cases."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30235153]-[2008179039]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@AmanArora Don't forget the JVM doesn't actually run the byte code. It is translated into a data structure and possibly compiled to native code. All you have is a syntax checked binary format. The `javac` compiler doesn't even optimise 99% of cases."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"AmanArora",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "format":1,
                        "jvm":1,
                        "arora":1,
                        "optimis":1,
                        "run":1,
                        "data":1,
                        "binari":1,
                        "possibl":1,
                        "structur":1,
                        "code":2,
                        "syntax":1,
                        "check":1,
                        "translat":1,
                        "forget":1,
                        "aman":1,
                        "compil":2,
                        "case":1,
                        "javac":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235234,
          "postId":20268563,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@AmanArora The OpenJDK is now declared to be the reference implementation. Anything which is different to it is a bug (according to OpenJDK anyway ;)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30235234]-[-444070440]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@AmanArora The OpenJDK is now declared to be the reference implementation. Anything which is different to it is a bug (according to OpenJDK anyway ;)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"AmanArora",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LocalVariableDeclarationStatementNode",
                        "modifiers":[
                          
                        ],
                        "declarators":{
                          "type":"VariableDeclaratorsNode",
                          "declarators":[
                            {
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"anyway",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ],
                              "varType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"OpenJDK",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "arora":1,
                        "open":2,
                        "declar":1,
                        "bug":1,
                        "refer":1,
                        "implement":1,
                        "aman":1,
                        "jdk":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"OpenJDK",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"anyway",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"OpenJDK",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235302,
          "postId":20268563,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2514942,
            "displayName":"Aman Arora",
            "reputation":633
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Correct me if i am wrong please. What i have understood is : 'javac' is standard across all the JDKs and the byte code it produces should run on any JVM which follows [JVM specification](http://docs.oracle.com/javase/specs/jvms/se7/html/index.html) made by ORACLE"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268563-cu30235302]-[652115156]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Correct me if i am wrong please. What i have understood is : 'javac' is standard across all the JDKs and the byte code it produces should run on any JVM which follows [JVM specification](http://docs.oracle.com/javase/specs/jvms/se7/html/index.html) made by ORACLE"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":2,
                        "standard":1,
                        "wrong":1,
                        "produc":1,
                        "jdks":1,
                        "correct":1,
                        "run":1,
                        "oracl":2,
                        "jvms":1,
                        "doc":1,
                        "code":1,
                        "understood":1,
                        "specif":1,
                        "spec":1,
                        "javas":1,
                        "html":2,
                        "http":1,
                        "made":1,
                        "javac":1,
                        "index":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-11-28",
      "lastActivityDate":"2013-11-28",
      "score":6,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The <code>javac</code> is not vendor specific, however different compilers can have different bugs and this can cause a difference.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268563]-[1803628954]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The <code>javac</code> is not vendor specific, however different compilers can have different bugs and this can cause a difference.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "differ":1,
                    "code":2,
                    "bug":1,
                    "specif":1,
                    "compil":1,
                    "vendor":1,
                    "javac":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>What makes much more difference is the built in libraries available, esp classes which are not intended to be used by developers. e.g. sun.misc.Unsafe.copyMemory(5 args) didn't exist until Java 6 update 18 in Oracle JDK and is only available in the last update of OpenJDK. AFAIK, it is not available in IBM JVM.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268563]-[-221713753]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>What makes much more difference is the built in libraries available, esp classes which are not intended to be used by developers. e.g. sun.misc.Unsafe.copyMemory(5 args) didn't exist until Java 6 update 18 in Oracle JDK and is only available in the last update of OpenJDK. AFAIK, it is not available in IBM JVM.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"copyMemory",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "built":1,
                    "exist":1,
                    "differ":1,
                    "updat":2,
                    "sun":1,
                    "afaik":1,
                    "oracl":1,
                    "librari":1,
                    "open":1,
                    "intend":1,
                    "misc":1,
                    "make":1,
                    "class":1,
                    "unsaf":1,
                    "ibm":1,
                    "develop":1,
                    "esp":1,
                    "jdk":2,
                    "arg":1,
                    "copi":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The Write Once, Run Anywhere means compile once, run anywhere. C++ for example can be written once and run anywhere provided you re-compile it for each system.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268563]-[2000828775]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The Write Once, Run Anywhere means compile once, run anywhere. C++ for example can be written once and run anywhere provided you re-compile it for each system.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "provid":1,
                    "system":1,
                    "run":3,
                    "mean":1,
                    "written":1,
                    "compil":2,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Once you have compiled your Java code, it will run on any system which has the libraries you used.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268563]-[-1784790775]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Once you have compiled your Java code, it will run on any system which has the libraries you used.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "system":1,
                    "run":1,
                    "librari":1,
                    "code":1,
                    "compil":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20268573,
      "questionId":20268463,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30235568,
          "postId":20268573,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2514942,
            "displayName":"Aman Arora",
            "reputation":633
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I have shared the link where java code does not even compile with the same versions of OpenJDK and Oracle JDK. Here's [the link](http://mail.openjdk.java.net/pipermail/compiler-dev/2009-November/001645.html)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268573-cu30235568]-[1197216220]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I have shared the link where java code does not even compile with the same versions of OpenJDK and Oracle JDK. Here's [the link](http://mail.openjdk.java.net/pipermail/compiler-dev/2009-November/001645.html)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "openjdk":1,
                        "pipermail":1,
                        "oracl":1,
                        "open":1,
                        "net":1,
                        "code":1,
                        "share":1,
                        "version":1,
                        "novemb":1,
                        "dev":1,
                        "mail":1,
                        "link":2,
                        "compil":2,
                        "html":1,
                        "http":1,
                        "jdk":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30235754,
          "postId":20268573,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":139985,
            "displayName":"Stephen C",
            "reputation":291715
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes ... but that's not a code generation bug. It is a bug in the error checking that causes one compiler to accept something that the other (rightly) calls a compilation error. It is also comparing compiler behaviour across different **versions** of Java!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268573-cu30235754]-[-1204270507]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes ... but that's not a code generation bug. It is a bug in the error checking that causes one compiler to accept something that the other (rightly) calls a compilation error. It is also comparing compiler behaviour across different **versions** of Java!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "accept":1,
                        "code":1,
                        "version":1,
                        "check":1,
                        "error":2,
                        "bug":2,
                        "compar":1,
                        "behaviour":1,
                        "generat":1,
                        "compil":3,
                        "call":1,
                        "right":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30236028,
          "postId":20268573,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2514942,
            "displayName":"Aman Arora",
            "reputation":633
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"So OpenJDK has their own javac implementation, Oracle has its own. There can be cases where the bytecodes generated might not be cross-compatible? isn't it?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268573-cu30236028]-[1484225253]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"So OpenJDK has their own javac implementation, Oracle has its own. There can be cases where the bytecodes generated might not be cross-compatible? isn't it?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "bytecod":1,
                        "oracl":1,
                        "open":1,
                        "isn":1,
                        "cross":1,
                        "implement":1,
                        "generat":1,
                        "case":1,
                        "jdk":1,
                        "javac":1,
                        "compat":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30236557,
          "postId":20268573,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":139985,
            "displayName":"Stephen C",
            "reputation":291715
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It is possible, but highly unlikely. In fact, OpenJDK and Oracle JDK are produced by the same team of people. It is the same codebase!!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268573-cu30236557]-[-1922167138]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It is possible, but highly unlikely. In fact, OpenJDK and Oracle JDK are produced by the same team of people. It is the same codebase!!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "codebas":1,
                        "produc":1,
                        "oracl":1,
                        "open":1,
                        "fact":1,
                        "team":1,
                        "peopl":1,
                        "jdk":2,
                        "high":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-11-28",
      "lastActivityDate":"2013-11-28",
      "lastEditDate":"2013-11-28",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":139985,
        "displayName":"Stephen C",
        "reputation":291715
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>Will java code compiled using OpenJDK always run on Oracle's Hotspot or vice versa?</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[297389041]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>Will java code compiled using OpenJDK always run on Oracle's Hotspot or vice versa?</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "run":1,
                    "oracl":1,
                    "vice":1,
                    "open":1,
                    "blockquot":2,
                    "hotspot":1,
                    "code":1,
                    "versa":1,
                    "compil":1,
                    "jdk":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If they are the same version, yes.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[-1714756812]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If they are the same version, yes.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "version":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>But if you compile on Java 7 and try to run on Java 6 or earlier, you will get problems (unless you use the -target switch appropriately).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[111721106]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>But if you compile on Java 7 and try to run on Java 6 or earlier, you will get problems (unless you use the -target switch appropriately).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "problem":1,
                    "run":1,
                    "earlier":1,
                    "target":1,
                    "compil":1,
                    "appropri":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are also differences in both the Java language and Java compilers' interpretation of the JLS between different <em>versions</em> of Java. But these differences typically lead to compilation errors, not to different code.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[-1795219712]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are also differences in both the Java language and Java compilers' interpretation of the JLS between different <em>versions</em> of Java. But these differences typically lead to compilation errors, not to different code.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jls":1,
                    "lead":1,
                    "languag":1,
                    "differ":2,
                    "code":1,
                    "version":1,
                    "error":1,
                    "typic":1,
                    "compil":2,
                    "interpret":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<hr />"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[1817223689]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<hr />"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In reality, OpenJDK and Oracle JDK are pretty close. In fact, for matching versions I'd expect the bytecodes produced by the respective <code>javac</code> compilers to be virtually identical. Compiler bug fixes made to one codebase are ported to the other as a matter of course, and code generation bugs in the bytecode compiler are pretty unusual. Other differences in generated bytecodes (i.e. not due to bugs) are unlikely to impact on the behaviour of a properly written program.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[-1288489095]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In reality, OpenJDK and Oracle JDK are pretty close. In fact, for matching versions I'd expect the bytecodes produced by the respective <code>javac</code> compilers to be virtually identical. Compiler bug fixes made to one codebase are ported to the other as a matter of course, and code generation bugs in the bytecode compiler are pretty unusual. Other differences in generated bytecodes (i.e. not due to bugs) are unlikely to impact on the behaviour of a properly written program.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "due":1,
                    "codebas":1,
                    "produc":1,
                    "proper":1,
                    "bytecod":3,
                    "differ":1,
                    "impact":1,
                    "fix":1,
                    "oracl":1,
                    "realiti":1,
                    "open":1,
                    "virtual":1,
                    "match":1,
                    "pretti":2,
                    "code":3,
                    "fact":1,
                    "version":1,
                    "ident":1,
                    "port":1,
                    "bug":3,
                    "expect":1,
                    "written":1,
                    "behaviour":1,
                    "generat":2,
                    "respect":1,
                    "compil":3,
                    "matter":1,
                    "unusu":1,
                    "close":1,
                    "made":1,
                    "jdk":2,
                    "javac":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<hr />"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[1817223689]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<hr />"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>Is it safe to say: &quot;Java is &quot;Write Once and Run Anywhere, provided the javac compiler and JVM are from the same vendor? &quot;</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[2065554075]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>Is it safe to say: &quot;Java is &quot;Write Once and Run Anywhere, provided the javac compiler and JVM are from the same vendor? &quot;</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "provid":1,
                    "run":1,
                    "safe":1,
                    "blockquot":2,
                    "quot":3,
                    "compil":1,
                    "vendor":1,
                    "javac":1,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Erm ... no. There are differences in Java behaviour for different platforms; i.e. Java on Windows and Java on Linux behave differently in some respects. Some of these differences are directly attributable to the platforms themselves; e.g. pathname syntaxes and file locking are different on Windows and Linux. Others are due to issues with mapping from Java to the platforms' different native windowing system.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[-1731356127]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Erm ... no. There are differences in Java behaviour for different platforms; i.e. Java on Windows and Java on Linux behave differently in some respects. Some of these differences are directly attributable to the platforms themselves; e.g. pathname syntaxes and file locking are different on Windows and Linux. Others are due to issues with mapping from Java to the platforms' different native windowing system.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "due":1,
                    "window":3,
                    "system":1,
                    "map":1,
                    "differ":3,
                    "pathnam":1,
                    "issu":1,
                    "lock":1,
                    "behav":1,
                    "direct":1,
                    "attribut":1,
                    "syntax":1,
                    "behaviour":1,
                    "linux":2,
                    "file":1,
                    "respect":1,
                    "platform":3,
                    "erm":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>These differences are nothing to do with compilers or code generation.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268573]-[-747748869]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>These differences are nothing to do with compilers or code generation.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "code":1,
                    "differ":1,
                    "generat":1,
                    "compil":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20268641,
      "questionId":20268463,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30235416,
          "postId":20268641,
          "creationDate":"2013-11-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2514942,
            "displayName":"Aman Arora",
            "reputation":633
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"&quot;Generating different bytecode is not necessarily generating bad bytecode&quot;. True ! But JVM has to translate that code to the native code and it can't translate any bytecode right ?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20268641-cu30235416]-[1724541578]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"&quot;Generating different bytecode is not necessarily generating bad bytecode&quot;. True ! But JVM has to translate that code to the native code and it can't translate any bytecode right ?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "bytecod":3,
                        "bad":1,
                        "code":2,
                        "translat":2,
                        "true":1,
                        "generat":2,
                        "quot":2,
                        "necessarili":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-11-28",
      "lastActivityDate":"2013-11-28",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":284538,
        "displayName":"Mike Thomsen",
        "reputation":13717
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The best answer to your question would be &quot;it depends.&quot; Generating different bytecode is not necessarily generating bad bytecode. Bear in mind that the first document you reference is discussing OpenJDK 6 and Oracle JDK 6. Back then, OpenJDK and Oracle JDK were in fact often subtly incompatible because Oracle hadn't brought the two JDK projects together the way they did with JDK 7. Now they're almost identical code bases, but prior to 7 that wasn't the case.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20268641]-[1665339464]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The best answer to your question would be &quot;it depends.&quot; Generating different bytecode is not necessarily generating bad bytecode. Bear in mind that the first document you reference is discussing OpenJDK 6 and Oracle JDK 6. Back then, OpenJDK and Oracle JDK were in fact often subtly incompatible because Oracle hadn't brought the two JDK projects together the way they did with JDK 7. Now they're almost identical code bases, but prior to 7 that wasn't the case.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "subt":1,
                    "prior":1,
                    "depend":1,
                    "bear":1,
                    "project":1,
                    "document":1,
                    "bytecod":2,
                    "bad":1,
                    "oracl":3,
                    "wasn":1,
                    "incompat":1,
                    "open":2,
                    "base":1,
                    "code":1,
                    "fact":1,
                    "discuss":1,
                    "ident":1,
                    "mind":1,
                    "hadn":1,
                    "back":1,
                    "refer":1,
                    "generat":2,
                    "answer":1,
                    "quot":2,
                    "necessarili":1,
                    "brought":1,
                    "jdk":6
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}