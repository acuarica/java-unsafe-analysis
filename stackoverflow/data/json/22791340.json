{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":22791340,
    "title":"separating training and tagging parts of a code",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":34751991,
        "postId":22791340,
        "creationDate":"2014-04-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":263004,
          "displayName":"Vivin Paliath",
          "reputation":44864
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"What does this have to do with Java?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[22791340-cu34751991]-[-1533208396]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"What does this have to do with Java?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":34752699,
        "postId":22791340,
        "creationDate":"2014-04-01",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1388084,
          "displayName":"msc87",
          "reputation":116
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"My code is in Java!!! I know for instance in MatLab you can have your variables calculated in previous part of your code and then use them in the next lines."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[22791340-cu34752699]-[2092998227]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"My code is in Java!!! I know for instance in MatLab you can have your variables calculated in previous part of your code and then use them in the next lines."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MatLab",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "lab":1,
                      "line":1,
                      "mat":1,
                      "previous":1,
                      "calcul":1,
                      "code":2,
                      "part":1,
                      "variabl":1,
                      "instanc":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"MatLab",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "sections",
      "training-data"
    ],
    "creationDate":"2014-04-01",
    "lastActivityDate":"2014-04-01",
    "score":0,
    "viewCount":21,
    "owner":{
      "type":"StackOverflowUser",
      "id":1388084,
      "displayName":"msc87",
      "reputation":116
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How I can have an application(code) with two separate executable sections. The first one trains the tagger (providing statistical info for the tagger), and the second one uses the data from the first one to tag the words of a sentence. since the training part is always time-consuming (1-2min), I want to keep the result of that and separately use them in the tagger for several time (testing the code) without having to run the first part every times.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[22791340]-[1720990782]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How I can have an application(code) with two separate executable sections. The first one trains the tagger (providing statistical info for the tagger), and the second one uses the data from the first one to tag the words of a sentence. since the training part is always time-consuming (1-2min), I want to keep the result of that and separately use them in the tagger for several time (testing the code) without having to run the first part every times.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "consum":1,
                  "provid":1,
                  "test":1,
                  "tagger":3,
                  "tag":1,
                  "run":1,
                  "data":1,
                  "result":1,
                  "separ":2,
                  "min":1,
                  "statist":1,
                  "section":1,
                  "info":1,
                  "code":2,
                  "sentenc":1,
                  "applic":1,
                  "train":2,
                  "time":3,
                  "part":2,
                  "word":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Do you have any suggestion or solution for that?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[22791340]-[532058044]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Do you have any suggestion or solution for that?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "suggest":1,
                  "solut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":22791548,
      "questionId":22791340,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":34753458,
          "postId":22791548,
          "creationDate":"2014-04-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":263004,
            "displayName":"Vivin Paliath",
            "reputation":44864
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@msc87 If the corpus is unchanging, you can calculate and then persist the data to be used later. If the corpus *does* change, there is not much you can do since you have to calculate the statistics each time. At this point, you would probably have to tune or modify your algorithm to make it more performant."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[22791548-cu34753458]-[1185736133]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@msc87 If the corpus is unchanging, you can calculate and then persist the data to be used later. If the corpus *does* change, there is not much you can do since you have to calculate the statistics each time. At this point, you would probably have to tune or modify your algorithm to make it more performant."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "tune":1,
                        "msc":1,
                        "chang":1,
                        "corpus":2,
                        "point":1,
                        "data":1,
                        "statist":1,
                        "calcul":2,
                        "persist":1,
                        "algorithm":1,
                        "perform":1,
                        "modifi":1,
                        "make":1,
                        "time":1,
                        "unchang":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":34752855,
          "postId":22791548,
          "creationDate":"2014-04-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1388084,
            "displayName":"msc87",
            "reputation":116
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"No, it is not neural net or sth. It is based on a corpus that I extract the statistics for each word and then calculate the probability of that word and its tag in my sentence. but every time I want to test my code all the statistics should be redone by code. what kind of design should it be?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[22791548-cu34752855]-[-219117538]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"No, it is not neural net or sth. It is based on a corpus that I extract the statistics for each word and then calculate the probability of that word and its tag in my sentence. but every time I want to test my code all the statistics should be redone by code. what kind of design should it be?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":1,
                        "design":1,
                        "corpus":1,
                        "tag":1,
                        "neural":1,
                        "sth":1,
                        "statist":2,
                        "calcul":1,
                        "net":1,
                        "base":1,
                        "code":2,
                        "sentenc":1,
                        "redon":1,
                        "time":1,
                        "kind":1,
                        "probabl":1,
                        "word":2,
                        "extract":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-04-01",
      "lastActivityDate":"2014-04-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":263004,
        "displayName":"Vivin Paliath",
        "reputation":44864
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I'm not sure what you're trying to do here. But in general, you shouldn't have to do anything complicated like this. I'm assuming that you're training some kind of neural net or something like that?</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[22791548]-[-472125904]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I'm not sure what you're trying to do here. But in general, you shouldn't have to do anything complicated like this. I'm assuming that you're training some kind of neural net or something like that?</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "assum":1,
                    "complic":1,
                    "neural":1,
                    "net":1,
                    "general":1,
                    "train":1,
                    "kind":1,
                    "shouldn":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If your concern is that you don't want to run the trainer each time, you can simply persist the trained network (or whatever data structure you are using) to disk once you are done training. Then when you start your program, your code can check to see if an already-trained network exists on disk. If so, it can load it up and then run the tagger against it. If not, it will have to train the network first, persist it to disk, and then run it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[22791548]-[-639534811]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If your concern is that you don't want to run the trainer each time, you can simply persist the trained network (or whatever data structure you are using) to disk once you are done training. Then when you start your program, your code can check to see if an already-trained network exists on disk. If so, it can load it up and then run the tagger against it. If not, it will have to train the network first, persist it to disk, and then run it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "network":3,
                    "tagger":1,
                    "exist":1,
                    "disk":3,
                    "run":3,
                    "data":1,
                    "load":1,
                    "structur":1,
                    "concern":1,
                    "code":1,
                    "persist":2,
                    "trainer":1,
                    "simpli":1,
                    "check":1,
                    "train":4,
                    "time":1,
                    "start":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}