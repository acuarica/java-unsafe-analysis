{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":19201332,
    "title":"Java GC safepoint",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":28413131,
        "postId":19201332,
        "creationDate":"2013-10-05",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":331368,
          "displayName":"Cowboy",
          "reputation":115
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Still, native calls aside, I fail to find an example of what is a safepoint and what is not. Perhaps it is poorly defined, but frustrating nevertheless."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[19201332-cu28413131]-[-2019151887]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Still, native calls aside, I fail to find an example of what is a safepoint and what is not. Perhaps it is poorly defined, but frustrating nevertheless."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "find":1,
                      "fail":1,
                      "frustrat":1,
                      "poor":1,
                      "safepoint":1,
                      "defin":1,
                      "call":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "garbage-collection"
    ],
    "creationDate":"2013-10-05",
    "lastActivityDate":"2013-10-05",
    "score":8,
    "viewCount":973,
    "owner":{
      "type":"StackOverflowUser",
      "id":331368,
      "displayName":"Cowboy",
      "reputation":115
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>When a GC forces the application threads to a grinding halt, they are required to be at a so called safepoint. From most of the info I get regarding this is the concept of a safepoint, but not a single example. If we have a typical Java method - where will a safepoint be put and why? And more importantly, in what examples will a safepoint not be put because it is not safe for GC?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19201332]-[307976888]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>When a GC forces the application threads to a grinding halt, they are required to be at a so called safepoint. From most of the info I get regarding this is the concept of a safepoint, but not a single example. If we have a typical Java method - where will a safepoint be put and why? And more importantly, in what examples will a safepoint not be put because it is not safe for GC?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "singl":1,
                  "method":1,
                  "grind":1,
                  "halt":1,
                  "exampl":1,
                  "requir":1,
                  "safe":1,
                  "info":1,
                  "thread":1,
                  "import":1,
                  "typic":1,
                  "applic":1,
                  "put":2,
                  "concept":1,
                  "safepoint":4,
                  "forc":1,
                  "call":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":19201409,
      "questionId":19201332,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":28412906,
          "postId":19201409,
          "creationDate":"2013-10-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":331368,
            "displayName":"Cowboy",
            "reputation":115
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Uhm, but that is a native call and I always that that a native call is a safepoint... i.e. it is safe to enter native and stay there, but not to get back into the Java code (in case a GC is ongoing)."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19201409-cu28412906]-[1046383171]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Uhm, but that is a native call and I always that that a native call is a safepoint... i.e. it is safe to enter native and stay there, but not to get back into the Java code (in case a GC is ongoing)."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "enter":1,
                        "safe":1,
                        "code":1,
                        "ongo":1,
                        "uhm":1,
                        "back":1,
                        "stay":1,
                        "safepoint":1,
                        "call":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":28412951,
          "postId":19201409,
          "creationDate":"2013-10-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Cowboy Correct, but copyMemory can be any length, so the longer you copy, the longer before you reach a safepoint."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19201409-cu28412951]-[-1702770034]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Cowboy Correct, but copyMemory can be any length, so the longer you copy, the longer before you reach a safepoint."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Cowboy",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"copyMemory",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "reach":1,
                        "correct":1,
                        "length":1,
                        "safepoint":1,
                        "longer":2,
                        "copi":2,
                        "cowboy":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-10-05",
      "lastActivityDate":"2013-10-05",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Unfortunately this is a poor defined field. The JVM places safepoints when it decides to, but there is no specifications to when. One version/update to the next of Java can be different. There are some cases like Unsafe.copyMemory() which doesn't have a safepoint, but you cannot be sure where safepoints will be placed.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201409]-[773056143]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Unfortunately this is a poor defined field. The JVM places safepoints when it decides to, but there is no specifications to when. One version/update to the next of Java can be different. There are some cases like Unsafe.copyMemory() which doesn't have a safepoint, but you cannot be sure where safepoints will be placed.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"copyMemory",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "decid":1,
                    "jvm":1,
                    "field":1,
                    "updat":1,
                    "version":1,
                    "poor":1,
                    "specif":1,
                    "place":1,
                    "safepoint":3,
                    "unsaf":1,
                    "case":1,
                    "defin":1,
                    "copi":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":19201753,
      "questionId":19201332,
      "comments":[
        
      ],
      "creationDate":"2013-10-05",
      "lastActivityDate":"2013-10-05",
      "lastEditDate":"2013-10-05",
      "score":5,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":772000,
        "displayName":"Ales Plsek",
        "reputation":4105
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The exact definition and implementation of a <code>safepoint</code> changes from one VM implementation to another, but considering Hotspot VM, you can find a nice definition in: <a href=\"http://blog.ragozin.info/2012/10/safepoints-in-hotspot-jvm.html\">Safepoints in HotSpot JVM</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[-2122627403]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The exact definition and implementation of a <code>safepoint</code> changes from one VM implementation to another, but considering Hotspot VM, you can find a nice definition in: <a href=\"http://blog.ragozin.info/2012/10/safepoints-in-hotspot-jvm.html\">Safepoints in HotSpot JVM</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HotSpot",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":2,
                    "find":1,
                    "nice":1,
                    "info":1,
                    "hotspot":2,
                    "exact":1,
                    "code":2,
                    "blog":1,
                    "definit":2,
                    "implement":2,
                    "spot":1,
                    "hot":1,
                    "safepoint":3,
                    "html":1,
                    "ragozin":1,
                    "href":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HotSpot",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><a href=\"http://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html\">HotSpot glossary</a> says: </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[850730601]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><a href=\"http://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html\">HotSpot glossary</a> says: </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HotSpot",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "openjdk":1,
                    "doc":1,
                    "net":1,
                    "hotspot":1,
                    "spot":2,
                    "hot":2,
                    "html":1,
                    "href":1,
                    "http":1,
                    "glossari":2,
                    "group":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HotSpot",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>A point during program execution at which all GC roots are known and all heap object contents are consistent. From a global point of view, all threads must block at a safepoint before the GC can run.</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[-1956699822]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>A point during program execution at which all GC roots are known and all heap object contents are consistent. From a global point of view, all threads must block at a safepoint before the GC can run.</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "point":2,
                    "root":1,
                    "run":1,
                    "blockquot":2,
                    "object":1,
                    "global":1,
                    "block":1,
                    "thread":1,
                    "consist":1,
                    "content":1,
                    "safepoint":1,
                    "heap":1,
                    "execut":1,
                    "view":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Typically, the safepoint is implemented by JVM injecting a safepoint check into a method, most call sites qualify as safepoints - when reaching the safepoint check, the thread will check if the safepoint is required (e.g. FullGC is scheduled), if yes, then the thread blocks. When all the threads in the VM block, you have reached the safepoint where all the the objects in the VM are perfectly reachable. Then, the VM operation that requested the safepoint is performed (e.g. a FullGC), after that the threads are resumed. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[-846581907]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Typically, the safepoint is implemented by JVM injecting a safepoint check into a method, most call sites qualify as safepoints - when reaching the safepoint check, the thread will check if the safepoint is required (e.g. FullGC is scheduled), if yes, then the thread blocks. When all the threads in the VM block, you have reached the safepoint where all the the objects in the VM are perfectly reachable. Then, the VM operation that requested the safepoint is performed (e.g. a FullGC), after that the threads are resumed. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "method":1,
                    "reach":2,
                    "request":1,
                    "requir":1,
                    "resum":1,
                    "full":2,
                    "site":1,
                    "reachabl":1,
                    "perfect":1,
                    "object":1,
                    "oper":1,
                    "qualifi":1,
                    "block":2,
                    "thread":4,
                    "check":3,
                    "typic":1,
                    "perform":1,
                    "implement":1,
                    "inject":1,
                    "safepoint":7,
                    "schedul":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Check for the list of VM operations requiring a safepoint : <a href=\"http://jpbempel.blogspot.com/2013/03/safety-first-safepoints.html\">Safety First: Safepoints</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[366444767]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Check for the list of VM operations requiring a safepoint : <a href=\"http://jpbempel.blogspot.com/2013/03/safety-first-safepoints.html\">Safety First: Safepoints</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "requir":1,
                    "blogspot":1,
                    "oper":1,
                    "safeti":2,
                    "check":1,
                    "jpbempel":1,
                    "safepoint":3,
                    "html":1,
                    "href":1,
                    "http":1,
                    "list":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can study safepoint behavior in Hotspot by using <code>-XX:+PrintSafepointStatistics \u2013XX:PrintSafepointStatisticsCount=1</code>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19201753]-[748491678]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can study safepoint behavior in Hotspot by using <code>-XX:+PrintSafepointStatistics \u2013XX:PrintSafepointStatisticsCount=1</code>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PrintSafepointStatistics",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PrintSafepointStatisticsCount",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "count":1,
                    "print":2,
                    "statist":2,
                    "hotspot":1,
                    "code":2,
                    "studi":1,
                    "safepoint":3,
                    "behavior":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PrintSafepointStatistics",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PrintSafepointStatisticsCount",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}