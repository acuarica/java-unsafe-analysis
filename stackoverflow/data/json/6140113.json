{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":6140113,
    "title":"Can I redefine a method / constructor using reflection in Java?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":7128587,
        "postId":6140113,
        "creationDate":"2011-05-26",
        "score":3,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":731998,
          "displayName":"happymeal",
          "reputation":949
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"sounds like you are unhappy with a third party library and you want to make some changes to a particular class. when i encounter such scenarios, i would define my class with the same package and class name as the third library. then i make sure that my &quot;enhanced&quot; class takes precedence over the third library's class during classloading."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6140113-cu7128587]-[-1399789688]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"sounds like you are unhappy with a third party library and you want to make some changes to a particular class. when i encounter such scenarios, i would define my class with the same package and class name as the third library. then i make sure that my &quot;enhanced&quot; class takes precedence over the third library's class during classloading."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"with",
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"name",
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"takes",
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"during",
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "scenario":1,
                      "unhappi":1,
                      "librari":3,
                      "take":1,
                      "enhanc":1,
                      "sound":1,
                      "make":2,
                      "encount":1,
                      "quot":2,
                      "classload":1,
                      "defin":1,
                      "parti":1,
                      "preced":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "reflection"
    ],
    "creationDate":"2011-05-26",
    "lastActivityDate":"2011-12-29",
    "lastEditDate":"2011-12-29",
    "score":2,
    "viewCount":256,
    "owner":{
      "type":"StackOverflowUser",
      "id":587465,
      "displayName":"Nik",
      "reputation":380
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have a class called <code>A</code> and I need to create a new object of that class without calling its constructor. I want to set all its attributes through reflection.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6140113]-[1102171431]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have a class called <code>A</code> and I need to create a new object of that class without calling its constructor. I want to set all its attributes through reflection.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"called",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"without",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "set":1,
                  "constructor":1,
                  "object":1,
                  "code":2,
                  "attribut":1,
                  "creat":1,
                  "call":2,
                  "reflect":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Can I redefine the constructor of class <code>A</code> using reflection?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6140113]-[2031571494]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Can I redefine the constructor of class <code>A</code> using reflection?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"A",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "reflect":1,
                  "code":2,
                  "constructor":1,
                  "redefin":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Or is there any way other way to do this?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6140113]-[-1958743059]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Or is there any way other way to do this?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":6140173,
      "questionId":6140113,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":7128577,
          "postId":6140173,
          "creationDate":"2011-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Nik, Unless you almost know how to do this there is no way, I could describe what you need to do in a few words. The simplest approach would be to use a Java agent to Instrument the class byte code before it is loaded."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6140173-cu7128577]-[-1096847434]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Nik, Unless you almost know how to do this there is no way, I could describe what you need to do in a few words. The simplest approach would be to use a Java agent to Instrument the class byte code before it is loaded."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Nik",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "nik":1,
                        "load":1,
                        "agent":1,
                        "code":1,
                        "simplest":1,
                        "approach":1,
                        "word":1,
                        "describ":1,
                        "instrument":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7128416,
          "postId":6140173,
          "creationDate":"2011-05-26",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":587465,
            "displayName":"Nik",
            "reputation":380
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"This is really interesting, it wud be great if u cud shed a little more light on &quot;change the class before its loaded&quot;.... Ur solution almost solves my problem. Thanks"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6140173-cu7128416]-[1219111130]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"This is really interesting, it wud be great if u cud shed a little more light on &quot;change the class before its loaded&quot;.... Ur solution almost solves my problem. Thanks"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"before",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "solv":1,
                        "chang":1,
                        "problem":1,
                        "cud":1,
                        "load":1,
                        "shed":1,
                        "interest":1,
                        "wud":1,
                        "quot":2,
                        "light":1,
                        "great":1,
                        "solut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-05-26",
      "lastActivityDate":"2011-05-26",
      "lastEditDate":"2011-05-26",
      "score":6,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In the Sun/Oracle JVm you can use <code>Unsafe.allocateInstance(Class)</code>. Otherwise you have to generate byte code to create the instance without calling a constructor. You could use ASM for this. You cannot create an instance without a constructor using Reflection alone.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6140173]-[590327127]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In the Sun/Oracle JVm you can use <code>Unsafe.allocateInstance(Class)</code>. Otherwise you have to generate byte code to create the instance without calling a constructor. You could use ASM for this. You cannot create an instance without a constructor using Reflection alone.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"allocateInstance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "alloc":1,
                    "sun":1,
                    "constructor":2,
                    "oracl":1,
                    "code":3,
                    "asm":1,
                    "generat":1,
                    "unsaf":1,
                    "creat":2,
                    "call":1,
                    "reflect":1,
                    "instanc":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>BTW: You can define a new method using byte code manipulation, but to add a constructor, you have to change the class before it is loaded. (This is tricky to do)</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6140173]-[-741446409]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>BTW: You can define a new method using byte code manipulation, but to add a constructor, you have to change the class before it is loaded. (This is tricky to do)</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"before",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "method":1,
                    "tricki":1,
                    "btw":1,
                    "manipul":1,
                    "constructor":1,
                    "load":1,
                    "code":1,
                    "defin":1,
                    "add":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":6141051,
      "questionId":6140113,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":10780451,
          "postId":6141051,
          "creationDate":"2011-12-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":521799,
            "displayName":"Lukas Eder",
            "reputation":57617
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That could have side-effects if that particular constructor does anything (e.g. allocate resources, etc.)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6141051-cu10780451]-[107513299]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That could have side-effects if that particular constructor does anything (e.g. allocate resources, etc.)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "side":1,
                        "alloc":1,
                        "effect":1,
                        "resourc":1,
                        "constructor":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-05-26",
      "lastActivityDate":"2011-05-26",
      "score":-1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":768756,
        "displayName":"jeffb",
        "reputation":320
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Invoke the object with the constructor that takes the least amount of arguments; using dummy arguments. Then proceed to manipulate the object however you like.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6141051]-[-1704717033]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Invoke the object with the constructor that takes the least amount of arguments; using dummy arguments. Then proceed to manipulate the object however you like.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "dummi":1,
                    "manipul":1,
                    "invok":1,
                    "constructor":1,
                    "amount":1,
                    "object":2,
                    "take":1,
                    "proceed":1,
                    "argument":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}