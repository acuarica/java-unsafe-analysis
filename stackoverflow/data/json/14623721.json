{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":14623721,
    "title":"Edit file before build",
    "comments":[
      
    ],
    "tags":[
      "java",
      "maven",
      "jenkins",
      "jenkins-plugins"
    ],
    "creationDate":"2013-01-31",
    "lastActivityDate":"2013-01-31",
    "lastEditDate":"2013-01-31",
    "score":1,
    "viewCount":67,
    "owner":{
      "type":"StackOverflowUser",
      "id":435267,
      "displayName":"Roland",
      "reputation":983
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have a job in Jenkins that deploys a site. I'd like this job to temporary build with another version of a dependency to test if it works. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14623721]-[1334957445]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have a job in Jenkins that deploys a site. I'd like this job to temporary build with another version of a dependency to test if it works. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":1,
                  "depend":1,
                  "site":1,
                  "job":2,
                  "build":1,
                  "work":1,
                  "version":1,
                  "temporari":1,
                  "jenkin":1,
                  "deploy":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To do this I have a few choices, </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14623721]-[-1079960537]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To do this I have a few choices, </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "choic":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<ol> \n <li>I create a branch of my main project and setup a new jenkins job</li> \n <li>I search for a maven plugin that allow me to edit a dependency at &quot;buildtime&quot;</li> \n <li>I search for a jenkins plugin that allows me to edit the pom.xml (or any file) before &quot;buildtime&quot;.</li> \n <li>(I ask on Stack Overflow after unsuccessful search)</li> \n</ol>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14623721]-[1475834383]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<ol> \n <li>I create a branch of my main project and setup a new jenkins job</li> \n <li>I search for a maven plugin that allow me to edit a dependency at &quot;buildtime&quot;</li> \n <li>I search for a jenkins plugin that allows me to edit the pom.xml (or any file) before &quot;buildtime&quot;.</li> \n <li>(I ask on Stack Overflow after unsuccessful search)</li> \n</ol>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":2,
                  "pom":1,
                  "depend":1,
                  "overflow":1,
                  "project":1,
                  "branch":1,
                  "job":1,
                  "main":1,
                  "buildtim":2,
                  "edit":2,
                  "maven":1,
                  "jenkin":2,
                  "xml":1,
                  "unsuccess":1,
                  "stack":1,
                  "file":1,
                  "quot":4,
                  "creat":1,
                  "setup":1,
                  "search":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To me it seems quite nice to be able to perform some substitution in the Jenkins build without having to change anything in the versioning system. A maven plugin might also be nice but... it is kind of xml-hell already so I'd rather try to keep the pom.xml as thin as possible. Especially for a case like this. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14623721]-[1211611929]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To me it seems quite nice to be able to perform some substitution in the Jenkins build without having to change anything in the versioning system. A maven plugin might also be nice but... it is kind of xml-hell already so I'd rather try to keep the pom.xml as thin as possible. Especially for a case like this. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":1,
                  "pom":1,
                  "chang":1,
                  "system":1,
                  "substitut":1,
                  "build":1,
                  "hell":1,
                  "nice":2,
                  "maven":1,
                  "version":1,
                  "jenkin":1,
                  "xml":2,
                  "perform":1,
                  "kind":1,
                  "thin":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Which way is preferred? Are there any existing plugins that solve this kind of problem that you can recommend?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[14623721]-[2121704025]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Which way is preferred? Are there any existing plugins that solve this kind of problem that you can recommend?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":1,
                  "solv":1,
                  "recommend":1,
                  "exist":1,
                  "problem":1,
                  "kind":1,
                  "prefer":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":14623966,
      "questionId":14623721,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":20459381,
          "postId":14623966,
          "creationDate":"2013-02-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":435267,
            "displayName":"Roland",
            "reputation":983
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"We got with the branch option although it seems a little bit heavy for &quot;just testning if it works&quot;."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14623966-cu20459381]-[1583993504]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"We got with the branch option although it seems a little bit heavy for &quot;just testning if it works&quot;."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "bit":1,
                        "branch":1,
                        "option":1,
                        "work":1,
                        "heavi":1,
                        "quot":2,
                        "testn":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":20469151,
          "postId":14623966,
          "creationDate":"2013-02-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":774183,
            "displayName":"carlspring",
            "reputation":9241
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Roland, I don't know what VCS you're using, but branching should be cheap and developers should use feature/topic branches where they would places their supposed fixes, active work on certain topics/features and then use those branches either amongst each other, or for testing on the CI. The profile approach is not a good idea for this."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[14623966-cu20469151]-[756769573]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Roland, I don't know what VCS you're using, but branching should be cheap and developers should use feature/topic branches where they would places their supposed fixes, active work on certain topics/features and then use those branches either amongst each other, or for testing on the CI. The profile approach is not a good idea for this."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":1,
                        "vcs":1,
                        "profil":1,
                        "cheap":1,
                        "good":1,
                        "roland":1,
                        "idea":1,
                        "branch":3,
                        "fix":1,
                        "work":1,
                        "activ":1,
                        "approach":1,
                        "place":1,
                        "topic":2,
                        "featur":2,
                        "develop":1,
                        "suppos":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-01-31",
      "lastActivityDate":"2013-01-31",
      "score":0,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":774183,
        "displayName":"carlspring",
        "reputation":9241
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Having your own branch would be a good idea, as you're doing development work. If what you're working on doesn't work out, you can always remove the branch. If it does work, you can always merge it back into the original branch.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14623966]-[-1551980072]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Having your own branch would be a good idea, as you're doing development work. If what you're working on doesn't work out, you can always remove the branch. If it does work, you can always merge it back into the original branch.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "remov":1,
                    "good":1,
                    "idea":1,
                    "branch":3,
                    "work":4,
                    "origin":1,
                    "merg":1,
                    "back":1,
                    "develop":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Merging is not that much of a big deal, if you're using the right tools and follow the proper principals.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14623966]-[96457113]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Merging is not that much of a big deal, if you're using the right tools and follow the proper principals.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "proper":1,
                    "tool":1,
                    "big":1,
                    "princip":1,
                    "merg":1,
                    "deal":1,
                    "follow":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Alternatively, you can have the <code>&lt;dependency&gt;</code> defined in a <code>&lt;profile&gt;</code> and trigger the profile with <code>mvn clean ... package -PmyProfile</code>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14623966]-[1536496812]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Alternatively, you can have the <code>&lt;dependency&gt;</code> defined in a <code>&lt;profile&gt;</code> and trigger the profile with <code>mvn clean ... package -PmyProfile</code>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"dependency"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"profile"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PmyProfile",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "profil":3,
                    "depend":1,
                    "clean":1,
                    "altern":1,
                    "code":6,
                    "pmi":1,
                    "defin":1,
                    "mvn":1,
                    "trigger":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PmyProfile",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I would definitely go for the first option, as that makes more sense and is cleaner.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[14623966]-[-204030545]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I would definitely go for the first option, as that makes more sense and is cleaner.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "cleaner":1,
                    "sens":1,
                    "make":1,
                    "option":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}