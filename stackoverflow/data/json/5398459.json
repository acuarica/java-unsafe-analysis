{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":5398459,
    "title":"Can I start a thread again after it has died?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":6106849,
        "postId":5398459,
        "creationDate":"2011-03-22",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":366133,
          "displayName":"Matt",
          "reputation":2843
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I was reading this: http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html#start%28%29"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5398459-cu6106849]-[806684189]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I was reading this: http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html#start%28%29"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "read":1,
                      "oracl":1,
                      "doc":1,
                      "thread":1,
                      "javas":1,
                      "api":1,
                      "lang":1,
                      "html":1,
                      "start":1,
                      "http":1,
                      "download":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6106010,
        "postId":5398459,
        "creationDate":"2011-03-22",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":139985,
          "displayName":"Stephen C",
          "reputation":291715
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Read the javadoc Luke!"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5398459-cu6106010]-[520510875]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Read the javadoc Luke!"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "luke":1,
                      "javadoc":1,
                      "read":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6106066,
        "postId":5398459,
        "creationDate":"2011-03-22",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":366133,
          "displayName":"Matt",
          "reputation":2843
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Stephen I did look at the javadoc, but only for the start() method which didn't make it sound very clear."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5398459-cu6106066]-[-2067032807]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Stephen I did look at the javadoc, but only for the start() method which didn't make it sound very clear."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Stephen",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "method":1,
                      "clear":1,
                      "sound":1,
                      "make":1,
                      "stephen":1,
                      "start":1,
                      "javadoc":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6106433,
        "postId":5398459,
        "creationDate":"2011-03-22",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":139985,
          "displayName":"Stephen C",
          "reputation":291715
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Huh? What is unclear about the sentence *&quot;It is never legal to start a thread more than once&quot;* on a method called `start()`?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5398459-cu6106433]-[162258114]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Huh? What is unclear about the sentence *&quot;It is never legal to start a thread more than once&quot;* on a method called `start()`?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "method":1,
                      "unclear":1,
                      "sentenc":1,
                      "legal":1,
                      "thread":1,
                      "huh":1,
                      "quot":2,
                      "start":2,
                      "call":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6128503,
        "postId":5398459,
        "creationDate":"2011-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":13,
          "displayName":"Chris Jester-Young",
          "reputation":116651
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Curious: what are you trying to do? I suspect that using a scheduled executor (`ScheduledExecutorService`) is closest to what you want to achieve, but please feel free to fill me in."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5398459-cu6128503]-[334156770]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Curious: what are you trying to do? I suspect that using a scheduled executor (`ScheduledExecutorService`) is closest to what you want to achieve, but please feel free to fill me in."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ScheduledExecutorService",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "feel":1,
                      "achiev":1,
                      "fill":1,
                      "curious":1,
                      "suspect":1,
                      "schedul":2,
                      "executor":2,
                      "closest":1,
                      "servic":1,
                      "free":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ScheduledExecutorService",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "multithreading"
    ],
    "creationDate":"2011-03-22",
    "lastActivityDate":"2013-06-18",
    "lastEditDate":"2013-06-18",
    "score":4,
    "viewCount":3956,
    "owner":{
      "type":"StackOverflowUser",
      "id":366133,
      "displayName":"Matt",
      "reputation":2843
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>If I use start() on a Thread object and the run() method returns, is it possible to call start() again?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5398459]-[-1963723711]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>If I use start() on a Thread object and the run() method returns, is it possible to call start() again?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "return":1,
                  "run":1,
                  "object":1,
                  "thread":1,
                  "start":2,
                  "call":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>eg,</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5398459]-[-657422079]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>eg,</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"MyThread myThread = new MyThread(); myThread.start(); // run method executes and returns in 2 seconds // sleep for 5 seconds to make sure the thread has died myThread.start(); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[5398459]-[511149114]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"LocalVariableDeclarationStatementNode",
                  "modifiers":[
                    
                  ],
                  "declarators":{
                    "type":"VariableDeclaratorsNode",
                    "declarators":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"myThread",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "assignment":{
                          "type":"VariableAssignmentNode",
                          "variableAssignment":{
                            "type":"VariableExpressionInitNode",
                            "expression":{
                              "type":"ConstructorCreatorNode",
                              "creatorType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"MyThread",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "expressionArgs":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"MyThread",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodInvocationNode",
                  "qualifiedIdentifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"myThread",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"start",
                    "comments":[
                      
                    ]
                  },
                  "args":{
                    "type":"ExpressionListNode",
                    "arguments":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    {
                      "text":"// run method executes and returns in 2 seconds // sleep for 5 seconds to make sure the thread has died myThread.start(); \n"
                    }
                  ]
                }
              ]
            },
            "rawText":"MyThread myThread = new MyThread(); myThreadstart(); // run method executes and returns in 2 seconds // sleep for 5 seconds to make sure the thread has died myThread.start(); \n",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "return":1,
                  "run":1,
                  "sleep":1,
                  "second":2,
                  "die":1,
                  "thread":5,
                  "make":1,
                  "threadstart":1,
                  "start":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MyThread",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"myThread",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"start",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      {
                        "text":"// run method executes and returns in 2 seconds // sleep for 5 seconds to make sure the thread has died myThread.start(); \n"
                      }
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"myThread",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"MyThread",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MyThread",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm just wondering because my code is throwing IllegalThreadStateExceptions, so want to know if it's because you can't do the above.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5398459]-[-223443756]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm just wondering because my code is throwing IllegalThreadStateExceptions, so want to know if it's because you can't do the above.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"IllegalThreadStateExceptions",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "state":1,
                  "code":1,
                  "thread":1,
                  "illeg":1,
                  "wonder":1,
                  "throw":1,
                  "except":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"IllegalThreadStateExceptions",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":5398472,
      "questionId":5398459,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":6105998,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":366133,
            "displayName":"Matt",
            "reputation":2843
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Oops.. so does &quot;started&quot; mean &quot;has been started at some point&quot;, rather than &quot;not dead&quot;? Is there anything else I could do to re-start a thread?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6105998]-[329346778]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Oops.. so does &quot;started&quot; mean &quot;has been started at some point&quot;, rather than &quot;not dead&quot;? Is there anything else I could do to re-start a thread?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "oop":1,
                        "point":1,
                        "dead":1,
                        "thread":1,
                        "quot":6,
                        "start":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6106043,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":361319,
            "displayName":"dty",
            "reputation":11836
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Where does 'started' appear? The documentation I'm looking at says &quot;It is never legal to start a thread more than once&quot;. If you have written a `Runnable` instead of extending `Thread` then the executor framework gives you the ability to re-submit a job, or have it run periodically, etc."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6106043]-[22487356]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Where does 'started' appear? The documentation I'm looking at says &quot;It is never legal to start a thread more than once&quot;. If you have written a `Runnable` instead of extending `Thread` then the executor framework gives you the ability to re-submit a job, or have it run periodically, etc."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "document":1,
                        "run":1,
                        "job":1,
                        "submit":1,
                        "framework":1,
                        "extend":1,
                        "legal":1,
                        "thread":2,
                        "written":1,
                        "runnabl":1,
                        "abil":1,
                        "quot":2,
                        "start":2,
                        "executor":1,
                        "period":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6106049,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":357641,
            "displayName":"Greg",
            "reputation":17391
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It means &quot;has been started at some point&quot;."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6106049]-[1895009547]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It means &quot;has been started at some point&quot;."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "mean":1,
                        "point":1,
                        "quot":2,
                        "start":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6106098,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":366133,
            "displayName":"Matt",
            "reputation":2843
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html#start%28%29 &quot;Throws: IllegalThreadStateException - if the thread was already started.&quot; But thanks, at least I know now."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6106098]-[1815912213]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html#start%28%29 &quot;Throws: IllegalThreadStateException - if the thread was already started.&quot; But thanks, at least I know now."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"IllegalThreadStateException",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "state":1,
                        "oracl":1,
                        "doc":1,
                        "thread":3,
                        "illeg":1,
                        "javas":1,
                        "quot":2,
                        "api":1,
                        "lang":1,
                        "html":1,
                        "start":2,
                        "http":1,
                        "download":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"IllegalThreadStateException",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6106108,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":4249,
            "displayName":"matt b",
            "reputation":78520
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The javadoc means &quot;It is never legal to call `start()` twice&quot;"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6106108]-[1244789345]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The javadoc means &quot;It is never legal to call `start()` twice&quot;"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "mean":1,
                        "legal":1,
                        "quot":2,
                        "start":1,
                        "call":1,
                        "javadoc":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6106122,
          "postId":5398472,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":361319,
            "displayName":"dty",
            "reputation":11836
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Ah yeah. Then as @GregInYEG said. It's a bit like the `isConnected()` method on `Socket` - it just tells you that the socket has, at some point, been connected. Utterly useless!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5398472-cu6106122]-[711998929]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Ah yeah. Then as @GregInYEG said. It's a bit like the `isConnected()` method on `Socket` - it just tells you that the socket has, at some point, been connected. Utterly useless!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"GregInYEG",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"isConnected",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "greg":1,
                        "point":1,
                        "socket":2,
                        "bit":1,
                        "useless":1,
                        "connect":2,
                        "utter":1,
                        "yeah":1,
                        "yeg":1,
                        "tell":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-03-22",
      "lastActivityDate":"2011-03-22",
      "lastEditDate":"2011-03-22",
      "score":9,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":361319,
        "displayName":"dty",
        "reputation":11836
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>No, you can't. And the Javadoc for the <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#start%28%29\"><code>Thread.start()</code></a> method tells you that!</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398472]-[-365824465]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>No, you can't. And the Javadoc for the <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#start%28%29\"><code>Thread.start()</code></a> method tells you that!</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "oracl":1,
                    "doc":1,
                    "code":2,
                    "thread":2,
                    "javas":1,
                    "api":1,
                    "lang":1,
                    "html":1,
                    "href":1,
                    "start":2,
                    "http":1,
                    "tell":1,
                    "download":1,
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5398645,
      "questionId":5398459,
      "comments":[
        
      ],
      "creationDate":"2011-03-22",
      "lastActivityDate":"2011-03-22",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":637853,
        "displayName":"Thomas",
        "reputation":38670
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>From a comment:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398645]-[-1142603289]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>From a comment:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "comment":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>Is there anything else I could do to re-start a thread?</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398645]-[552912889]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>Is there anything else I could do to re-start a thread?</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "blockquot":2,
                    "thread":1,
                    "start":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You could use <code>ThreadPoolExecutor</code>, which would allow you to pass in tasks and let the service assign a thread to a task. When the task is finished, the thread goes idle until it gets the next task.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398645]-[-788880832]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You could use <code>ThreadPoolExecutor</code>, which would allow you to pass in tasks and let the service assign a thread to a task. When the task is finished, the thread goes idle until it gets the next task.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ThreadPoolExecutor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "task":4,
                    "assign":1,
                    "finish":1,
                    "code":2,
                    "idl":1,
                    "thread":3,
                    "pool":1,
                    "pass":1,
                    "executor":1,
                    "servic":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ThreadPoolExecutor",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>So, you don't restart a thread, but you would redo/resume a task. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398645]-[-1737834563]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>So, you don't restart a thread, but you would redo/resume a task. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "task":1,
                    "resum":1,
                    "redo":1,
                    "thread":1,
                    "restart":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5398502,
      "questionId":5398459,
      "comments":[
        
      ],
      "creationDate":"2011-03-22",
      "lastActivityDate":"2011-03-22",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":357641,
        "displayName":"Greg",
        "reputation":17391
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>From the javadoc:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398502]-[-592213568]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>From the javadoc:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>It is never legal to start a thread more than once. In particular, a thread may not be restarted once it has completed execution.</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398502]-[142746228]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>It is never legal to start a thread more than once. In particular, a thread may not be restarted once it has completed execution.</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "blockquot":2,
                    "legal":1,
                    "thread":2,
                    "complet":1,
                    "restart":1,
                    "start":1,
                    "execut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>See the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Thread.html#start%28%29\"rel=\"nofollow\">Thread.start()</a> javadoc for more information.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398502]-[-961059453]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>See the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Thread.html#start%28%29\"rel=\"nofollow\">Thread.start()</a> javadoc for more information.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "rel":1,
                    "oracl":1,
                    "doc":1,
                    "thread":2,
                    "nofollow":1,
                    "inform":1,
                    "javas":1,
                    "api":1,
                    "lang":1,
                    "html":1,
                    "href":1,
                    "start":2,
                    "http":1,
                    "download":1,
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are other ways to accomplish what you are trying to do. For example, you could use new Threads that continue the work that was done in the Thread that has finished execution. You may also want to investigate the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/package-summary.html#package_description\"rel=\"nofollow\">java.util.concurrent package</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398502]-[-319677208]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are other ways to accomplish what you are trying to do. For example, you could use new Threads that continue the work that was done in the Thread that has finished execution. You may also want to investigate the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/package-summary.html#package_description\"rel=\"nofollow\">java.util.concurrent package</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "descript":1,
                    "concurr":2,
                    "util":2,
                    "summari":1,
                    "rel":1,
                    "oracl":1,
                    "investig":1,
                    "finish":1,
                    "way":1,
                    "doc":1,
                    "work":1,
                    "thread":2,
                    "nofollow":1,
                    "accomplish":1,
                    "javas":1,
                    "api":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "download":1,
                    "execut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5398494,
      "questionId":5398459,
      "comments":[
        
      ],
      "creationDate":"2011-03-22",
      "lastActivityDate":"2011-03-22",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":470535,
        "displayName":"alpha123",
        "reputation":3670
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Nope.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398494]-[648954895]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Nope.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "nope":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>From the <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#start%28%29\"rel=\"nofollow\">Javadoc for java.lang.Thread</a>:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398494]-[-1679978890]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>From the <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#start%28%29\"rel=\"nofollow\">Javadoc for java.lang.Thread</a>:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Thread",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "rel":1,
                    "oracl":1,
                    "doc":1,
                    "thread":2,
                    "nofollow":1,
                    "javas":1,
                    "api":1,
                    "lang":2,
                    "html":1,
                    "href":1,
                    "start":1,
                    "http":1,
                    "download":1,
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Thread",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>It is never legal to start a thread more than once.</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5398494]-[1588858095]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>It is never legal to start a thread more than once.</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "blockquot":2,
                    "thread":1,
                    "legal":1,
                    "start":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5399132,
      "questionId":5398459,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":6106874,
          "postId":5399132,
          "creationDate":"2011-03-22",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":658810,
            "displayName":"TurtleToes",
            "reputation":491
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Don't know why you would downvote it... it works in C++... starting a new thread every time you need the same thread is a waste... if you need the same thread to retain itself, it's better to simply pause and resume it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5399132-cu6106874]-[1102642410]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Don't know why you would downvote it... it works in C++... starting a new thread every time you need the same thread is a waste... if you need the same thread to retain itself, it's better to simply pause and resume it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "wast":1,
                        "paus":1,
                        "resum":1,
                        "retain":1,
                        "work":1,
                        "thread":3,
                        "simpli":1,
                        "downvot":1,
                        "time":1,
                        "start":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6128490,
          "postId":5399132,
          "creationDate":"2011-03-24",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":13,
            "displayName":"Chris Jester-Young",
            "reputation":116651
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Using `wait` and `notify` is _totally_ the wrong way to go about parking a thread for use in executing multiple tasks. The right way, BTW, is to use an executor (such as `ThreadPoolExecutor`) to do the thread parking for you."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5399132-cu6128490]-[-1832792406]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Using `wait` and `notify` is _totally_ the wrong way to go about parking a thread for use in executing multiple tasks. The right way, BTW, is to use an executor (such as `ThreadPoolExecutor`) to do the thread parking for you."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_totally_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ThreadPoolExecutor",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "wait":1,
                        "task":1,
                        "wrong":1,
                        "btw":1,
                        "notifi":1,
                        "total":1,
                        "thread":3,
                        "pool":1,
                        "park":2,
                        "executor":2,
                        "multipl":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ThreadPoolExecutor",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-03-22",
      "lastActivityDate":"2011-03-22",
      "score":-1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":658810,
        "displayName":"TurtleToes",
        "reputation":491
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Perhaps there is a better way of doing this if you want the thread to stop and restart multiple times. I have a tile caching thread in C++ that does something similar; it pauses when it's finished, and unpaused when it's needed again. I am new to Java, but from what I can tell, you can use Object.wait() to pause, and Object.notify() to resume threads. Maybe you could check those out in the documentation and redesign your thread to pause and resume instead of exiting.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5399132]-[693131404]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Perhaps there is a better way of doing this if you want the thread to stop and restart multiple times. I have a tile caching thread in C++ that does something similar; it pauses when it's finished, and unpaused when it's needed again. I am new to Java, but from what I can tell, you can use Object.wait() to pause, and Object.notify() to resume threads. Maybe you could check those out in the documentation and redesign your thread to pause and resume instead of exiting.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "wait":1,
                    "cach":1,
                    "similar":1,
                    "document":1,
                    "paus":3,
                    "resum":2,
                    "notifi":1,
                    "finish":1,
                    "unpaus":1,
                    "stop":1,
                    "object":2,
                    "thread":4,
                    "need":1,
                    "check":1,
                    "redesign":1,
                    "exit":1,
                    "time":1,
                    "restart":1,
                    "multipl":1,
                    "tile":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}