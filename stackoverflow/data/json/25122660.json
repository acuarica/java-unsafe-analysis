{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":25122660,
    "title":"unable to compare returned String from AJAX call",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":39100608,
        "postId":25122660,
        "creationDate":"2014-08-04",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2324107,
          "displayName":"Karl-Andr√© Gagnon",
          "reputation":23432
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"try `if($.trim(data) == &quot;success&quot;)`"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[25122660-cu39100608]-[-1223132665]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"try `if($.trim(data) == &quot;success&quot;)`"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "success":1,
                      "data":1,
                      "trim":1,
                      "quot":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "javascript",
      "jquery",
      "ajax",
      "servlets"
    ],
    "creationDate":"2014-08-04",
    "lastActivityDate":"2014-08-04",
    "score":0,
    "viewCount":61,
    "owner":{
      "type":"StackOverflowUser",
      "id":888990,
      "displayName":"crm",
      "reputation":1099
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am using AJAX to check a user's login details are correct. Currently if the details are correct I output &quot;success&quot; which is returned to the AJAX call and should be alerted. When I attempt to compare the returned String it is always falls when I try <code>==</code> and <code>===</code>.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25122660]-[-341179188]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am using AJAX to check a user's login details are correct. Currently if the details are correct I output &quot;success&quot; which is returned to the AJAX call and should be alerted. When I attempt to compare the returned String it is always falls when I try <code>==</code> and <code>===</code>.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "success":1,
                  "return":2,
                  "ajax":2,
                  "alert":1,
                  "correct":2,
                  "fall":1,
                  "code":4,
                  "check":1,
                  "compar":1,
                  "quot":2,
                  "detail":2,
                  "output":1,
                  "attempt":1,
                  "login":1,
                  "call":1,
                  "user":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Here is the AJAX:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25122660]-[-1905224324]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Here is the AJAX:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "ajax":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"$(&quot;#loginForm&quot;).submit(function(e){ e.preventDefault(); //STOP default action var postData = $(&quot;#loginForm&quot;).serializeArray(); var username = $(&quot;#username&quot;).val(); var password = $(&quot;#password&quot;).val(); if(username.length &gt; 0 &amp;&amp; password.length &gt;){ $.ajax( { type: &quot;POST&quot;, url : &quot;HomeController&quot;, data : postData, success: function(data) { if(data == &quot;success&quot;){ alert(data); } }, error: function(jqXHR, textStatus, errorThrown) { $(&quot;#loginResult&quot;).html(&quot;&lt;p&gt;ss&quot;+errorThrown+textStatus+jqXHR+&quot;&lt;/p&gt;&quot;); } }); }else{ $(&quot;#loginResult&quot;).html(&quot;&lt;p&gt;Unable to login: ensure details are correct.&lt;/p&gt;&quot;); } }); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[25122660]-[-991226802]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"$(\"#"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"loginForm",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"\").submit(function(e)"
                },
                {
                  "type":"BlockDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "block":{
                    "type":"BlockNode",
                    "statements":[
                      {
                        "type":"ExpressionStatement",
                        "expression":{
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"e",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"preventDefault",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            {
                              "text":"//STOP default action var postData = $(\"#loginForm\").serializeArray(); var username = $(\"#username\").val(); var password = $(\"#password\").val(); if(username.length > 0 && password.length >){ $.ajax( { type: \"POST\", url : \"HomeController\", data : postData, success: function(data) { if(data == \"success\"){ alert(data); } }, error: function(jqXHR, textStatus, errorThrown) { $(\"#loginResult\").html(\"<p>ss\"+errorThrown+textStatus+jqXHR+\"</p>\"); } }); }else{ $(\"#loginResult\").html(\"<p>Unable to login: ensure details are correct.</p>\"); } }); \n"
                            }
                          ]
                        },
                        "labels":[
                          
                        ]
                      }
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                }
              ]
            },
            "rawText":"$(\"#loginForm\").submit(function(e){ e.preventDefault(); //STOP default action var postData = $(\"#loginForm\").serializeArray(); var username = $(\"#username\").val(); var password = $(\"#password\").val(); if(username.length > 0 && password.length >){ $.ajax( { type: \"POST\", url : \"HomeController\", data : postData, success: function(data) { if(data == \"success\"){ alert(data); } }, error: function(jqXHR, textStatus, errorThrown) { $(\"#loginResult\").html(\"<p>ss\"+errorThrown+textStatus+jqXHR+\"</p>\"); } }); }else{ $(\"#loginResult\").html(\"<p>Unable to login: ensure details are correct.</p>\"); } }); \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "serial":1,
                  "post":3,
                  "success":2,
                  "url":1,
                  "prevent":1,
                  "ajax":1,
                  "alert":1,
                  "correct":1,
                  "data":6,
                  "result":2,
                  "thrown":2,
                  "text":2,
                  "submit":1,
                  "stop":1,
                  "home":1,
                  "array":1,
                  "error":3,
                  "status":2,
                  "function":3,
                  "control":1,
                  "length":2,
                  "detail":1,
                  "login":5,
                  "type":1,
                  "form":2,
                  "html":2,
                  "unabl":1,
                  "usernam":3,
                  "xhr":2,
                  "action":1,
                  "var":3,
                  "val":2,
                  "ensur":1,
                  "password":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"e",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"preventDefault",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      {
                        "text":"//STOP default action var postData = $(\"#loginForm\").serializeArray(); var username = $(\"#username\").val(); var password = $(\"#password\").val(); if(username.length > 0 && password.length >){ $.ajax( { type: \"POST\", url : \"HomeController\", data : postData, success: function(data) { if(data == \"success\"){ alert(data); } }, error: function(jqXHR, textStatus, errorThrown) { $(\"#loginResult\").html(\"<p>ss\"+errorThrown+textStatus+jqXHR+\"</p>\"); } }); }else{ $(\"#loginResult\").html(\"<p>Unable to login: ensure details are correct.</p>\"); } }); \n"
                      }
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>and the <code>HomeController</code> returning &quot;success&quot;:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25122660]-[-856700550]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>and the <code>HomeController</code> returning &quot;success&quot;:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"HomeController",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "success":1,
                  "return":1,
                  "code":2,
                  "home":1,
                  "quot":2,
                  "control":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HomeController",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String form = request.getParameter(&quot;form&quot;); // check login details if(form.equals(&quot;loginForm&quot;)){ String username = request.getParameter(&quot;username&quot;).trim(); String password = request.getParameter(&quot;password&quot;).trim(); PrintWriter out = response.getWriter(); password = loginService.hashPassword(password); boolean isValidUser = loginService.checkUser(username, password); if(isValidUser){ // set session HttpSession session = request.getSession(); session.setAttribute(&quot;loggedIn&quot;, &quot;true&quot;); out.println(&quot;success&quot;); }else{ out.println(&quot;Incorrect login details.&quot;); } } } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[25122660]-[930445364]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"KeywordModifierNode",
                      "value":"protected",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"doPost",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"HttpServletRequest",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"request",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "formalParameterDeclarator":{
                          "type":"FormalParameterDeclsNode",
                          "modifiers":[
                            
                          ],
                          "parameterType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"HttpServletResponse",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "nextDeclarator":{
                            "type":"AdditionalFormalParameterDeclNode",
                            "variableDeclarator":{
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"response",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "thrownExceptions":{
                    "type":"ThrownExceptionsNode",
                    "qualifiedIdentifierList":{
                      "type":"QualifiedIdentifierListNode",
                      "qualifiedNames":[
                        {
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ServletException",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"IOException",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "body":{
                    "type":"BlockNode",
                    "statements":[
                      {
                        "type":"LocalVariableDeclarationStatementNode",
                        "modifiers":[
                          
                        ],
                        "declarators":{
                          "type":"VariableDeclaratorsNode",
                          "declarators":[
                            {
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"form",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ],
                              "assignment":{
                                "type":"VariableAssignmentNode",
                                "variableAssignment":{
                                  "type":"VariableExpressionInitNode",
                                  "expression":{
                                    "type":"MethodInvocationNode",
                                    "qualifiedIdentifier":{
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"request",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"getParameter",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "args":{
                                      "type":"ExpressionListNode",
                                      "arguments":[
                                        {
                                          "type":"LiteralNode",
                                          "node":{
                                            "type":"StringLiteralNode",
                                            "valueRep":"\"form\""
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                },
                                "comments":[
                                  
                                ]
                              },
                              "varType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          {
                            "text":"// check login details if(form.equals(\"loginForm\")){ String username = request.getParameter(\"username\").trim(); String password = request.getParameter(\"password\").trim(); PrintWriter out = response.getWriter(); password = loginService.hashPassword(password); boolean isValidUser = loginService.checkUser(username, password); if(isValidUser){ // set session HttpSession session = request.getSession(); session.setAttribute(\"loggedIn\", \"true\"); out.println(\"success\"); }else{ out.println(\"Incorrect login details.\"); } } } \n"
                          }
                        ]
                      }
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String form = request.getParameter(\"form\"); // check login details if(form.equals(\"loginForm\")){ String username = request.getParameter(\"username\").trim(); String password = request.getParameter(\"password\").trim(); PrintWriter out = response.getWriter(); password = loginService.hashPassword(password); boolean isValidUser = loginService.checkUser(username, password); if(isValidUser){ // set session HttpSession session = request.getSession(); session.setAttribute(\"loggedIn\", \"true\"); out.println(\"success\"); }else{ out.println(\"Incorrect login details.\"); } } } \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "post":1,
                  "success":1,
                  "request":6,
                  "writer":2,
                  "print":1,
                  "set":2,
                  "servlet":3,
                  "println":2,
                  "attribut":1,
                  "hash":1,
                  "paramet":3,
                  "equal":1,
                  "check":2,
                  "incorrect":1,
                  "valid":2,
                  "true":1,
                  "session":5,
                  "detail":2,
                  "ioexcept":1,
                  "login":5,
                  "form":4,
                  "trim":2,
                  "respons":3,
                  "http":3,
                  "usernam":3,
                  "user":3,
                  "servic":2,
                  "log":1,
                  "password":6
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HttpServletRequest",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HttpServletResponse",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  {
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"request",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getParameter",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"form\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"request",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"response",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"form",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"request",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"getParameter",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"StringLiteralNode",
                                  "valueRep":"\"form\""
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I know that it is returning &quot;success&quot; because when I remove the <code>if</code> statement it alerts &quot;success&quot;.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25122660]-[234972318]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I know that it is returning &quot;success&quot; because when I remove the <code>if</code> statement it alerts &quot;success&quot;.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "remov":1,
                  "success":2,
                  "return":1,
                  "alert":1,
                  "statement":1,
                  "code":2,
                  "quot":4
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Why will it not successfully compare the two Strings?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[25122660]-[-1272957313]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Why will it not successfully compare the two Strings?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "success":1,
                  "compar":1,
                  "string":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":25122703,
      "questionId":25122660,
      "comments":[
        
      ],
      "creationDate":"2014-08-04",
      "lastActivityDate":"2014-08-04",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":3558960,
        "displayName":"Robby Cornelissen",
        "reputation":12535
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Use <code>out.print(&quot;success&quot;)</code> instead of <code>out.println(&quot;success&quot;)</code> in your controller, or trim the newline from your Javascript <code>data</code> object.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[25122703]-[-410997737]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Use <code>out.print(&quot;success&quot;)</code> instead of <code>out.println(&quot;success&quot;)</code> in your controller, or trim the newline from your Javascript <code>data</code> object.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "success":2,
                    "print":1,
                    "data":1,
                    "println":1,
                    "object":1,
                    "code":6,
                    "quot":4,
                    "control":1,
                    "trim":1,
                    "newlin":1,
                    "javascript":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}