{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":9852283,
    "title":"Is it possible to store a byte array(raw data) in a java class file?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":12558422,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":655172,
          "displayName":"Tom",
          "reputation":2805
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"looks obvious to me you can do what your are talking about."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558422]-[1149379780]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"looks obvious to me you can do what your are talking about."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "obvious":1,
                      "talk":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558504,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":304141,
          "displayName":"Thiago de Arruda",
          "reputation":1869
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"perhaps you could show an example of how can I store the byte array and then reference it back inside the class?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558504]-[107610277]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"perhaps you could show an example of how can I store the byte array and then reference it back inside the class?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "show":1,
                      "store":1,
                      "array":1,
                      "insid":1,
                      "back":1,
                      "refer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558000,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":302916,
          "displayName":"Brian Roach",
          "reputation":46069
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"An array *is* a reference in java. I'm not sure what it is you're asking."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558000]-[-470814981]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"An array *is* a reference in java. I'm not sure what it is you're asking."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "refer":1,
                      "array":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558037,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":304141,
          "displayName":"Thiago de Arruda",
          "reputation":1869
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I know, I was thinking of getting that reference from a constant pool or something like that."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558037]-[1707188089]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I know, I was thinking of getting that reference from a constant pool or something like that."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "think":1,
                      "constant":1,
                      "refer":1,
                      "pool":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558202,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":256196,
          "displayName":"Bohemian",
          "reputation":154989
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"*Exactly* what do you mean by &quot;this kind of raw data&quot;."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558202]-[-1328432691]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"*Exactly* what do you mean by &quot;this kind of raw data&quot;."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "raw":1,
                      "data":1,
                      "kind":1,
                      "quot":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558222,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":304141,
          "displayName":"Thiago de Arruda",
          "reputation":1869
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"No kind, just raw data :)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558222]-[103280480]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"No kind, just raw data :)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "raw":1,
                      "data":1,
                      "kind":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558245,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":256196,
          "displayName":"Bohemian",
          "reputation":154989
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"What do you mean by &quot;raw data&quot; then? Data is data. Exactly what are you talking about? We don't understand what you mean."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558245]-[-119302093]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"What do you mean by &quot;raw data&quot; then? Data is data. Exactly what are you talking about? We don't understand what you mean."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "data":3,
                      "understand":1,
                      "talk":1,
                      "raw":1,
                      "quot":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12558286,
        "postId":9852283,
        "creationDate":"2012-03-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":304141,
          "displayName":"Thiago de Arruda",
          "reputation":1869
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Byte arrays = raw data(just a collection of bytes). Instead of a String or a integer, I want to store a collection of bytes in the class and retrieve it at runtime."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9852283-cu12558286]-[1462432653]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Byte arrays = raw data(just a collection of bytes). Instead of a String or a integer, I want to store a collection of bytes in the class and retrieve it at runtime."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"and",
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "runtim":1,
                      "retriev":1,
                      "data":1,
                      "store":1,
                      "array":1,
                      "raw":1,
                      "collect":2,
                      "byte":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "constants",
      "bcel",
      ".class-file"
    ],
    "creationDate":"2012-03-24",
    "lastActivityDate":"2012-06-16",
    "lastEditDate":"2012-03-24",
    "score":1,
    "viewCount":660,
    "owner":{
      "type":"StackOverflowUser",
      "id":304141,
      "displayName":"Thiago de Arruda",
      "reputation":1869
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm using <a href=\"http://commons.apache.org/bcel/\"rel=\"nofollow\">Apache BCEL</a> to dynamically create java classes that will each have its own associated image. These generated class implement the following interface:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9852283]-[2091334472]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm using <a href=\"http://commons.apache.org/bcel/\"rel=\"nofollow\">Apache BCEL</a> to dynamically create java classes that will each have its own associated image. These generated class implement the following interface:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"implement",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "apach":2,
                  "rel":1,
                  "dynam":1,
                  "nofollow":1,
                  "common":1,
                  "implement":1,
                  "generat":1,
                  "class":1,
                  "bcel":2,
                  "org":1,
                  "href":1,
                  "http":1,
                  "creat":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"interface ImageOwner { byte[] getImage(); } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[9852283]-[2117487262]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"CompilationUnitNode",
                  "imports":[
                    
                  ],
                  "typeDeclarations":[
                    {
                      "type":"InterfaceDeclarationNode",
                      "modifiers":[
                        
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ImageOwner",
                        "comments":[
                          
                        ]
                      },
                      "body":{
                        "type":"ClassBodyNode",
                        "declarations":[
                          {
                            "type":"MethodDeclaratorNode",
                            "modifiers":[
                              
                            ],
                            "returnType":{
                              "type":"ArrayTypeNode",
                              "typeNode":{
                                "type":"PrimitiveTypeNode",
                                "name":"byte",
                                "comments":[
                                  
                                ]
                              },
                              "depth":[
                                {
                                  "type":"ArrayDimensionNode",
                                  "comments":[
                                    
                                  ]
                                }
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"getImage",
                              "comments":[
                                
                              ]
                            },
                            "parameters":{
                              "type":"FormalParametersNode",
                              "comments":[
                                
                              ]
                            },
                            "arrayReturnType":[
                              
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                }
              ]
            },
            "rawText":"interface ImageOwner { byte[] getImage(); } ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "owner":1,
                  "imag":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  {
                    "type":"PrimitiveTypeNode",
                    "name":"byte",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>When dynamically implementing the 'getImage' method, I could generate bytecodes to create/return the byte array when the method is invoked, but I would rather just return a reference to the byte array if possible. Is it possible to store raw data inside a java class file?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9852283]-[-2089529443]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>When dynamically implementing the 'getImage' method, I could generate bytecodes to create/return the byte array when the method is invoked, but I would rather just return a reference to the byte array if possible. Is it possible to store raw data inside a java class file?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"getImage",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"file",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":2,
                  "bytecod":1,
                  "data":1,
                  "dynam":1,
                  "invok":1,
                  "store":1,
                  "array":2,
                  "raw":1,
                  "insid":1,
                  "refer":1,
                  "implement":1,
                  "generat":1,
                  "file":1,
                  "creat":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":9852683,
      "questionId":9852283,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":12558903,
          "postId":9852683,
          "creationDate":"2012-03-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":304141,
            "displayName":"Thiago de Arruda",
            "reputation":1869
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That's more or less what I need, but I don't want to invoke an external utility class in order to get the bytes, instead I want the bytes to be stored in the class file and retrieve it in the class body"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[9852683-cu12558903]-[-264008726]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That's more or less what I need, but I don't want to invoke an external utility class in order to get the bytes, instead I want the bytes to be stored in the class file and retrieve it in the class body"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"in",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"file",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"body",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "util":1,
                        "retriev":1,
                        "invok":1,
                        "store":1,
                        "order":1,
                        "extern":1,
                        "file":1,
                        "bodi":1,
                        "byte":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":12558911,
          "postId":9852683,
          "creationDate":"2012-03-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":304141,
            "displayName":"Thiago de Arruda",
            "reputation":1869
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"If what I want is not possible and you know for sure, just specify in the answer and I will mark as correct."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[9852683-cu12558911]-[-688388319]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"If what I want is not possible and you know for sure, just specify in the answer and I will mark as correct."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "mark":1,
                        "correct":1,
                        "answer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":12559013,
          "postId":9852683,
          "creationDate":"2012-03-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":256196,
            "displayName":"Bohemian",
            "reputation":154989
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@ThiadodeArruda I've edited the code to give an example of how to do it"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[9852683-cu12559013]-[-1548549314]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@ThiadodeArruda I've edited the code to give an example of how to do it"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ThiadodeArruda",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "thiadod":1,
                        "arruda":1,
                        "code":1,
                        "edit":1,
                        "give":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":12559159,
          "postId":9852683,
          "creationDate":"2012-03-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":304141,
            "displayName":"Thiago de Arruda",
            "reputation":1869
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The problem with this approach is that this new byte array is actually created in the constructor, which will not only allocate the array, but also emit opcodes to store each byte which is what I was trying to avoid. Since the jvm only operated with 4 byte integers, a byte array stored like this would at least use 4x its actual space, without even considering the bytecodes necessary to create the byte array and store each byte on its own slot. This can be bad for large image files."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[9852683-cu12559159]-[-390901532]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The problem with this approach is that this new byte array is actually created in the constructor, which will not only allocate the array, but also emit opcodes to store each byte which is what I was trying to avoid. Since the jvm only operated with 4 byte integers, a byte array stored like this would at least use 4x its actual space, without even considering the bytecodes necessary to create the byte array and store each byte on its own slot. This can be bad for large image files."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "opcod":1,
                        "jvm":1,
                        "alloc":1,
                        "problem":1,
                        "bytecod":1,
                        "bad":1,
                        "constructor":1,
                        "store":3,
                        "avoid":1,
                        "emit":1,
                        "oper":1,
                        "array":4,
                        "integ":1,
                        "larg":1,
                        "space":1,
                        "approach":1,
                        "file":1,
                        "actual":1,
                        "slot":1,
                        "creat":2,
                        "imag":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-03-24",
      "lastActivityDate":"2012-03-24",
      "lastEditDate":"2012-03-24",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":256196,
        "displayName":"Bohemian",
        "reputation":154989
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I'm really not sure here, because it seems too simple a question, but for completeness, this will do what I think you want to do:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9852683]-[1106360551]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I'm really not sure here, because it seems too simple a question, but for completeness, this will do what I think you want to do:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "complet":1,
                    "simpl":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"public class ImageOwnerImpl implements ImageOwner { // A literal byte array. Tedious, but you could write code // to auto-generate this source from a file private byte[] imageByteArray = new byte[] { -128, 127, ...etc }; public byte[] getImage() { return imageByteArray; } } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[9852683]-[2021479134]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"CompilationUnitNode",
                    "imports":[
                      
                    ],
                    "typeDeclarations":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ImageOwnerImpl",
                          "comments":[
                            
                          ]
                        },
                        "implementedInterfaces":{
                          "type":"TypeListNode",
                          "types":[
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"ImageOwner",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "body":{
                          "type":"ClassBodyNode",
                          "declarations":[
                            
                          ],
                          "comments":[
                            {
                              "text":"// A literal byte array. Tedious, but you could write code // to auto-generate this source from a file private byte[] imageByteArray = new byte[] { -128, 127, ...etc }; public byte[] getImage() { return imageByteArray; } } \n"
                            }
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  }
                ]
              },
              "rawText":"public class ImageOwnerImpl implements ImageOwner { // A literal byte array. Tedious, but you could write code // to auto-generate this source from a file private byte[] imageByteArray = new byte[] { -128, 127, ...etc }; public byte[] getImage() { return imageByteArray; } } \n...\n}",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "auto":1,
                    "tedious":1,
                    "liter":1,
                    "code":1,
                    "impl":1,
                    "array":3,
                    "generat":1,
                    "file":1,
                    "owner":2,
                    "sourc":1,
                    "write":1,
                    "imag":5
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ImageOwner",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This is a literal byte array, which answers your question of &quot;how to store the bytes in the class file&quot;.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9852683]-[1066884662]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This is a literal byte array, which answers your question of &quot;how to store the bytes in the class file&quot;.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"file",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "liter":1,
                    "store":1,
                    "array":1,
                    "answer":1,
                    "file":1,
                    "quot":2,
                    "byte":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Most folks would load the image bytes from a file at runtime in the constructor, however you may have some special need that warrants this approach</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9852683]-[388430067]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Most folks would load the image bytes from a file at runtime in the constructor, however you may have some special need that warrants this approach</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "runtim":1,
                    "warrant":1,
                    "folk":1,
                    "constructor":1,
                    "load":1,
                    "approach":1,
                    "file":1,
                    "special":1,
                    "byte":1,
                    "imag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":9891724,
      "questionId":9852283,
      "comments":[
        
      ],
      "creationDate":"2012-03-27",
      "lastActivityDate":"2012-03-27",
      "score":0,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":304141,
        "displayName":"Thiago de Arruda",
        "reputation":1869
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>After some research, the best way I found to achieve my needs was to base64 encode the image data and use the constant pool to store the resulting String. Even with the =~ 30% loss, it seems better than using the constructor or other methods to initialize a byte array field.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9891724]-[1295412596]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>After some research, the best way I found to achieve my needs was to base64 encode the image data and use the constant pool to store the resulting String. Even with the =~ 30% loss, it seems better than using the constructor or other methods to initialize a byte array field.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "constant":1,
                    "method":1,
                    "research":1,
                    "field":1,
                    "data":1,
                    "result":1,
                    "constructor":1,
                    "store":1,
                    "base":1,
                    "array":1,
                    "found":1,
                    "encod":1,
                    "achiev":1,
                    "pool":1,
                    "initi":1,
                    "loss":1,
                    "imag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":10827332,
      "questionId":9852283,
      "comments":[
        
      ],
      "creationDate":"2012-05-31",
      "lastActivityDate":"2012-05-31",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1164259,
        "displayName":"ILOVEPIE",
        "reputation":112
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You could just store it as a byte array the syntax for array in BCEL is</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10827332]-[1298821366]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You could just store it as a byte array the syntax for array in BCEL is</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "syntax":1,
                    "store":1,
                    "bcel":1,
                    "array":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"[B "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10827332]-[89529]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"[B "
                  }
                ]
              },
              "rawText":"[B ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>for byte array</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10827332]-[-1244205565]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>for byte array</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "array":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"[java.lang.String "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10827332]-[-2140932256]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"["
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"[java.lang.String ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "lang":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>for a string array etc.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10827332]-[952988753]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>for a string array etc.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "array":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":9891832,
      "questionId":9852283,
      "comments":[
        
      ],
      "creationDate":"2012-03-27",
      "lastActivityDate":"2012-03-27",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":71399,
        "displayName":"PaulJWilliams",
        "reputation":12353
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Just define an Impl class that has a static initialiser that loads the raw data from a file that is included in your jar and loaded via the classloader.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9891832]-[326937716]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Just define an Impl class that has a static initialiser that loads the raw data from a file that is included in your jar and loaded via the classloader.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"that",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "data":1,
                    "load":2,
                    "includ":1,
                    "impl":1,
                    "raw":1,
                    "file":1,
                    "classload":1,
                    "defin":1,
                    "initialis":1,
                    "jar":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":11059966,
      "questionId":9852283,
      "comments":[
        
      ],
      "creationDate":"2012-06-16",
      "lastActivityDate":"2012-06-16",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1420279,
        "displayName":"Antimony",
        "reputation":15340
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The only constants you can store in the constant pool are Ints, Floats, Longs, Doubles, Strings, and Classes. You're best bet is to just store it as a string and convert it to a Byte[] at run time. There is no need to base64 encode them, as strings can handle null characters, as long as you apply the proper modified unicode encoding.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11059966]-[-1715445448]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The only constants you can store in the constant pool are Ints, Floats, Longs, Doubles, Strings, and Classes. You're best bet is to just store it as a string and convert it to a Byte[] at run time. There is no need to base64 encode them, as strings can handle null characters, as long as you apply the proper modified unicode encoding.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "constant":2,
                    "charact":1,
                    "float":1,
                    "proper":1,
                    "bet":1,
                    "run":1,
                    "store":2,
                    "string":2,
                    "base":1,
                    "long":1,
                    "encod":2,
                    "int":1,
                    "pool":1,
                    "modifi":1,
                    "class":1,
                    "doubl":1,
                    "unicod":1,
                    "time":1,
                    "appli":1,
                    "handl":1,
                    "convert":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}