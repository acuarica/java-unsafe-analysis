{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":15052883,
    "title":"Is HashMap.put for String keys generally a bottleneck? How do I speed it up?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":21161795,
        "postId":15052883,
        "creationDate":"2013-02-24",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1065197,
          "displayName":"Luiggi Mendoza",
          "reputation":51906
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Maybe your `String` input contains a very large value and the `hashCode` function becomes slower than the others."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15052883-cu21161795]-[1380412102]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Maybe your `String` input contains a very large value and the `hashCode` function becomes slower than the others."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"hashCode",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "code":1,
                      "hash":1,
                      "larg":1,
                      "slower":1,
                      "function":1,
                      "input":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "hashmap"
    ],
    "creationDate":"2013-02-24",
    "lastActivityDate":"2013-02-24",
    "lastEditDate":"2013-02-24",
    "score":3,
    "viewCount":162,
    "owner":{
      "type":"StackOverflowUser",
      "id":1672420,
      "displayName":"Jimmy C",
      "reputation":1001
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm writing a <a href=\"http://en.wikipedia.org/wiki/Random_indexing\"rel=\"nofollow\">Random Indexing</a> implementation in Java, which needs to process large corpora and somehow store individual tokens' context and index vectors. A HashMap seemed natural (String -&gt; Token object), but when running Xprof it seems like a disproportionate large portion of the processing goes to adding the token to the HashMap.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15052883]-[971368359]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm writing a <a href=\"http://en.wikipedia.org/wiki/Random_indexing\"rel=\"nofollow\">Random Indexing</a> implementation in Java, which needs to process large corpora and somehow store individual tokens' context and index vectors. A HashMap seemed natural (String -&gt; Token object), but when running Xprof it seems like a disproportionate large portion of the processing goes to adding the token to the HashMap.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"HashMap",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"HashMap",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "corpora":1,
                  "portion":1,
                  "random":2,
                  "natur":1,
                  "map":2,
                  "xprof":1,
                  "process":2,
                  "context":1,
                  "run":1,
                  "individu":1,
                  "vector":1,
                  "rel":1,
                  "store":1,
                  "object":1,
                  "disproportion":1,
                  "hash":2,
                  "larg":2,
                  "wikipedia":1,
                  "nofollow":1,
                  "token":3,
                  "implement":1,
                  "ad":1,
                  "wiki":1,
                  "org":1,
                  "href":1,
                  "http":1,
                  "write":1,
                  "index":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HashMap",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Am I reading the output correctly? Why is this, and is there some way for me to speed things up?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15052883]-[1432643326]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Am I reading the output correctly? Why is this, and is there some way for me to speed things up?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "read":1,
                  "correct":1,
                  "thing":1,
                  "output":1,
                  "speed":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Flat profile of 16.18 secs (606 total ticks): main Interpreted + native Method 6.9% 0 + 42 java.io.FileInputStream.readBytes 5.0% 0 + 30 java.lang.Object.getClass 1.8% 11 + 0 java.lang.String.toLowerCase 1.5% 9 + 0 java.util.HashMap.resize 1.3% 8 + 0 opennlp.tools.tokenize.AbstractTokenizer.tokenize 1.3% 0 + 8 java.util.zip.ZipFile.read 1.2% 0 + 7 java.util.zip.ZipFile.open 0.8% 5 + 0 java.util.Arrays.copyOfRange 0.5% 0 + 3 java.io.FileInputStream.available 0.3% 2 + 0 java.util.HashMap.put 0.3% 0 + 2 sun.misc.Unsafe.compareAndSwapLong 0.3% 2 + 0 java.lang.CharacterDataLatin1.toLowerCase 0.3% 2 + 0 java.util.ArrayList.grow 0.3% 2 + 0 semanticspace.SparseVector.get 0.3% 2 + 0 java.lang.CharacterData.of 0.2% 1 + 0 java.util.HashMap.createEntry 0.2% 1 + 0 java.util.Arrays.copyOf 0.2% 1 + 0 java.lang.Integer.valueOf 0.2% 1 + 0 java.lang.Integer.toString 0.2% 1 + 0 sun.misc.JarIndex.addToList 0.2% 1 + 0 java.util.ArrayList.toArray 0.2% 1 + 0 java.net.URL.toString 0.2% 1 + 0 semanticspace.SparseVector.add 0.2% 1 + 0 sun.reflect.NativeMethodAccessorImpl.invoke0 0.2% 1 + 0 java.io.BufferedInputStream.read1 26.2% 65 + 94 Total interpreted (including elided) Compiled + native Method 36.5% 217 + 4 java.util.HashMap.put 24.3% 133 + 14 semanticspace.SparseVector.add 2.6% 15 + 1 semanticspace.RandomIndexing.getToken 1.3% 8 + 0 java.lang.String.toLowerCase 1.3% 8 + 0 semanticspace.RandomIndexing.read 0.5% 0 + 3 java.util.HashMap.newKeyIterator 0.2% 0 + 1 semanticspace.SparseVector.get 0.2% 1 + 0 java.util.HashMap.containsKey 66.8% 382 + 23 Total compiled Stub + native Method 6.9% 0 + 42 java.lang.System.arraycopy 6.9% 0 + 42 Total stub Flat profile of 0.00 secs (1 total ticks): DestroyJavaVM Thread-local ticks: 100.0% 1 Blocked (of total) Flat profile of 16.17 secs (608 total ticks): Monitor Ctrl-Break Interpreted + native Method 98.2% 0 + 597 java.net.PlainSocketImpl.socketAccept 1.0% 0 + 6 java.net.PlainSocketImpl.initProto 0.7% 0 + 4 java.net.NetworkInterface.getAll 0.2% 0 + 1 java.lang.ClassLoader$NativeLibrary.load 100.0% 0 + 608 Total interpreted Global summary of 16.33 seconds: 100.0% 1326 Received ticks 53.2% 706 Received GC ticks 6.8% 90 Compilation 0.1% 1 Other VM operations "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[15052883]-[715768405]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"Flat profile of 16.18 secs (606 total ticks): main Interpreted + native Method 6.9% 0 + 42 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"io",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"FileInputStream",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"readBytes",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 5.0% 0 + 30 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Object",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"getClass",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 1.8% 11 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"String",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toLowerCase",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 1.5% 9 + 0 java.util.HashMap.resize 1.3% 8 + 0 opennlp.tools.tokenize.AbstractTokenizer.tokenize 1.3% 0 + 8 java.util.zip.ZipFile.read 1.2% 0 + 7 java.util.zip.ZipFile.open 0.8% 5 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Arrays",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"copyOfRange",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.5% 0 + 3 java.io.FileInputStream.available 0.3% 2 + 0 java.util.HashMap.put 0.3% 0 + 2 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"sun",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"misc",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Unsafe",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"compareAndSwapLong",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.3% 2 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"CharacterDataLatin1",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toLowerCase",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.3% 2 + 0 java.util.ArrayList.grow 0.3% 2 + 0 semanticspace.SparseVector.get 0.3% 2 + 0 java.lang.CharacterData.of 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"HashMap",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"createEntry",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Arrays",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"copyOf",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Integer",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"valueOf",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"Integer",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toString",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"sun",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"misc",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"JarIndex",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"addToList",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"ArrayList",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toArray",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"net",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"URL",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toString",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 1 + 0 semanticspace.SparseVector.add 0.2% 1 + 0 sun.reflect.NativeMethodAccessorImpl.invoke0 0.2% 1 + 0 java.io.BufferedInputStream.read1 26.2% 65 + 94 Total interpreted (including elided) Compiled + native Method 36.5% 217 + 4 java.util.HashMap.put 24.3% 133 + 14 semanticspace.SparseVector.add 2.6% 15 + 1 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"semanticspace",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"RandomIndexing",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"getToken",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 1.3% 8 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"lang",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"String",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"toLowerCase",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 1.3% 8 + 0 semanticspace.RandomIndexing.read 0.5% 0 + 3 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"HashMap",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"newKeyIterator",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 0 + 1 semanticspace.SparseVector.get 0.2% 1 + 0 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"util",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"HashMap",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"containsKey",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 66.8% 382 + 23 Total compiled Stub + native Method 6.9% 0 + 42 java.lang.System.arraycopy 6.9% 0 + 42 Total stub Flat profile of 0.00 secs (1 total ticks): DestroyJavaVM Thread-local ticks: 100.0% 1 Blocked (of total) Flat profile of 16.17 secs (608 total ticks): Monitor Ctrl-Break Interpreted + native Method 98.2% 0 + 597 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"net",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"PlainSocketImpl",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"socketAccept",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 1.0% 0 + 6 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"net",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"PlainSocketImpl",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"initProto",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.7% 0 + 4 "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"java",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"net",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"NetworkInterface",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"getAll",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" 0.2% 0 + 1 java.lang.ClassLoader$NativeLibrary.load 100.0% 0 + 608 Total interpreted Global summary of 16.33 seconds: 100.0% 1326 Received ticks 53.2% 706 Received GC ticks 6.8% 90 Compilation 0.1% 1 Other VM operations "
                }
              ]
            },
            "rawText":"Flat profile of 16.18 secs (606 total ticks): main Interpreted + native Method 6.9% 0 + 42 javaioFileInputStreamreadBytes 5.0% 0 + 30 javalangObjectgetClass 1.8% 11 + 0 javalangStringtoLowerCase 1.5% 9 + 0 java.util.HashMap.resize 1.3% 8 + 0 opennlp.tools.tokenize.AbstractTokenizer.tokenize 1.3% 0 + 8 java.util.zip.ZipFile.read 1.2% 0 + 7 java.util.zip.ZipFile.open 0.8% 5 + 0 javautilArrayscopyOfRange 0.5% 0 + 3 java.io.FileInputStream.available 0.3% 2 + 0 java.util.HashMap.put 0.3% 0 + 2 sunmiscUnsafecompareAndSwapLong 0.3% 2 + 0 javalangCharacterDataLatin1toLowerCase 0.3% 2 + 0 java.util.ArrayList.grow 0.3% 2 + 0 semanticspace.SparseVector.get 0.3% 2 + 0 java.lang.CharacterData.of 0.2% 1 + 0 javautilHashMapcreateEntry 0.2% 1 + 0 javautilArrayscopyOf 0.2% 1 + 0 javalangIntegervalueOf 0.2% 1 + 0 javalangIntegertoString 0.2% 1 + 0 sunmiscJarIndexaddToList 0.2% 1 + 0 javautilArrayListtoArray 0.2% 1 + 0 javanetURLtoString 0.2% 1 + 0 semanticspace.SparseVector.add 0.2% 1 + 0 sun.reflect.NativeMethodAccessorImpl.invoke0 0.2% 1 + 0 java.io.BufferedInputStream.read1 26.2% 65 + 94 Total interpreted (including elided) Compiled + native Method 36.5% 217 + 4 java.util.HashMap.put 24.3% 133 + 14 semanticspace.SparseVector.add 2.6% 15 + 1 semanticspaceRandomIndexinggetToken 1.3% 8 + 0 javalangStringtoLowerCase 1.3% 8 + 0 semanticspace.RandomIndexing.read 0.5% 0 + 3 javautilHashMapnewKeyIterator 0.2% 0 + 1 semanticspace.SparseVector.get 0.2% 1 + 0 javautilHashMapcontainsKey 66.8% 382 + 23 Total compiled Stub + native Method 6.9% 0 + 42 java.lang.System.arraycopy 6.9% 0 + 42 Total stub Flat profile of 0.00 secs (1 total ticks): DestroyJavaVM Thread-local ticks: 100.0% 1 Blocked (of total) Flat profile of 16.17 secs (608 total ticks): Monitor Ctrl-Break Interpreted + native Method 98.2% 0 + 597 javanetPlainSocketImplsocketAccept 1.0% 0 + 6 javanetPlainSocketImplinitProto 0.7% 0 + 4 javanetNetworkInterfacegetAll 0.2% 0 + 1 java.lang.ClassLoader$NativeLibrary.load 100.0% 0 + 608 Total interpreted Global summary of 16.33 seconds: 100.0% 1326 Received ticks 53.2% 706 Received GC ticks 6.8% 90 Compilation 0.1% 1 Other VM operations ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "integerto":1,
                  "spars":4,
                  "read":3,
                  "network":1,
                  "monitor":1,
                  "method":5,
                  "random":2,
                  "receiv":2,
                  "javaio":1,
                  "charact":2,
                  "mapcontain":1,
                  "accept":1,
                  "profil":3,
                  "socket":2,
                  "util":6,
                  "indexingget":1,
                  "system":1,
                  "zip":4,
                  "javautil":6,
                  "map":3,
                  "flat":3,
                  "summari":1,
                  "tool":1,
                  "loader":1,
                  "rang":1,
                  "data":2,
                  "implsocket":1,
                  "vector":4,
                  "sun":1,
                  "ctrl":1,
                  "local":1,
                  "javalang":6,
                  "invok":1,
                  "proto":1,
                  "load":1,
                  "mapcreat":1,
                  "opennlp":1,
                  "buffer":1,
                  "lower":3,
                  "librari":1,
                  "semanticspac":6,
                  "main":1,
                  "total":8,
                  "tick":6,
                  "open":1,
                  "implinit":1,
                  "sec":3,
                  "key":2,
                  "includ":1,
                  "impl":1,
                  "oper":1,
                  "accessor":1,
                  "array":3,
                  "global":1,
                  "block":1,
                  "hash":6,
                  "second":1,
                  "thread":1,
                  "entri":1,
                  "destroy":1,
                  "stringto":2,
                  "interfaceget":1,
                  "grow":1,
                  "javanet":4,
                  "stream":2,
                  "sunmisc":2,
                  "integervalu":1,
                  "token":4,
                  "iter":1,
                  "mapnew":1,
                  "arrayscopi":2,
                  "plain":2,
                  "indexadd":1,
                  "swap":1,
                  "put":2,
                  "resiz":1,
                  "file":4,
                  "latin":1,
                  "unsafecompar":1,
                  "compil":3,
                  "lang":3,
                  "urlto":1,
                  "arraycopi":1,
                  "elid":1,
                  "add":2,
                  "byte":1,
                  "reflect":1,
                  "jar":1,
                  "input":3,
                  "objectget":1,
                  "interpret":4,
                  "list":2,
                  "index":1,
                  "listto":1,
                  "stub":2,
                  "streamread":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":15052948,
      "questionId":15052883,
      "comments":[
        
      ],
      "creationDate":"2013-02-24",
      "lastActivityDate":"2013-02-24",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":415755,
        "displayName":"Elias Mårtenson",
        "reputation":1906
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There is not much information in your question to make a proper analysis, but based on what I can see you're simply reading a file and putting the words into a HashMap.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15052948]-[-521133693]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There is not much information in your question to make a proper analysis, but based on what I can see you're simply reading a file and putting the words into a HashMap.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HashMap",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "question":1,
                    "map":1,
                    "proper":1,
                    "base":1,
                    "hash":1,
                    "simpli":1,
                    "inform":1,
                    "make":1,
                    "put":1,
                    "file":1,
                    "analysi":1,
                    "word":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HashMap",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Given the fact that that is the only thing the program does, one shouldn't be at all surprised that it spends most of its time reading the file and updating the HashMap.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15052948]-[-2136741897]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Given the fact that that is the only thing the program does, one shouldn't be at all surprised that it spends most of its time reading the file and updating the HashMap.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HashMap",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "program":1,
                    "map":1,
                    "spend":1,
                    "updat":1,
                    "thing":1,
                    "surpris":1,
                    "fact":1,
                    "hash":1,
                    "file":1,
                    "time":1,
                    "shouldn":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HashMap",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":15052960,
      "questionId":15052883,
      "comments":[
        
      ],
      "creationDate":"2013-02-24",
      "lastActivityDate":"2013-02-24",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":179864,
        "displayName":"aditsu",
        "reputation":2011
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I don't know about Xprof, but you can try profiling with visualvm, and see how many times it calls HashMap.put, how long it takes each time and in total. And also it might have a different picture of where the bottleneck is.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15052960]-[508465350]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I don't know about Xprof, but you can try profiling with visualvm, and see how many times it calls HashMap.put, how long it takes each time and in total. And also it might have a different picture of where the bottleneck is.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "visualvm":1,
                    "profil":1,
                    "map":1,
                    "xprof":1,
                    "total":1,
                    "hash":1,
                    "take":1,
                    "put":1,
                    "bottleneck":1,
                    "time":2,
                    "pictur":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}