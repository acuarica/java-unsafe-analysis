{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":6289923,
    "title":"Why &quot;System.arraycopy&quot; uses &quot;Object&quot; instead of &quot;Object[]&quot;?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":7345083,
        "postId":6289923,
        "creationDate":"2011-06-09",
        "score":4,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":7412,
          "displayName":"dogbane",
          "reputation":98281
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"As an aside, there is no need to call `System.arraycopy` anymore because recent versions of java have `Arrays.copyOfRange`."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6289923-cu7345083]-[715455637]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"As an aside, there is no need to call `System.arraycopy` anymore because recent versions of java have `Arrays.copyOfRange`."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Arrays",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"copyOfRange",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "system":1,
                      "recent":1,
                      "rang":1,
                      "anymor":1,
                      "array":1,
                      "version":1,
                      "arraycopi":1,
                      "call":1,
                      "copi":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "arrays",
      "arraycopy"
    ],
    "creationDate":"2011-06-09",
    "lastActivityDate":"2011-06-09",
    "lastEditDate":"2011-06-09",
    "score":15,
    "viewCount":832,
    "owner":{
      "type":"StackOverflowUser",
      "id":204845,
      "displayName":"Arne",
      "reputation":7297
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Just curious:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6289923]-[1835531905]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Just curious:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "curious":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Someone knows why the method <code>System.arraycopy</code> uses <code>Object</code> as type for <code>src</code> and <code>dest</code>? Would be perfectly possible to use <code>Object[]</code> instead?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6289923]-[-816932156]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Someone knows why the method <code>System.arraycopy</code> uses <code>Object</code> as type for <code>src</code> and <code>dest</code>? Would be perfectly possible to use <code>Object[]</code> instead?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "dest":1,
                  "method":1,
                  "system":1,
                  "perfect":1,
                  "object":2,
                  "code":10,
                  "src":1,
                  "type":1,
                  "arraycopi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Why define:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6289923]-[-1624835554]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Why define:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "defin":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"arraycopy(Object src, int srcPos, Object dest, int destPos, int length) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[6289923]-[933770514]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"arraycopy(Object src, int "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"srcPos",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":", Object dest, int "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"destPos",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":", int length) "
                }
              ]
            },
            "rawText":"arraycopy(Object src, int srcPos, Object dest, int destPos, int length) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "dest":2,
                  "pos":2,
                  "object":2,
                  "src":2,
                  "length":1,
                  "arraycopi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>instead of</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6289923]-[-364934400]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>instead of</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"arraycopy(Object[] src, int srcPos, Object[] dest, int destPos, int length) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[6289923]-[-387766826]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"arraycopy(Object[] src, int "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"srcPos",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":", Object[] dest, int "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"destPos",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":", int length) "
                }
              ]
            },
            "rawText":"arraycopy(Object[] src, int srcPos, Object[] dest, int destPos, int length) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "dest":2,
                  "pos":2,
                  "object":2,
                  "src":2,
                  "length":1,
                  "arraycopi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6289923]-[-354372490]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":6294753,
      "questionId":6289923,
      "comments":[
        
      ],
      "creationDate":"2011-06-09",
      "lastActivityDate":"2011-06-09",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":218978,
        "displayName":"irreputable",
        "reputation":27360
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It would be more statically typed if it has a version for <code>Object[]</code> and each <code>p[]</code> where p is a primitive. Like the numerous overloading methods in <code>Arrays</code> class.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6294753]-[1370317439]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It would be more statically typed if it has a version for <code>Object[]</code> and each <code>p[]</code> where p is a primitive. Like the numerous overloading methods in <code>Arrays</code> class.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "static":1,
                    "method":1,
                    "overload":1,
                    "numer":1,
                    "object":1,
                    "code":6,
                    "array":1,
                    "version":1,
                    "type":1,
                    "primit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The author of <code>System.arraycopy</code> either was lazy, or didn't like clutter in API.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6294753]-[1998596366]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The author of <code>System.arraycopy</code> either was lazy, or didn't like clutter in API.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "author":1,
                    "system":1,
                    "lazi":1,
                    "code":2,
                    "api":1,
                    "clutter":1,
                    "arraycopi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":6289959,
      "questionId":6289923,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":7367314,
          "postId":6289959,
          "creationDate":"2011-06-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":358562,
            "displayName":"Angel O'Sphere",
            "reputation":1542
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Well, as noted above I missunderstood your point. I assumed you wanted to copy longs into bytes and references of objects into longs etc. I only wanted to point out that this makes no sense."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7367314]-[-1399932518]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Well, as noted above I missunderstood your point. I assumed you wanted to copy longs into bytes and references of objects into longs etc. I only wanted to point out that this makes no sense."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sens":1,
                        "assum":1,
                        "point":2,
                        "want":2,
                        "missunderstood":1,
                        "object":1,
                        "long":2,
                        "note":1,
                        "refer":1,
                        "make":1,
                        "byte":1,
                        "copi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7368010,
          "postId":6289959,
          "creationDate":"2011-06-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Angel, Some of the combinations which are not allowed would be useful esp. since auto-boxing is part of the language now."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7368010]-[2123673661]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Angel, Some of the combinations which are not allowed would be useful esp. since auto-boxing is part of the language now."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Angel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "languag":1,
                        "auto":1,
                        "angel":1,
                        "allow":1,
                        "combin":1,
                        "box":1,
                        "part":1,
                        "esp":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7368395,
          "postId":6289959,
          "creationDate":"2011-06-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":358562,
            "displayName":"Angel O'Sphere",
            "reputation":1542
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That was my point (or my confusion), the &quot;usefull things&quot; are not easy to implement as we call a &quot;machine code&quot; method (actually its a C function) here, that is made for speed. A Java method could easily use reflection etc. (Note: the called function is actually moving raw memory around and does not really care 'what' it is moving)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7368395]-[1275125121]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That was my point (or my confusion), the &quot;usefull things&quot; are not easy to implement as we call a &quot;machine code&quot; method (actually its a C function) here, that is made for speed. A Java method could easily use reflection etc. (Note: the called function is actually moving raw memory around and does not really care 'what' it is moving)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":2,
                        "move":2,
                        "point":1,
                        "easi":1,
                        "thing":1,
                        "care":1,
                        "code":1,
                        "easili":1,
                        "raw":1,
                        "machin":1,
                        "note":1,
                        "function":2,
                        "implement":1,
                        "quot":4,
                        "useful":1,
                        "confus":1,
                        "call":2,
                        "made":1,
                        "reflect":1,
                        "speed":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7368520,
          "postId":6289959,
          "creationDate":"2011-06-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Angel, You might appreciate a look at Unsafe.copyMemory(). http://j7a.ru/classsun_1_1misc_1_1_unsafe.html#a6d4a20a539a1cfe3b92bf2297759e724"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7368520]-[1303946429]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Angel, You might appreciate a look at Unsafe.copyMemory(). http://j7a.ru/classsun_1_1misc_1_1_unsafe.html#a6d4a20a539a1cfe3b92bf2297759e724"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Angel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"copyMemory",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"classsun_1_1misc_1_1_unsafe",
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "cfe":1,
                        "classsun":1,
                        "angel":1,
                        "misc":1,
                        "unsaf":2,
                        "html":1,
                        "http":1,
                        "copi":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345059,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":204845,
            "displayName":"Arne",
            "reputation":7297
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Cool, dosn't think of that. Thanks!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345059]-[1548403444]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Cool, dosn't think of that. Thanks!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "cool":1,
                        "dosn":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345067,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":6,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":283553,
            "displayName":"willjcroz",
            "reputation":1381
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"+1 Damn it Peter, must you answer all the low hanging Java fruit? trying to get some rep here! ;-)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345067]-[259354925]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"+1 Damn it Peter, must you answer all the low hanging Java fruit? trying to get some rep here! ;-)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "fruit":1,
                        "peter":1,
                        "hang":1,
                        "low":1,
                        "damn":1,
                        "answer":1,
                        "rep":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345101,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"IMHO all the arrays should extend or be equivalent to an array type like `Array\n<t>\n ` where T can be a primitive type. The method would be \n <t>\n   System.arraycopy(Array\n  <t>\n    a, int aSrc, Array\n   <t>\n     b, int bSrc, int len)` That way you could accediently copy from an `int[]` to an `Integer[]` which might think would work. But this is unlikely to change.\n   </t>\n  </t>\n </t>\n</t>"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345101]-[-405428092]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"IMHO all the arrays should extend or be equivalent to an array type like `Array\n<t>\n ` where T can be a primitive type. The method would be \n <t>\n   System.arraycopy(Array\n  <t>\n    a, int aSrc, Array\n   <t>\n     b, int bSrc, int len)` That way you could accediently copy from an `int[]` to an `Integer[]` which might think would work. But this is unlikely to change.\n   </t>\n  </t>\n </t>\n</t>"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"aSrc",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"bSrc",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":1,
                        "method":1,
                        "system":1,
                        "equival":1,
                        "accedi":1,
                        "extend":1,
                        "work":1,
                        "imho":1,
                        "array":5,
                        "src":2,
                        "type":2,
                        "primit":1,
                        "arraycopi":1,
                        "copi":1,
                        "len":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345106,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3916,
            "displayName":"Vineet Reynolds",
            "reputation":44607
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@willjcroz, I see I'm not the only one having this predicament."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345106]-[-1780614968]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@willjcroz, I see I'm not the only one having this predicament."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "predica":1,
                        "willjcroz":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345116,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@willjcroz, I will let someone else answer first from now on, got enough rep. ;)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345116]-[707571173]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@willjcroz, I will let someone else answer first from now on, got enough rep. ;)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "willjcroz":1,
                        "rep":1,
                        "answer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345426,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":283553,
            "displayName":"willjcroz",
            "reputation":1381
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Peter, its frustrating for many of us who are not 'experts' yet and looking to gain rep, but I understand that your motivation makes this site better for getting questions answered quickly. I frequently find your answers useful myself. Maybe keep an eye on the easier ones and step in if there is inadequate answers? Personally I think there could be some rep mechanism to reward high rep users to behave in this way, i.e. to 'nurture' the next generation of contributors, I fear many valuable future contributors are lost in frustration. Similar to the 'overzealous Wikipedia editor' problem."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345426]-[-2065907418]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Peter, its frustrating for many of us who are not 'experts' yet and looking to gain rep, but I understand that your motivation makes this site better for getting questions answered quickly. I frequently find your answers useful myself. Maybe keep an eye on the easier ones and step in if there is inadequate answers? Personally I think there could be some rep mechanism to reward high rep users to behave in this way, i.e. to 'nurture' the next generation of contributors, I fear many valuable future contributors are lost in frustration. Similar to the 'overzealous Wikipedia editor' problem."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Peter",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "eye":1,
                        "valuabl":1,
                        "find":1,
                        "question":1,
                        "motiv":1,
                        "contributor":2,
                        "step":1,
                        "similar":1,
                        "problem":1,
                        "peter":1,
                        "reward":1,
                        "understand":1,
                        "site":1,
                        "inadequ":1,
                        "overzeal":1,
                        "lost":1,
                        "frustrat":2,
                        "behav":1,
                        "expert":1,
                        "easier":1,
                        "editor":1,
                        "wikipedia":1,
                        "nurtur":1,
                        "gain":1,
                        "futur":1,
                        "mechan":1,
                        "person":1,
                        "generat":1,
                        "make":1,
                        "answer":3,
                        "quick":1,
                        "rep":3,
                        "fear":1,
                        "user":1,
                        "frequent":1,
                        "high":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7345828,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@willjcroz, Even if I don't jump in there are some with higher rep who do. Perhaps this is something which can be distributed as a site policy."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7345828]-[1935293012]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@willjcroz, Even if I don't jump in there are some with higher rep who do. Perhaps this is something which can be distributed as a site policy."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jump":1,
                        "higher":1,
                        "site":1,
                        "willjcroz":1,
                        "polici":1,
                        "rep":1,
                        "distribut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7352185,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":358562,
            "displayName":"Angel O'Sphere",
            "reputation":1542
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Peter: your proposal wont work as an byte[] array and a int[] array are in memory of different size. Also it conflicts with 32 bit and 64 bit referenc sizes. Keep in mind the method is implemented in C/machine code."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7352185]-[-432233637]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Peter: your proposal wont work as an byte[] array and a int[] array are in memory of different size. Also it conflicts with 32 bit and 64 bit referenc sizes. Keep in mind the method is implemented in C/machine code."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Peter",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "bit":2,
                        "size":2,
                        "conflict":1,
                        "peter":1,
                        "propos":1,
                        "work":1,
                        "code":1,
                        "array":2,
                        "mind":1,
                        "machin":1,
                        "wont":1,
                        "implement":1,
                        "referenc":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7352253,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Angel, I don't see what you mean. Currently you can try to copy from a byte[] to a int[] but you get a runtime error. I am proposing that the compiler should be able to tell you this. You can have a 64-bit JVM with 32-bit references with `-XX:+UseCompressedOops` but I don't see how this is relevant."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7352253]-[-1380838017]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Angel, I don't see what you mean. Currently you can try to copy from a byte[] to a int[] but you get a runtime error. I am proposing that the compiler should be able to tell you this. You can have a 64-bit JVM with 32-bit references with `-XX:+UseCompressedOops` but I don't see how this is relevant."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Angel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"UseCompressedOops",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "oop":1,
                        "runtim":1,
                        "bit":2,
                        "angel":1,
                        "propos":1,
                        "relev":1,
                        "error":1,
                        "compress":1,
                        "refer":1,
                        "compil":1,
                        "copi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"UseCompressedOops",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7352399,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":358562,
            "displayName":"Angel O'Sphere",
            "reputation":1542
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Oh, your previous comment was a bit confusing, I thought you wanted to be able to copy from int to byte e.g. As we can't use primitives as generic type arguments we wont get this any time soon. Of course it is relevant whether you have 32 or 64 pointers as the right routine needs to be called to handle the move."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7352399]-[2076945486]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Oh, your previous comment was a bit confusing, I thought you wanted to be able to copy from int to byte e.g. As we can't use primitives as generic type arguments we wont get this any time soon. Of course it is relevant whether you have 32 or 64 pointers as the right routine needs to be called to handle the move."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "move":1,
                        "bit":1,
                        "want":1,
                        "pointer":1,
                        "thought":1,
                        "previous":1,
                        "relev":1,
                        "generic":1,
                        "routin":1,
                        "comment":1,
                        "wont":1,
                        "confus":1,
                        "time":1,
                        "type":1,
                        "primit":1,
                        "call":1,
                        "argument":1,
                        "handl":1,
                        "copi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7352517,
          "postId":6289959,
          "creationDate":"2011-06-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Angel, the JVM will only be using 32-bit or 64-bit references, I don't see how you can mix them up."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6289959-cu7352517]-[-821629478]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Angel, the JVM will only be using 32-bit or 64-bit references, I don't see how you can mix them up."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Angel",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "bit":2,
                        "angel":1,
                        "mix":1,
                        "refer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-06-09",
      "lastActivityDate":"2011-06-09",
      "score":19,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Primitive array types like <code>boolean[]</code> and <code>double[]</code> do not extend <code>Object[]</code> but they do extend <code>Object</code></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6289959]-[-839303729]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Primitive array types like <code>boolean[]</code> and <code>double[]</code> do not extend <code>Object[]</code> but they do extend <code>Object</code></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "extend":2,
                    "object":2,
                    "code":8,
                    "array":1,
                    "type":1,
                    "primit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This method allows you to copy any type of array, so the type is Object.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6289959]-[590984557]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This method allows you to copy any type of array, so the type is Object.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "object":1,
                    "array":1,
                    "type":2,
                    "copi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"int[] a = int[] b = System.arraycopy(a, 0, b, 0, a.length); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[6289959]-[-923667482]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"int[] a = int[] "
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"=",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"b",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"System",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"arraycopy",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"a",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"LiteralNode",
                              "node":{
                                "type":"IntegerLiteralNode",
                                "valueRep":"0"
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"b",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"LiteralNode",
                              "node":{
                                "type":"IntegerLiteralNode",
                                "valueRep":"0"
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"a",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"IdentifierNode",
                                  "name":"length",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  }
                ]
              },
              "rawText":"int[] a = int[] b = System.arraycopy(a, 0, b, 0, a.length); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "length":1,
                    "arraycopi":1,
                    "system":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"arraycopy",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"a",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"IntegerLiteralNode",
                              "valueRep":"0"
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"b",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"IntegerLiteralNode",
                              "valueRep":"0"
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"a",
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"IdentifierNode",
                                "name":"length",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}