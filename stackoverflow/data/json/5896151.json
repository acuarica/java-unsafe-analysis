{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":5896151,
    "title":"Is it possible to call the default-constructor instead of the zero-argument constructor?",
    "comments":[
      
    ],
    "tags":[
      "java",
      "reflection",
      "constructor",
      "instantiation"
    ],
    "creationDate":"2011-05-05",
    "lastActivityDate":"2011-05-05",
    "score":2,
    "viewCount":703,
    "owner":{
      "type":"StackOverflowUser",
      "id":131773,
      "displayName":"OliverS",
      "reputation":548
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have a util class that is supposed to call a method on a given Class object using reflection.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5896151]-[496826973]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have a util class that is supposed to call a method on a given Class object using reflection.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"that",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "util":1,
                  "object":1,
                  "suppos":1,
                  "call":1,
                  "reflect":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Right now it creates a new instances using .newInstance() and then calls the method I want to test.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5896151]-[157993873]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Right now it creates a new instances using .newInstance() and then calls the method I want to test.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"newInstance",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "test":1,
                  "creat":1,
                  "call":1,
                  "instanc":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The problem is that the zero-arguement constructor of some of my classes throws an Exception due to missing dependencies and such and keeps me from calling the method I actually want to test.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5896151]-[1393843405]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The problem is that the zero-arguement constructor of some of my classes throws an Exception due to missing dependencies and such and keeps me from calling the method I actually want to test.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "test":1,
                  "due":1,
                  "depend":1,
                  "problem":1,
                  "arguement":1,
                  "constructor":1,
                  "miss":1,
                  "class":1,
                  "call":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Is it possible to call the default-constructor of Java to create the instance instead of the custom zero-argument constructor?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5896151]-[1082222205]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Is it possible to call the default-constructor of Java to create the instance instead of the custom zero-argument constructor?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "custom":1,
                  "constructor":2,
                  "creat":1,
                  "call":1,
                  "argument":1,
                  "instanc":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":5896194,
      "questionId":5896151,
      "comments":[
        
      ],
      "creationDate":"2011-05-05",
      "lastActivityDate":"2011-05-05",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":572644,
        "displayName":"Daniel Hilgarth",
        "reputation":95370
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>A default constructor is only created, when you don't provide a constructor yourself.<br /> So, as soon as your class has at least one constructor, that default constructor isn't being created.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5896194]-[-1354197992]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>A default constructor is only created, when you don't provide a constructor yourself.<br /> So, as soon as your class has at least one constructor, that default constructor isn't being created.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"has",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "provid":1,
                    "isn":1,
                    "creat":2,
                    "constructor":4
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5896242,
      "questionId":5896151,
      "comments":[
        
      ],
      "creationDate":"2011-05-05",
      "lastActivityDate":"2011-05-05",
      "score":8,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You only have a default constructor, if the class has no constructors defined.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5896242]-[-348411955]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You only have a default constructor, if the class has no constructors defined.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"has",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "defin":1,
                    "constructor":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The no-arg constructor should only take the dependencies you give it (i.e. none) and it appears you believe you can still use the class without additional dependencies.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5896242]-[214527808]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The no-arg constructor should only take the dependencies you give it (i.e. none) and it appears you believe you can still use the class without additional dependencies.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"without",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "depend":2,
                    "addit":1,
                    "appear":1,
                    "constructor":1,
                    "give":1,
                    "arg":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In Sun/Oracle JVM you can use <code>Unsafe.allocateInstance(Class)</code> which creates an instance without calling a constructor, but I would try to fix your class design first.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5896242]-[-668855060]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In Sun/Oracle JVM you can use <code>Unsafe.allocateInstance(Class)</code> which creates an instance without calling a constructor, but I would try to fix your class design first.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"allocateInstance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"design",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "design":1,
                    "alloc":1,
                    "sun":1,
                    "fix":1,
                    "constructor":1,
                    "oracl":1,
                    "code":2,
                    "unsaf":1,
                    "creat":1,
                    "call":1,
                    "instanc":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}