{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":6452327,
    "title":"Java threads monitoring\\profiling\\measurement",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":7578556,
        "postId":6452327,
        "creationDate":"2011-06-23",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":233266,
          "displayName":"Toby",
          "reputation":2103
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"have you confirmed via jconsole/visualvm? i use the same as you with no problems, perhaps its down to when you call the method? If you call the same via the jconsole mbean interface, you should see a non-zero number... you can also try getThreadUserTime(id)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6452327-cu7578556]-[-1351013616]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"have you confirmed via jconsole/visualvm? i use the same as you with no problems, perhaps its down to when you call the method? If you call the same via the jconsole mbean interface, you should see a non-zero number... you can also try getThreadUserTime(id)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"getThreadUserTime",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jconsol":2,
                      "number":1,
                      "method":1,
                      "visualvm":1,
                      "problem":1,
                      "mbean":1,
                      "thread":1,
                      "confirm":1,
                      "time":1,
                      "call":2,
                      "user":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":7611215,
        "postId":6452327,
        "creationDate":"2011-06-25",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":811973,
          "displayName":"Syke",
          "reputation":1
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Toby, thanks for your reply. For most of the threads I receive zero value, not for all of them; so I guess, I call these procedure in the right place in my code. Using JConsole force me not to end the program and connect to it, but the JConsole provided analysis to threads that are in the system (blocked, waiting, running) and not for threads that were terminated. The same idea holds for JVisualVM."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[6452327-cu7611215]-[-1349399171]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Toby, thanks for your reply. For most of the threads I receive zero value, not for all of them; so I guess, I call these procedure in the right place in my code. Using JConsole force me not to end the program and connect to it, but the JConsole provided analysis to threads that are in the system (blocked, waiting, running) and not for threads that were terminated. The same idea holds for JVisualVM."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Toby",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jconsol":2,
                      "program":1,
                      "provid":1,
                      "jvisual":1,
                      "receiv":1,
                      "wait":1,
                      "system":1,
                      "connect":1,
                      "tobi":1,
                      "run":1,
                      "idea":1,
                      "procedur":1,
                      "code":1,
                      "hold":1,
                      "block":1,
                      "thread":3,
                      "repli":1,
                      "end":1,
                      "place":1,
                      "guess":1,
                      "forc":1,
                      "analysi":1,
                      "call":1,
                      "termin":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "multithreading",
      "jvm",
      "jvisualvm"
    ],
    "creationDate":"2011-06-23",
    "lastActivityDate":"2011-06-23",
    "score":-1,
    "viewCount":604,
    "owner":{
      "type":"StackOverflowUser",
      "id":811973,
      "displayName":"Syke",
      "reputation":1
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am familiar with </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[981960019]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am familiar with </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "familiar":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<blockquote> \n <p><a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/management/ThreadMXBean.html\"rel=\"nofollow\">http://download.oracle.com/javase/6/docs/api/java/lang/management/ThreadMXBean.html</a></p> \n</blockquote>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[-2070546073]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<blockquote> \n <p><a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/management/ThreadMXBean.html\"rel=\"nofollow\">http://download.oracle.com/javase/6/docs/api/java/lang/management/ThreadMXBean.html</a></p> \n</blockquote>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "mxbean":2,
                  "rel":1,
                  "oracl":2,
                  "doc":2,
                  "blockquot":2,
                  "thread":2,
                  "nofollow":1,
                  "javas":2,
                  "api":2,
                  "lang":2,
                  "html":2,
                  "href":1,
                  "manag":2,
                  "http":2,
                  "download":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I would like to test\\profile\\measure how many CPU time did the thread get. I added the following to the my thread constructor:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[-1619419841]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I would like to test\\profile\\measure how many CPU time did the thread get. I added the following to the my thread constructor:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":1,
                  "profil":1,
                  "constructor":1,
                  "measur":1,
                  "thread":2,
                  "cpu":1,
                  "ad":1,
                  "time":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"ManagementFactory.getThreadMXBean().setThreadCpuTimeEnabled(true); if(!ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported()) System.err.println(&quot;measure is not supported.&quot;); ManagementFactory.getThreadMXBean().setThreadContentionMonitoringEnabled(true); if(!ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported()) System.err.println(&quot;contention is not supported.&quot;); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[6452327]-[1888276035]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":".",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"ManagementFactory",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getThreadMXBean",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"setThreadCpuTimeEnabled",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"BooleanLiteralNode",
                              "valueRep":"true"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"IfStatementNode",
                  "expression":{
                    "type":"PrefixOperatorExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"!",
                      "comments":[
                        
                      ]
                    },
                    "argument":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ManagementFactory",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"getThreadMXBean",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"isCurrentThreadCpuTimeSupported",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "statement":{
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"err",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"println",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"measure is not supported.\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":".",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"ManagementFactory",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getThreadMXBean",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"setThreadContentionMonitoringEnabled",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"BooleanLiteralNode",
                              "valueRep":"true"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"IfStatementNode",
                  "expression":{
                    "type":"PrefixOperatorExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"!",
                      "comments":[
                        
                      ]
                    },
                    "argument":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ManagementFactory",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"getThreadMXBean",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"isCurrentThreadCpuTimeSupported",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "statement":{
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"err",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"println",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"contention is not supported.\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"ManagementFactory.getThreadMXBean().setThreadCpuTimeEnabled(true); if(!ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported()) System.err.println(\"measure is not supported.\"); ManagementFactory.getThreadMXBean().setThreadContentionMonitoringEnabled(true); if(!ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported()) System.err.println(\"contention is not supported.\"); ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "support":4,
                  "monitor":1,
                  "mxbean":4,
                  "system":2,
                  "set":2,
                  "println":2,
                  "factori":4,
                  "measur":1,
                  "thread":8,
                  "cpu":3,
                  "content":2,
                  "true":2,
                  "enabl":2,
                  "err":2,
                  "time":3,
                  "manag":4,
                  "current":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"isCurrentThreadCpuTimeSupported",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"setThreadCpuTimeEnabled",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"BooleanLiteralNode",
                            "valueRep":"true"
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"System",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"err",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"println",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"contention is not supported.\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"ManagementFactory",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getThreadMXBean",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"System",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"err",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"println",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"measure is not supported.\""
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"setThreadContentionMonitoringEnabled",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"BooleanLiteralNode",
                            "valueRep":"true"
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Then when the thread has finished it's execution, I executed:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[317042084]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Then when the thread has finished it's execution, I executed:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "finish":1,
                  "thread":1,
                  "execut":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"long tID = Thread.currentThread().getId(); long execTime = ManagementFactory.getThreadMXBean().getThreadCpuTime(tID); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[6452327]-[4181687]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"long "
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"=",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"tID",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Thread",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"currentThread",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"getId",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"long "
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"=",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"execTime",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"ManagementFactory",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"getThreadMXBean",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"getThreadCpuTime",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"tID",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                }
              ]
            },
            "rawText":"long tID = Thread.currentThread().getId(); long execTime = ManagementFactory.getThreadMXBean().getThreadCpuTime(tID); ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "mxbean":1,
                  "factori":1,
                  "thread":4,
                  "cpu":1,
                  "time":2,
                  "manag":1,
                  "current":1,
                  "exec":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Thread",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"currentThread",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getId",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"ManagementFactory",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getThreadMXBean",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getThreadCpuTime",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"tID",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>But for most of my threads, which I am <strong>ABSOLUTELY SURE</strong> that they do occupy the CPU, I get execution time of zero (execTime == 0).</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[-1683313308]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>But for most of my threads, which I am <strong>ABSOLUTELY SURE</strong> that they do occupy the CPU, I get execution time of zero (execTime == 0).</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"execTime",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "strong":2,
                  "thread":1,
                  "cpu":1,
                  "absolut":1,
                  "time":2,
                  "exec":1,
                  "occupi":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How may I measure my threads? What could be the problem in the above procedure?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[-1928817468]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How may I measure my threads? What could be the problem in the above procedure?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "measur":1,
                  "thread":1,
                  "procedur":1,
                  "problem":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Thanks in advanced.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[6452327]-[1312663839]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Thanks in advanced.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "advanc":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":6452362,
      "questionId":6452327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":7612798,
          "postId":6452362,
          "creationDate":"2011-06-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":7345,
            "displayName":"mindas",
            "reputation":16091
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Just to let you know, one of the projects was written by my close colleague. And no, I don't care about my answer count."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7612798]-[1325102010]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Just to let you know, one of the projects was written by my close colleague. And no, I don't care about my answer count."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "count":1,
                        "project":1,
                        "care":1,
                        "colleagu":1,
                        "written":1,
                        "answer":1,
                        "close":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7606968,
          "postId":6452362,
          "creationDate":"2011-06-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":811973,
            "displayName":"Syke",
            "reputation":1
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"are you trying to google for me?! or provide me with a resolution??"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7606968]-[-1672995080]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"are you trying to google for me?! or provide me with a resolution??"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "resolut":1,
                        "googl":1,
                        "provid":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7607076,
          "postId":6452362,
          "creationDate":"2011-06-24",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":7345,
            "displayName":"mindas",
            "reputation":16091
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Both projects do the same thing as you do - and they're not million lines long, so have a look at the source and see how they do it. If you don't like my answers, disregard them, but please show some respect for people who are trying to help you. This is just plain rude. If you want solution brought you on the plate, pay $ for commercial support."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7607076]-[146292766]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Both projects do the same thing as you do - and they're not million lines long, so have a look at the source and see how they do it. If you don't like my answers, disregard them, but please show some respect for people who are trying to help you. This is just plain rude. If you want solution brought you on the plate, pay $ for commercial support."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "support":1,
                        "plate":1,
                        "show":1,
                        "line":1,
                        "project":1,
                        "commerci":1,
                        "rude":1,
                        "thing":1,
                        "pay":1,
                        "disregard":1,
                        "plain":1,
                        "answer":1,
                        "brought":1,
                        "respect":1,
                        "million":1,
                        "peopl":1,
                        "sourc":1,
                        "solut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7577417,
          "postId":6452362,
          "creationDate":"2011-06-23",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":811973,
            "displayName":"Syke",
            "reputation":1
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I get my java process ID from the Java VirtualVM (jvirtualvm) and executing the one of the examples on the ThreadTop website, all I get is exceptions."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7577417]-[1314389844]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I get my java process ID from the Java VirtualVM (jvirtualvm) and executing the one of the examples on the ThreadTop website, all I get is exceptions."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ThreadTop",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "websit":1,
                        "process":1,
                        "exampl":1,
                        "virtual":1,
                        "thread":1,
                        "jvirtualvm":1,
                        "except":1,
                        "top":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ThreadTop",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7577724,
          "postId":6452362,
          "creationDate":"2011-06-23",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":7345,
            "displayName":"mindas",
            "reputation":16091
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"There's another similar project here: https://bitbucket.org/sindrit/jtop/"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7577724]-[-22680394]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"There's another similar project here: https://bitbucket.org/sindrit/jtop/"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jtop":1,
                        "similar":1,
                        "project":1,
                        "https":1,
                        "bitbucket":1,
                        "org":1,
                        "sindrit":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":7611161,
          "postId":6452362,
          "creationDate":"2011-06-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":811973,
            "displayName":"Syke",
            "reputation":1
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"you try to get your answer count higher by providing tools you have googled and not tried; and speaking of &quot;million lines long&quot;, it doesn't seem that my snipped code above hold &quot;million lines&quot;. instead of referring me to other implementations which you have never tried, try to explain why the code above isn't good."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[6452362-cu7611161]-[-1571047114]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"you try to get your answer count higher by providing tools you have googled and not tried; and speaking of &quot;million lines long&quot;, it doesn't seem that my snipped code above hold &quot;million lines&quot;. instead of referring me to other implementations which you have never tried, try to explain why the code above isn't good."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "provid":1,
                        "count":1,
                        "googl":1,
                        "explain":1,
                        "line":2,
                        "good":1,
                        "tool":1,
                        "higher":1,
                        "code":2,
                        "hold":1,
                        "snip":1,
                        "refer":1,
                        "isn":1,
                        "implement":1,
                        "answer":1,
                        "quot":4,
                        "million":2,
                        "speak":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-06-23",
      "lastActivityDate":"2011-06-23",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":7345,
        "displayName":"mindas",
        "reputation":16091
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Have a look at <a href=\"http://www.performize-it.com/tools/thread-top\"rel=\"nofollow\">Thread Top</a>, it's all done, no need to reinvent the wheel.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[6452362]-[1504647449]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Have a look at <a href=\"http://www.performize-it.com/tools/thread-top\"rel=\"nofollow\">Thread Top</a>, it's all done, no need to reinvent the wheel.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "reinvent":1,
                    "tool":1,
                    "rel":1,
                    "wheel":1,
                    "thread":2,
                    "nofollow":1,
                    "perform":1,
                    "href":1,
                    "http":1,
                    "top":2,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}