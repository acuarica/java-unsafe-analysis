{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":7118657,
    "title":"Is there a concept of &quot;pointers&quot; or &quot;unsafe code&quot; in Java?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":8529890,
        "postId":7118657,
        "creationDate":"2011-08-19",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":34218,
          "displayName":"Jason Coco",
          "reputation":57017
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Perhaps he was confusing C# and Java?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7118657-cu8529890]-[984574087]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Perhaps he was confusing C# and Java?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "confus":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":8529951,
        "postId":7118657,
        "creationDate":"2011-08-19",
        "score":10,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":125382,
          "displayName":"MAK",
          "reputation":13344
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"&quot;reputed&quot; guy just lost some reputation :)."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7118657-cu8529951]-[-94950654]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"&quot;reputed&quot; guy just lost some reputation :)."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "reput":2,
                      "quot":2,
                      "lost":1,
                      "guy":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":8536975,
        "postId":7118657,
        "creationDate":"2011-08-19",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":399317,
          "displayName":"Kos",
          "reputation":31989
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"&quot;Unsafe code&quot; exists in every language which has at least disk i/o, I'd say :)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7118657-cu8536975]-[-1849148800]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"&quot;Unsafe code&quot; exists in every language which has at least disk i/o, I'd say :)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "languag":1,
                      "exist":1,
                      "disk":1,
                      "code":1,
                      "quot":2,
                      "unsaf":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":8534791,
        "postId":7118657,
        "creationDate":"2011-08-19",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":19276,
          "displayName":"DJClayworth",
          "reputation":12633
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Can we get a name, so I can sell some shares?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7118657-cu8534791]-[-138153716]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Can we get a name, so I can sell some shares?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "share":1,
                      "sell":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "pointers"
    ],
    "creationDate":"2011-08-19",
    "lastActivityDate":"2013-06-13",
    "lastEditDate":"2013-06-13",
    "score":21,
    "viewCount":2156,
    "owner":{
      "type":"StackOverflowUser",
      "id":344788,
      "displayName":"ganguly.sarthak",
      "reputation":397
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Yesterday I was attending a talk by a CTO of a reputed European Company, and he told until recently he did not know that java has pointers . On confronting him he said he is absolutely sure about existance of pointers/unsafe code in java .</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[7118657]-[1670685434]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Yesterday I was attending a talk by a CTO of a reputed European Company, and he told until recently he did not know that java has pointers . On confronting him he said he is absolutely sure about existance of pointers/unsafe code in java .</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "pointer":2,
                  "exist":1,
                  "recent":1,
                  "european":1,
                  "confront":1,
                  "talk":1,
                  "told":1,
                  "cto":1,
                  "code":1,
                  "yesterday":1,
                  "reput":1,
                  "absolut":1,
                  "unsaf":1,
                  "attend":1,
                  "compani":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I did google a lot after that but could't find anything similar . </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[7118657]-[775304914]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I did google a lot after that but could't find anything similar . </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "similar":1,
                  "googl":1,
                  "find":1,
                  "lot":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Any clue ?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[7118657]-[136489847]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Any clue ?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "clue":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":7118683,
      "questionId":7118657,
      "comments":[
        
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":791998,
        "displayName":"Petar Ivanov",
        "reputation":31847
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can call native functions in Java (<a href=\"http://en.wikipedia.org/wiki/Java_Native_Interface\"rel=\"nofollow\">JNI</a>), so in this sense you can use pointers. But other than that - no, there are no pointers in Java.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118683]-[-655826302]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can call native functions in Java (<a href=\"http://en.wikipedia.org/wiki/Java_Native_Interface\"rel=\"nofollow\">JNI</a>), so in this sense you can use pointers. But other than that - no, there are no pointers in Java.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "sens":1,
                    "pointer":2,
                    "rel":1,
                    "jni":1,
                    "wikipedia":1,
                    "nofollow":1,
                    "function":1,
                    "wiki":1,
                    "org":1,
                    "href":1,
                    "http":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118688,
      "questionId":7118657,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":8530087,
          "postId":7118688,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Look at the answer from @Sean Patrick Floyd . That might be what he was talking about."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118688-cu8530087]-[452946608]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Look at the answer from @Sean Patrick Floyd . That might be what he was talking about."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Sean",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "floyd":1,
                        "talk":1,
                        "patrick":1,
                        "sean":1,
                        "answer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "score":12,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":315168,
        "displayName":"Mikko Ohtamaa",
        "reputation":24212
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are no pointers in Java, only safe references. Unfortunately your highly reputed CTO was wrong.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118688]-[1612054895]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are no pointers in Java, only safe references. Unfortunately your highly reputed CTO was wrong.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":1,
                    "wrong":1,
                    "safe":1,
                    "cto":1,
                    "reput":1,
                    "refer":1,
                    "high":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Unsafe code is integrated through JNI.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118688]-[-1404415169]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Unsafe code is integrated through JNI.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "integr":1,
                    "unsaf":1,
                    "jni":1,
                    "code":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><a href=\"http://en.wikipedia.org/wiki/Java_Native_Interface\"rel=\"nofollow\">http://en.wikipedia.org/wiki/Java_Native_Interface</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118688]-[155105604]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><a href=\"http://en.wikipedia.org/wiki/Java_Native_Interface\"rel=\"nofollow\">http://en.wikipedia.org/wiki/Java_Native_Interface</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"_Native_Interface",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "rel":1,
                    "wikipedia":2,
                    "nofollow":1,
                    "wiki":2,
                    "org":2,
                    "href":1,
                    "http":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118929,
      "questionId":7118657,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":8532241,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":839601,
            "displayName":"gnat",
            "reputation":5602
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Mike _definition of 'pointer'_ -- looks like finding an agreed definition is the key; without it endless pointers-in-Java discussions sound apples vs oranges to me. How would you define a pointer? Would [Wikipedia atricle](http://en.wikipedia.org/wiki/Pointer_%28computing%29) do?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8532241]-[-888850912]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Mike _definition of 'pointer'_ -- looks like finding an agreed definition is the key; without it endless pointers-in-Java discussions sound apples vs oranges to me. How would you define a pointer? Would [Wikipedia atricle](http://en.wikipedia.org/wiki/Pointer_%28computing%29) do?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Mike",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_definition",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "find":1,
                        "atricl":1,
                        "orang":1,
                        "pointer":4,
                        "appl":1,
                        "key":1,
                        "discuss":1,
                        "wikipedia":2,
                        "comput":1,
                        "definit":2,
                        "sound":1,
                        "agre":1,
                        "wiki":1,
                        "defin":1,
                        "org":1,
                        "http":1,
                        "mike":1,
                        "endless":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8532721,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":135589,
            "displayName":"Jesper",
            "reputation":75700
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Mike My point is: don't call it *pointer* when you're talking about something else than explicit pointers as in C or C++, but that's what people think you mean when you use the word *pointer*."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8532721]-[552881433]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Mike My point is: don't call it *pointer* when you're talking about something else than explicit pointers as in C or C++, but that's what people think you mean when you use the word *pointer*."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Mike",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "point":1,
                        "pointer":3,
                        "talk":1,
                        "explicit":1,
                        "peopl":1,
                        "call":1,
                        "word":1,
                        "mike":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8532807,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":375498,
            "displayName":"akira",
            "reputation":940
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I'm not 100% sure how authoritative Wikipedia really is. I've seen articles that for years said A and were then changed to say B, with B the opposite of A. The current Wikipedia article is fairly clear though that a 'pointer' MUST contain an actual memory address. Everything else is called either 'index', 'reference' or something else entirely. If you make a C implementation that is run on a VM, where malloc returns a number that represents an ID, then suddenly the exact same source code compiled for that VM does not have pointers anymore, but references?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8532807]-[1410065852]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I'm not 100% sure how authoritative Wikipedia really is. I've seen articles that for years said A and were then changed to say B, with B the opposite of A. The current Wikipedia article is fairly clear though that a 'pointer' MUST contain an actual memory address. Everything else is called either 'index', 'reference' or something else entirely. If you make a C implementation that is run on a VM, where malloc returns a number that represents an ID, then suddenly the exact same source code compiled for that VM does not have pointers anymore, but references?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "number":1,
                        "chang":1,
                        "fair":1,
                        "pointer":2,
                        "return":1,
                        "clear":1,
                        "malloc":1,
                        "run":1,
                        "year":1,
                        "articl":2,
                        "exact":1,
                        "code":1,
                        "anymor":1,
                        "wikipedia":2,
                        "opposit":1,
                        "refer":2,
                        "implement":1,
                        "address":1,
                        "make":1,
                        "compil":1,
                        "actual":1,
                        "current":1,
                        "authorit":1,
                        "call":1,
                        "sourc":1,
                        "repres":1,
                        "sudden":1,
                        "index":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8533310,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":309412,
            "displayName":"Lie Ryan",
            "reputation":27458
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The definition of pointer that I always uses: pointer points to an area in memory, reference points to an object. It is possible to multiply two pointer (although it makes no sense, really), you simply cast it into an integer first, then back again. It is impossible to do any sort of &quot;reference arithmetic&quot;, since you can't turn a reference into an address and **back into object again**."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8533310]-[-15615997]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The definition of pointer that I always uses: pointer points to an area in memory, reference points to an object. It is possible to multiply two pointer (although it makes no sense, really), you simply cast it into an integer first, then back again. It is impossible to do any sort of &quot;reference arithmetic&quot;, since you can't turn a reference into an address and **back into object again**."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sens":1,
                        "area":1,
                        "point":2,
                        "pointer":3,
                        "imposs":1,
                        "multipli":1,
                        "object":2,
                        "cast":1,
                        "simpli":1,
                        "arithmet":1,
                        "definit":1,
                        "back":2,
                        "refer":3,
                        "turn":1,
                        "address":1,
                        "make":1,
                        "quot":2,
                        "sort":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8533340,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":309412,
            "displayName":"Lie Ryan",
            "reputation":27458
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@akira: nowadays, unless you're programming an OS kernel, the address that you get are probably not the real memory address, they're virtual memory address."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8533340]-[-392492815]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@akira: nowadays, unless you're programming an OS kernel, the address that you get are probably not the real memory address, they're virtual memory address."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "kernel":1,
                        "real":1,
                        "akira":1,
                        "virtual":1,
                        "nowaday":1,
                        "address":3,
                        "memori":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530290,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Need one clarification . You are saying that in java only pass by value happens . But if that is the case then static variables or classes cannot be passed by value , right ? Because every calling method need to update the same reference . Correct me if I am wrong ."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8530290]-[686708277]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Need one clarification . You are saying that in java only pass by value happens . But if that is the case then static variables or classes cannot be passed by value , right ? Because every calling method need to update the same reference . Correct me if I am wrong ."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "wrong":1,
                        "correct":1,
                        "updat":1,
                        "refer":1,
                        "pass":2,
                        "class":1,
                        "variabl":1,
                        "call":1,
                        "clarif":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530429,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"In case of a static variable, it's a simple pointer again. The variable is static, but it holds a pointer to a normal heap allocated object. This same pointer can be passed around and assigned to non-static variables. There's nothing special about it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8530429]-[-1571065760]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"In case of a static variable, it's a simple pointer again. The variable is static, but it holds a pointer to a normal heap allocated object. This same pointer can be passed around and assigned to non-static variables. There's nothing special about it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "simpl":1,
                        "alloc":1,
                        "pointer":3,
                        "normal":1,
                        "assign":1,
                        "object":1,
                        "hold":1,
                        "pass":1,
                        "heap":1,
                        "special":1,
                        "variabl":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530461,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":135589,
            "displayName":"Jesper",
            "reputation":75700
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Java does not have explicit *pointers* like in C or C++, that you can make to point to any place in memory. Java has *references* instead of *pointers*. Sure, those are essentially the same at a low level, but saying that Java has pointers is confusing and misleading, especially for people who know what pointers are in C and C++."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8530461]-[-961565192]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Java does not have explicit *pointers* like in C or C++, that you can make to point to any place in memory. Java has *references* instead of *pointers*. Sure, those are essentially the same at a low level, but saying that Java has pointers is confusing and misleading, especially for people who know what pointers are in C and C++."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "point":1,
                        "pointer":4,
                        "low":1,
                        "refer":1,
                        "make":1,
                        "mislead":1,
                        "place":1,
                        "confus":1,
                        "explicit":1,
                        "peopl":1,
                        "essenti":1,
                        "level":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530829,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":4,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Jesper, that is another kind of discussion. Does the official definition of 'pointer' necessarily include *has* to point to real memory where an object happens to be allocated, or is it more abstract 'point to object'? What does real memory even mean in the context of virtual address spaces and virtual machines? Adfitionally, does a pointer stop being a pointer when arithmatic on it is disallowed? Note that in C you can't multiply two pointers. Are they lesser pointers than those in a system that would allow this?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8530829]-[-1098355103]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Jesper, that is another kind of discussion. Does the official definition of 'pointer' necessarily include *has* to point to real memory where an object happens to be allocated, or is it more abstract 'point to object'? What does real memory even mean in the context of virtual address spaces and virtual machines? Adfitionally, does a pointer stop being a pointer when arithmatic on it is disallowed? Note that in C you can't multiply two pointers. Are they lesser pointers than those in a system that would allow this?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "point":2,
                        "alloc":1,
                        "system":1,
                        "real":2,
                        "pointer":5,
                        "offici":1,
                        "arithmat":1,
                        "context":1,
                        "stop":1,
                        "virtual":2,
                        "multipli":1,
                        "object":2,
                        "includ":1,
                        "discuss":1,
                        "space":1,
                        "machin":1,
                        "note":1,
                        "definit":1,
                        "address":1,
                        "lesser":1,
                        "necessarili":1,
                        "kind":1,
                        "jesper":1,
                        "adfit":1,
                        "disallow":1,
                        "memori":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8550542,
          "postId":7118929,
          "creationDate":"2011-08-20",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Agreed, no pointer arithmetic in Java, but is the ability to be involved in arithmetic a strong requirement in the definition of a pointer?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8550542]-[-1255593647]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Agreed, no pointer arithmetic in Java, but is the ability to be involved in arithmetic a strong requirement in the definition of a pointer?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "involv":1,
                        "pointer":2,
                        "requir":1,
                        "strong":1,
                        "arithmet":2,
                        "definit":1,
                        "abil":1,
                        "agre":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8535751,
          "postId":7118929,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":505088,
            "displayName":"David Heffernan",
            "reputation":334242
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"You can't do pointer arithmetic and that's the sense on the question. Java doesn't have pointers in that sense."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118929-cu8535751]-[-1133753273]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"You can't do pointer arithmetic and that's the sense on the question. Java doesn't have pointers in that sense."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "arithmet":1,
                        "pointer":2,
                        "sens":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "lastEditDate":"2011-08-19",
      "score":8,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":782381,
        "displayName":"Mike Braun",
        "reputation":2880
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Java has pointers.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[814504895]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Java has pointers.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The confusion whether Java has pointers or not is strongly related to the discussion whether Java is call by reference or call by value.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[1528657566]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The confusion whether Java has pointers or not is strongly related to the discussion whether Java is call by reference or call by value.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":1,
                    "relat":1,
                    "strong":1,
                    "discuss":1,
                    "refer":1,
                    "confus":1,
                    "call":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Uninformed people think that Java has no pointers, and since a method can change an object that's passed in with the effects of this change vissible to the caller, they reason it must be call by reference.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[601287987]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Uninformed people think that Java has no pointers, and since a method can change an object that's passed in with the effects of this change vissible to the caller, they reason it must be call by reference.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":2,
                    "method":1,
                    "pointer":1,
                    "effect":1,
                    "reason":1,
                    "object":1,
                    "uninform":1,
                    "vissibl":1,
                    "refer":1,
                    "pass":1,
                    "peopl":1,
                    "call":1,
                    "caller":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This is not correct however.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[-1466240254]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This is not correct however.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "correct":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>What happens is that in Java <em>pointers are passed by value</em>. There are no other kinds of variables in Java for objects than pointer variables and there is no call by reference.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[1691582498]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>What happens is that in Java <em>pointers are passed by value</em>. There are no other kinds of variables in Java for objects than pointer variables and there is no call by reference.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":2,
                    "object":1,
                    "refer":1,
                    "pass":1,
                    "kind":1,
                    "variabl":2,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The &quot;unsafe&quot; story is quite something else. This normally is distinct from the question of whether Java has pointers or not. Java's pointers are safe; they point to objects and using the normal language constructs they can not be manipulated to point to arbitrary memory locations.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[-453169398]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The &quot;unsafe&quot; story is quite something else. This normally is distinct from the question of whether Java has pointers or not. Java's pointers are safe; they point to objects and using the normal language constructs they can not be manipulated to point to arbitrary memory locations.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "languag":1,
                    "point":2,
                    "arbitrari":1,
                    "pointer":2,
                    "normal":1,
                    "manipul":1,
                    "safe":1,
                    "stori":1,
                    "object":1,
                    "distinct":1,
                    "quot":2,
                    "unsaf":1,
                    "construct":1,
                    "locat":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There is however JNI, but then native code does potentially unsafe things, not Java code.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[-1512717633]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There is however JNI, but then native code does potentially unsafe things, not Java code.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "potenti":1,
                    "thing":1,
                    "code":2,
                    "jni":1,
                    "unsaf":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There is also Real-time Java (jsr-1), where you absolutely can get access to specific memory locations in your system. This however is a very specific and rather rare version of Java that's mostly used for embedded purposes. If this was meant I guess it would have been explicitly mentioned.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118929]-[-410906829]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There is also Real-time Java (jsr-1), where you absolutely can get access to specific memory locations in your system. This however is a very specific and rather rare version of Java that's mostly used for embedded purposes. If this was meant I guess it would have been explicitly mentioned.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "system":1,
                    "real":1,
                    "jsr":1,
                    "embed":1,
                    "meant":1,
                    "version":1,
                    "mention":1,
                    "rare":1,
                    "specif":2,
                    "absolut":1,
                    "time":1,
                    "guess":1,
                    "explicit":1,
                    "purpos":1,
                    "locat":1,
                    "access":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118920,
      "questionId":7118657,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":8530193,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The address of and dereferencing operators are absent because Java only has pointer variables. These operators only make sense in a language that has both pointer- and stack ('automatic') variables to convert between the two."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530193]-[-1826685583]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The address of and dereferencing operators are absent because Java only has pointer variables. These operators only make sense in a language that has both pointer- and stack ('automatic') variables to convert between the two."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sens":1,
                        "languag":1,
                        "pointer":2,
                        "dereferenc":1,
                        "absent":1,
                        "oper":2,
                        "automat":1,
                        "stack":1,
                        "address":1,
                        "make":1,
                        "variabl":2,
                        "convert":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530320,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Mike . Can you please explain this in bit details &quot;These operators only make sense in a language that has both pointer- and stack ('automatic') variables to convert between the two&quot; . This part went whooosh !!!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530320]-[674351662]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Mike . Can you please explain this in bit details &quot;These operators only make sense in a language that has both pointer- and stack ('automatic') variables to convert between the two&quot; . This part went whooosh !!!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Mike",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sens":1,
                        "languag":1,
                        "bit":1,
                        "whooosh":1,
                        "pointer":1,
                        "explain":1,
                        "oper":1,
                        "automat":1,
                        "stack":1,
                        "make":1,
                        "quot":2,
                        "detail":1,
                        "part":1,
                        "variabl":1,
                        "mike":1,
                        "convert":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530347,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":702048,
            "displayName":"Alberto Solano",
            "reputation":3766
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Mike Braun Thank you for the clarification. For 'automatic', I meant the operation is hidden to user, I forgot to write it. I will edit my answer adding this detail. :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530347]-[-809931828]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Mike Braun Thank you for the clarification. For 'automatic', I meant the operation is hidden to user, I forgot to write it. I will edit my answer adding this detail. :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Mike",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "hidden":1,
                        "braun":1,
                        "meant":1,
                        "oper":1,
                        "edit":1,
                        "automat":1,
                        "forgot":1,
                        "answer":1,
                        "ad":1,
                        "detail":1,
                        "mike":1,
                        "user":1,
                        "write":1,
                        "clarif":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530582,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":702048,
            "displayName":"Alberto Solano",
            "reputation":3766
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Mike Braun Sorry but reading your comment another time, I think that saying Java only has pointer variables is a kind of mistake. I never heard that Java has pointer variables. Maybe you can say that Java has no explicit management pointer, because this is hidden to user, only references. I have written programs in C, and in Java I never see, so far, operation like &amp;pointer, or *pointer."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530582]-[841818177]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Mike Braun Sorry but reading your comment another time, I think that saying Java only has pointer variables is a kind of mistake. I never heard that Java has pointer variables. Maybe you can say that Java has no explicit management pointer, because this is hidden to user, only references. I have written programs in C, and in Java I never see, so far, operation like &amp;pointer, or *pointer."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Mike",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "program":1,
                        "heard":1,
                        "pointer":5,
                        "hidden":1,
                        "braun":1,
                        "amp":1,
                        "oper":1,
                        "mistak":1,
                        "comment":1,
                        "written":1,
                        "refer":1,
                        "time":1,
                        "kind":1,
                        "variabl":2,
                        "explicit":1,
                        "manag":1,
                        "mike":1,
                        "user":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530637,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"'Automatic' is a specific term in C++ to refer to non-pointer variables. The 'automatic' comes from the fact that stack allocated objects are automatically destroyed when they fall out of scope. This is not related to the automatic referencing and dereferencing in Java. In fact '.' in Java is simply '-&gt;' in C++ and Foo in Java is 'Foo*' in C++. Since in C++ terms, Java does not have 'Foo', they simplified 'Foo*' to 'Foo'. Easy for people who only ever use Java, very confusing for everyone else."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530637]-[-1014706487]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"'Automatic' is a specific term in C++ to refer to non-pointer variables. The 'automatic' comes from the fact that stack allocated objects are automatically destroyed when they fall out of scope. This is not related to the automatic referencing and dereferencing in Java. In fact '.' in Java is simply '-&gt;' in C++ and Foo in Java is 'Foo*' in C++. Since in C++ terms, Java does not have 'Foo', they simplified 'Foo*' to 'Foo'. Easy for people who only ever use Java, very confusing for everyone else."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "easi":1,
                        "alloc":1,
                        "pointer":1,
                        "relat":1,
                        "simplifi":1,
                        "scope":1,
                        "dereferenc":1,
                        "term":2,
                        "object":1,
                        "fall":1,
                        "fact":2,
                        "automat":4,
                        "destroy":1,
                        "simpli":1,
                        "specif":1,
                        "refer":1,
                        "stack":1,
                        "confus":1,
                        "variabl":1,
                        "peopl":1,
                        "referenc":1,
                        "foo":5
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530666,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":702048,
            "displayName":"Alberto Solano",
            "reputation":3766
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"In addition, this is what Oracle declared about Java features, in particular &quot;No more pointers&quot;,paragraph 2.2.9 of this link: http://java.sun.com/docs/white/langenv/Simple.doc2.html"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530666]-[1035852626]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"In addition, this is what Oracle declared about Java features, in particular &quot;No more pointers&quot;,paragraph 2.2.9 of this link: http://java.sun.com/docs/white/langenv/Simple.doc2.html"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "langenv":1,
                        "simpl":1,
                        "pointer":1,
                        "addit":1,
                        "sun":1,
                        "oracl":1,
                        "doc":2,
                        "declar":1,
                        "paragraph":1,
                        "link":1,
                        "quot":2,
                        "featur":1,
                        "html":1,
                        "http":1,
                        "white":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530880,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":782381,
            "displayName":"Mike Braun",
            "reputation":2880
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The Sun 'no pointers' claim was largely marketing. C++ was seen as difficult because of pointers. Since Java was to be the easy variant of C++ they had to say it did not have pointers."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8530880]-[-1300652848]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The Sun 'no pointers' claim was largely marketing. C++ was seen as difficult because of pointers. Since Java was to be the easy variant of C++ they had to say it did not have pointers."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "claim":1,
                        "market":1,
                        "easi":1,
                        "pointer":3,
                        "sun":1,
                        "variant":1,
                        "larg":1,
                        "difficult":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8531175,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":702048,
            "displayName":"Alberto Solano",
            "reputation":3766
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes, this is marketing. I can tell you only that Java references is similar to C/C++ pointer at low level, like you said, but the management in Java is completely different from C/C++, because the programmer doesn't need to worry about pointer operations. This is the discussion. Java is different from C/C++ because has different management."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8531175]-[353397119]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes, this is marketing. I can tell you only that Java references is similar to C/C++ pointer at low level, like you said, but the management in Java is completely different from C/C++, because the programmer doesn't need to worry about pointer operations. This is the discussion. Java is different from C/C++ because has different management."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "market":1,
                        "pointer":2,
                        "similar":1,
                        "oper":1,
                        "discuss":1,
                        "low":1,
                        "programm":1,
                        "refer":1,
                        "complet":1,
                        "worri":1,
                        "manag":2,
                        "level":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8531255,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":702048,
            "displayName":"Alberto Solano",
            "reputation":3766
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Look at the answer of krishna moorthy. I agree with what is written in it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8531255]-[208190752]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Look at the answer of krishna moorthy. I agree with what is written in it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "krishna":1,
                        "written":1,
                        "agre":1,
                        "answer":1,
                        "moorthi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8534543,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":815409,
            "displayName":"Giorgio",
            "reputation":1930
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Not only need the programmers not worry about the pointers (pointers are used in the background to implement Java references), but they cannot assign a reference a specific address in memory and the dereference it in the same way as you can do it in C/C++. I agree that Java has no pointers."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8534543]-[176627829]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Not only need the programmers not worry about the pointers (pointers are used in the background to implement Java references), but they cannot assign a reference a specific address in memory and the dereference it in the same way as you can do it in C/C++. I agree that Java has no pointers."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "pointer":3,
                        "derefer":1,
                        "background":1,
                        "assign":1,
                        "specif":1,
                        "programm":1,
                        "refer":2,
                        "implement":1,
                        "address":1,
                        "agre":1,
                        "worri":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8535131,
          "postId":7118920,
          "creationDate":"2011-08-19",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":375498,
            "displayName":"akira",
            "reputation":940
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The question is whether the concept of pointer is defined by how C/C++ does things. Is 'memory address' an essential part of the concept pointer, or do pointers happen to be implemented in C/C++ via a memory address? Does the C++ spec requires pointers to be memory addresses?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118920-cu8535131]-[577069395]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The question is whether the concept of pointer is defined by how C/C++ does things. Is 'memory address' an essential part of the concept pointer, or do pointers happen to be implemented in C/C++ via a memory address? Does the C++ spec requires pointers to be memory addresses?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "pointer":4,
                        "happen":1,
                        "requir":1,
                        "thing":1,
                        "implement":1,
                        "spec":1,
                        "address":3,
                        "concept":2,
                        "part":1,
                        "defin":1,
                        "essenti":1,
                        "memori":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "lastEditDate":"2011-08-19",
      "score":6,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":702048,
        "displayName":"Alberto Solano",
        "reputation":3766
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Java has no pointers, only references to objects. A reference is similar to a pointer, because it points to a variable, an object, but you cannot view or edit the address memory of this reference, which you can do in C.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118920]-[1367631427]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Java has no pointers, only references to objects. A reference is similar to a pointer, because it points to a variable, an object, but you cannot view or edit the address memory of this reference, which you can do in C.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "point":1,
                    "pointer":2,
                    "similar":1,
                    "object":2,
                    "edit":1,
                    "refer":3,
                    "address":1,
                    "variabl":1,
                    "view":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Another thing. In C, you can manage pointers with the referencing/dereferencing operation, putting a * first of the name of pointer. In Java, this operation, referencing/dereferencing, is completely absent, because it's totally automatic, hidden to the user.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118920]-[-816961992]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Another thing. In C, you can manage pointers with the referencing/dereferencing operation, putting a * first of the name of pointer. In Java, this operation, referencing/dereferencing, is completely absent, because it's totally automatic, hidden to the user.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":2,
                    "dereferenc":2,
                    "absent":1,
                    "hidden":1,
                    "thing":1,
                    "total":1,
                    "oper":2,
                    "automat":1,
                    "put":1,
                    "complet":1,
                    "manag":1,
                    "referenc":2,
                    "user":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Other info on <a href=\"http://en.wikipedia.org/wiki/Pointer_%28computing%29\"rel=\"nofollow\">Wikipedia</a> and <a href=\"http://java.sun.com/docs/white/langenv/Simple.doc2.html\"rel=\"nofollow\">Oracle</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118920]-[562580346]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Other info on <a href=\"http://en.wikipedia.org/wiki/Pointer_%28computing%29\"rel=\"nofollow\">Wikipedia</a> and <a href=\"http://java.sun.com/docs/white/langenv/Simple.doc2.html\"rel=\"nofollow\">Oracle</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "langenv":1,
                    "simpl":1,
                    "pointer":1,
                    "sun":1,
                    "rel":2,
                    "oracl":1,
                    "doc":2,
                    "info":1,
                    "wikipedia":2,
                    "comput":1,
                    "nofollow":2,
                    "wiki":1,
                    "org":1,
                    "html":1,
                    "href":2,
                    "http":2,
                    "white":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118725,
      "questionId":7118657,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":8530074,
          "postId":7118725,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"After some more googling this is also what I came across . This might ve what he was talking about . Looking into the api now ."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118725-cu8530074]-[-116794115]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"After some more googling this is also what I came across . This might ve what he was talking about . Looking into the api now ."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "googl":1,
                        "talk":1,
                        "api":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530092,
          "postId":7118725,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":342852,
            "displayName":"Sean Patrick Floyd",
            "reputation":122619
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@ganguly look at it but don't use it. It's an internal API you should stay clear of. You can see it in action if you loo at the sources of `AtomicBoolean` and the other `Atomic*` classes in the same package."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118725-cu8530092]-[-406365114]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@ganguly look at it but don't use it. It's an internal API you should stay clear of. You can see it in action if you loo at the sources of `AtomicBoolean` and the other `Atomic*` classes in the same package."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"AtomicBoolean",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "ganguli":1,
                        "clear":1,
                        "loo":1,
                        "class":1,
                        "stay":1,
                        "atom":2,
                        "api":1,
                        "sourc":1,
                        "intern":1,
                        "action":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"AtomicBoolean",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530413,
          "postId":7118725,
          "creationDate":"2011-08-19",
          "score":3,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":135589,
            "displayName":"Jesper",
            "reputation":75700
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Note that the `sun.misc.Unsafe` class is not a public class in the Java API; it might not (and probably does not) exist in other JVM implementations than Oracle's - so don't use it if you want your program to stay independent of the specific JVM implementation you're using."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118725-cu8530413]-[1901560829]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Note that the `sun.misc.Unsafe` class is not a public class in the Java API; it might not (and probably does not) exist in other JVM implementations than Oracle's - so don't use it if you want your program to stay independent of the specific JVM implementation you're using."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"sun",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"misc",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Unsafe",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"is",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"in",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"LocalVariableDeclarationStatementNode",
                        "modifiers":[
                          
                        ],
                        "declarators":{
                          "type":"VariableDeclaratorsNode",
                          "declarators":[
                            {
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"API",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ],
                              "varType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Java",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":2,
                        "program":1,
                        "exist":1,
                        "sun":1,
                        "oracl":1,
                        "independ":1,
                        "note":1,
                        "specif":1,
                        "implement":2,
                        "misc":1,
                        "stay":1,
                        "api":1,
                        "unsaf":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"sun",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"misc",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Unsafe",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Java",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"API",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Java",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":8530447,
          "postId":7118725,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Will not use in production . But trying to have some fun with it . Not successful till now .. proving quite difficult to even import it due to security restrictions .:("
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118725-cu8530447]-[-356249955]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Will not use in production . But trying to have some fun with it . Not successful till now .. proving quite difficult to even import it due to security restrictions .:("
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "due":1,
                        "prove":1,
                        "till":1,
                        "success":1,
                        "secur":1,
                        "difficult":1,
                        "fun":1,
                        "restrict":1,
                        "product":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "lastEditDate":"2011-08-19",
      "score":16,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":342852,
        "displayName":"Sean Patrick Floyd",
        "reputation":122619
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There's a class called <a href=\"http://www.docjar.com/docs/api/sun/misc/Unsafe.html\"><code>sun.misc.Unsafe</code></a>, that much is true. But it doesn't use pointers in Java code (because Java has no pointers, although I agree that java references are similar in concept), most of it is implemented using native code.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118725]-[598012353]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There's a class called <a href=\"http://www.docjar.com/docs/api/sun/misc/Unsafe.html\"><code>sun.misc.Unsafe</code></a>, that much is true. But it doesn't use pointers in Java code (because Java has no pointers, although I agree that java references are similar in concept), most of it is implemented using native code.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"called",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":2,
                    "docjar":1,
                    "similar":1,
                    "sun":2,
                    "doc":1,
                    "code":4,
                    "refer":1,
                    "implement":1,
                    "misc":2,
                    "true":1,
                    "agre":1,
                    "concept":1,
                    "api":1,
                    "unsaf":2,
                    "html":1,
                    "href":1,
                    "http":1,
                    "call":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>As I mentioned in the comments, this is not part of the public API and shouldn't be used by client code. However, you can see it at work when you look at the sources of the <code>Atomic*</code> classes in <a href=\"http://download.oracle.com/javase/6/docs/api/index.html?java/util/concurrent/atomic/package-summary.html\">the <code>java.util.concurrent.atomic</code> package</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118725]-[1375391664]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>As I mentioned in the comments, this is not part of the public API and shouldn't be used by client code. However, you can see it at work when you look at the sources of the <code>Atomic*</code> classes in <a href=\"http://download.oracle.com/javase/6/docs/api/index.html?java/util/concurrent/atomic/package-summary.html\">the <code>java.util.concurrent.atomic</code> package</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "concurr":2,
                    "util":2,
                    "summari":1,
                    "oracl":1,
                    "doc":1,
                    "work":1,
                    "code":5,
                    "mention":1,
                    "client":1,
                    "comment":1,
                    "javas":1,
                    "class":1,
                    "atom":3,
                    "api":2,
                    "part":1,
                    "html":2,
                    "href":1,
                    "shouldn":1,
                    "http":1,
                    "sourc":1,
                    "download":1,
                    "index":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118881,
      "questionId":7118657,
      "comments":[
        
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":644958,
        "displayName":"alvi",
        "reputation":816
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>He may have a slight confusion with call-by-value and call-by-reference. If he comes from C, he may think that call-by-reference is equal to a pointer. Just a guess.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118881]-[521752074]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>He may have a slight confusion with call-by-value and call-by-reference. If he comes from C, he may think that call-by-reference is equal to a pointer. Just a guess.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pointer":1,
                    "slight":1,
                    "equal":1,
                    "refer":2,
                    "confus":1,
                    "guess":1,
                    "call":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7118764,
      "questionId":7118657,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":8530151,
          "postId":7118764,
          "creationDate":"2011-08-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":344788,
            "displayName":"ganguly.sarthak",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"What you are saying is absolutely correct , but I do not think that was the case . Because he is a security guy and was talking from the perspective of writing unsafe code in java like what you can do with pointers in C. I think sun.misc.Unsafe is the package he was talking about. Take a look"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7118764-cu8530151]-[-309997903]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"What you are saying is absolutely correct , but I do not think that was the case . Because he is a security guy and was talking from the perspective of writing unsafe code in java like what you can do with pointers in C. I think sun.misc.Unsafe is the package he was talking about. Take a look"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"sun",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"misc",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Unsafe",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "guy":1,
                        "pointer":1,
                        "correct":1,
                        "sun":1,
                        "talk":2,
                        "secur":1,
                        "code":1,
                        "perspect":1,
                        "misc":1,
                        "absolut":1,
                        "unsaf":2,
                        "write":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"sun",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"misc",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Unsafe",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-08-19",
      "lastActivityDate":"2011-08-19",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":779102,
        "displayName":"Krishna Moorthy Seetha Raman",
        "reputation":108
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Pointer is the concept of pointing to the reference. In C and C++ you could access the pointer explicitly but in java we use reference to point the objects. For example If you are passing the an instance to a method, Its reference passing we know but ultimately pointer is passed. when you change state of the instance within the method it reflects when that instance is used after the completing the method call.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118764]-[1131695438]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Pointer is the concept of pointing to the reference. In C and C++ you could access the pointer explicitly but in java we use reference to point the objects. For example If you are passing the an instance to a method, Its reference passing we know but ultimately pointer is passed. when you change state of the instance within the method it reflects when that instance is used after the completing the method call.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "method":3,
                    "point":2,
                    "pointer":3,
                    "state":1,
                    "object":1,
                    "refer":3,
                    "pass":3,
                    "concept":1,
                    "ultim":1,
                    "complet":1,
                    "explicit":1,
                    "call":1,
                    "reflect":1,
                    "instanc":3,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>We use reference in java which is pointer with respect to JVM.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118764]-[189794012]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>We use reference in java which is pointer with respect to JVM.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "refer":1,
                    "jvm":1,
                    "pointer":1,
                    "respect":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>When we use new operator it create the instance in heap and returns the address to the reference its pointing.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118764]-[699183958]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>When we use new operator it create the instance in heap and returns the address to the reference its pointing.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "point":1,
                    "return":1,
                    "oper":1,
                    "refer":1,
                    "address":1,
                    "heap":1,
                    "creat":1,
                    "instanc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I believe this would answer your question if not you could comment on my answer.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7118764]-[-185522276]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I believe this would answer your question if not you could comment on my answer.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "comment":1,
                    "question":1,
                    "answer":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}