{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":8086463,
    "title":"Finding the cause for waiting/sleeping threads",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":9911453,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":286149,
          "displayName":"Timo",
          "reputation":2825
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"What does that mean? What queue and what does that method `take()` do?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911453]-[-445582307]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"What does that mean? What queue and what does that method `take()` do?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "method":1,
                      "queue":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911430,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":302916,
          "displayName":"Brian Roach",
          "reputation":46069
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Um, they're blocking on a queue. Specifically, `LinkedBlockingQueue.take()` which blocks indefinitely when a queue is empty."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911430]-[-407277717]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Um, they're blocking on a queue. Specifically, `LinkedBlockingQueue.take()` which blocks indefinitely when a queue is empty."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "queue":3,
                      "block":3,
                      "link":1,
                      "specif":1,
                      "empti":1,
                      "indefinit":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911473,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":302916,
          "displayName":"Brian Roach",
          "reputation":46069
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Erm, it's your code ... we're not psychic. Just telling you exactly what the thread dump is telling you."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911473]-[1977323858]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Erm, it's your code ... we're not psychic. Just telling you exactly what the thread dump is telling you."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "psychic":1,
                      "dump":1,
                      "code":1,
                      "thread":1,
                      "tell":2,
                      "erm":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911488,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":286149,
          "displayName":"Timo",
          "reputation":2825
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"? I didn't write java.util.* for sure."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911488]-[261918367]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"? I didn't write java.util.* for sure."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "write":1,
                      "util":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911560,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":302916,
          "displayName":"Brian Roach",
          "reputation":46069
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"You have a thread. It's using a blocking queue. That queue is empty. Your thread is blocking trying to read from it because it is empty. It will block there forever unless something is added to the queue. We can not see your code. Without your code no one can help you beyond that."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911560]-[469599289]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"You have a thread. It's using a blocking queue. That queue is empty. Your thread is blocking trying to read from it because it is empty. It will block there forever unless something is added to the queue. We can not see your code. Without your code no one can help you beyond that."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "read":1,
                      "queue":3,
                      "code":2,
                      "block":3,
                      "thread":2,
                      "empti":2,
                      "ad":1,
                      "forev":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911581,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":286149,
          "displayName":"Timo",
          "reputation":2825
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Mh, I just understood that `Collection implements LinkedBlockingQueue` so it's possible that a list or other collection is trying to call `take()` but it can't (for some reason) and thus the thread is blocked.. right?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911581]-[-748661968]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Mh, I just understood that `Collection implements LinkedBlockingQueue` so it's possible that a list or other collection is trying to call `take()` but it can't (for some reason) and thus the thread is blocked.. right?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"InterfaceRelationshipNode",
                      "typeName":{
                        "type":"IdentifierNode",
                        "name":"Collection",
                        "comments":[
                          
                        ]
                      },
                      "superTypeName":{
                        "type":"IdentifierNode",
                        "name":"LinkedBlockingQueue",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "queue":1,
                      "reason":1,
                      "understood":1,
                      "block":2,
                      "thread":1,
                      "link":1,
                      "collect":2,
                      "call":1,
                      "list":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911646,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":286149,
          "displayName":"Timo",
          "reputation":2825
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@BrianRoach You already helped me a lot. I think I'll go hunt for an empty collection in those threads."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911646]-[1948788708]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@BrianRoach You already helped me a lot. I think I'll go hunt for an empty collection in those threads."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"BrianRoach",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "roach":1,
                      "brian":1,
                      "help":1,
                      "thread":1,
                      "empti":1,
                      "lot":1,
                      "collect":1,
                      "hunt":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9911661,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":192444,
          "displayName":"John Vint",
          "reputation":21382
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@valmar take a look at http://en.wikipedia.org/wiki/Producer-consumer_problem. Threads will sit on the queue until there is an item on the queue available. If there is no item on the queue the thread will sit and wait until another thread places the item on the queue."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9911661]-[1967956953]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@valmar take a look at http://en.wikipedia.org/wiki/Producer-consumer_problem. Threads will sit on the queue until there is an item on the queue available. If there is no item on the queue the thread will sit and wait until another thread places the item on the queue."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"consumer_problem",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "consum":1,
                      "wait":1,
                      "sit":2,
                      "produc":1,
                      "queue":4,
                      "problem":1,
                      "thread":3,
                      "wikipedia":1,
                      "valmar":1,
                      "place":1,
                      "wiki":1,
                      "org":1,
                      "http":1,
                      "item":3
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9912088,
        "postId":8086463,
        "creationDate":"2011-11-10",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":286149,
          "displayName":"Timo",
          "reputation":2825
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@JohnVint Thanks for that link. It looks like I forgot a synchronized{} statement somewhere in my code."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8086463-cu9912088]-[393575882]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@JohnVint Thanks for that link. It looks like I forgot a synchronized{} statement somewhere in my code."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"JohnVint",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"JsonObjectNode",
                      "members":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "john":1,
                      "statement":1,
                      "code":1,
                      "forgot":1,
                      "link":1,
                      "vint":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "multithreading"
    ],
    "creationDate":"2011-11-10",
    "lastActivityDate":"2011-11-10",
    "score":4,
    "viewCount":11399,
    "owner":{
      "type":"StackOverflowUser",
      "id":286149,
      "displayName":"Timo",
      "reputation":2825
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I noticed that my java application (runs on tomcat6) spawns a lot of threads which do not terminate.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8086463]-[1160281901]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I noticed that my java application (runs on tomcat6) spawns a lot of threads which do not terminate.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "spawn":1,
                  "run":1,
                  "thread":1,
                  "applic":1,
                  "lot":1,
                  "notic":1,
                  "tomcat":1,
                  "termin":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>So I created a thread dump and noticed that there are tons of threads waiting, like this:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8086463]-[652336815]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>So I created a thread dump and noticed that there are tons of threads waiting, like this:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "wait":1,
                  "ton":1,
                  "dump":1,
                  "thread":2,
                  "notic":1,
                  "creat":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&quot;pool-1-thread-22&quot; prio=5 tid=101b4b000 nid=0x127122000 waiting on condition [127121000] java.lang.Thread.State: WAITING (parking) at sun.misc.Unsafe.park(Native Method) - parking to wait for &lt;6c340cee0&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907) at java.lang.Thread.run(Thread.java:680) Locked ownable synchronizers: - None "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[8086463]-[-2055356049]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"\"pool-1-thread-22\" prio=5 tid=101b4b000 nid=0x127122000 waiting on condition [127121000] "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"State",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":": WAITING (parking) "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"park",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"TextFragmentNode",
                  "text":"- parking to wait for <6c340cee0> (a "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"locks",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"AbstractQueuedSynchronizer$ConditionObject",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":") "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"locks",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"LockSupport",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"park",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"LockSupport.java",
                    "lineNumber":156
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"locks",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"AbstractQueuedSynchronizer$ConditionObject",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"await",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"AbstractQueuedSynchronizer.java",
                    "lineNumber":1987
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"LinkedBlockingQueue",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"take",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"LinkedBlockingQueue.java",
                    "lineNumber":399
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ThreadPoolExecutor",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getTask",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"ThreadPoolExecutor.java",
                    "lineNumber":947
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ThreadPoolExecutor$Worker",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"ThreadPoolExecutor.java",
                    "lineNumber":907
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Thread.java",
                    "lineNumber":680
                  }
                },
                {
                  "type":"TextFragmentNode",
                  "text":"Locked ownable synchronizers: - None "
                }
              ]
            },
            "rawText":"\"pool-1-thread-22\" prio=5 tid=101b4b000 nid=0x127122000 waiting on condition [127121000] java.lang.Thread.State: WAITING (parking) at sun.misc.Unsafe.park(Native Method)- parking to wait for <6c340cee0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)at java.lang.Thread.run(Thread.java:680)Locked ownable synchronizers: - None ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "support":2,
                  "method":1,
                  "await":1,
                  "wait":3,
                  "task":1,
                  "concurr":6,
                  "util":6,
                  "state":1,
                  "queue":2,
                  "condit":3,
                  "run":2,
                  "sun":1,
                  "lock":6,
                  "cee":1,
                  "object":2,
                  "block":2,
                  "thread":8,
                  "link":2,
                  "pool":5,
                  "queu":3,
                  "park":4,
                  "misc":1,
                  "unsaf":1,
                  "lang":2,
                  "tid":1,
                  "nid":1,
                  "executor":4,
                  "prio":1,
                  "ownabl":1,
                  "synchron":4,
                  "worker":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Thread",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"State",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"util",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"concurrent",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"locks",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"AbstractQueuedSynchronizer$ConditionObject",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Now the question is: WHAT are these threads waiting for? I have suspect class which seems to spawn these threads but I don't know what exactly is making these threads stuck.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8086463]-[-1471125685]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Now the question is: WHAT are these threads waiting for? I have suspect class which seems to spawn these threads but I don't know what exactly is making these threads stuck.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"which",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "question":1,
                  "wait":1,
                  "spawn":1,
                  "stuck":1,
                  "thread":3,
                  "suspect":1,
                  "make":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Is there anything I can do to find the cause for this except for tearing the class apart line by line and keep monitoring thread behavior?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8086463]-[-97593705]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Is there anything I can do to find the cause for this except for tearing the class apart line by line and keep monitoring thread behavior?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"apart",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "find":1,
                  "monitor":1,
                  "line":2,
                  "tear":1,
                  "thread":1,
                  "behavior":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":8086592,
      "questionId":8086463,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":9911746,
          "postId":8086592,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":286149,
            "displayName":"Timo",
            "reputation":2825
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Don't think so. These threads are not fixed. They're created dynamically when the user interacts with the application. After long usage there are hundreds of them, not just 10."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086592-cu9911746]-[-725944459]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Don't think so. These threads are not fixed. They're created dynamically when the user interacts with the application. After long usage there are hundreds of them, not just 10."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "interact":1,
                        "fix":1,
                        "dynam":1,
                        "hundr":1,
                        "thread":1,
                        "applic":1,
                        "usag":1,
                        "creat":1,
                        "user":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9911768,
          "postId":8086592,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":192444,
            "displayName":"John Vint",
            "reputation":21382
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I guess you'll have to find out what happens after the user interacts. Anyone can create these threads as you see in my example. If you get us more code of what is happening we can help."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086592-cu9911768]-[-310367291]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I guess you'll have to find out what happens after the user interacts. Anyone can create these threads as you see in my example. If you get us more code of what is happening we can help."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "find":1,
                        "happen":1,
                        "interact":1,
                        "code":1,
                        "thread":1,
                        "guess":1,
                        "creat":1,
                        "user":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-11-10",
      "lastActivityDate":"2011-11-10",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":192444,
        "displayName":"John Vint",
        "reputation":21382
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Those threads are part of a ThreadPool. More specificaly java.util.concurrent.ThreadPoolExecutor. The thread is waiting on a Runnable/Callable to be submitted to the pool. For example</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8086592]-[1268963709]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Those threads are part of a ThreadPool. More specificaly java.util.concurrent.ThreadPoolExecutor. The thread is waiting on a Runnable/Callable to be submitted to the pool. For example</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "wait":1,
                    "concurr":1,
                    "util":1,
                    "submit":1,
                    "specificali":1,
                    "callabl":1,
                    "thread":4,
                    "pool":3,
                    "runnabl":1,
                    "part":1,
                    "executor":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"ExecutorService e = Executors.newFixedThreadPool(10); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[8086592]-[1574874027]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"LocalVariableDeclarationStatementNode",
                    "modifiers":[
                      
                    ],
                    "declarators":{
                      "type":"VariableDeclaratorsNode",
                      "declarators":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"e",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "assignment":{
                            "type":"VariableAssignmentNode",
                            "variableAssignment":{
                              "type":"VariableExpressionInitNode",
                              "expression":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"Executors",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"newFixedThreadPool",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"LiteralNode",
                                      "node":{
                                        "type":"IntegerLiteralNode",
                                        "valueRep":"10"
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            },
                            "comments":[
                              
                            ]
                          },
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"ExecutorService",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"ExecutorService e = Executors.newFixedThreadPool(10); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "fix":1,
                    "thread":1,
                    "pool":1,
                    "executor":2,
                    "servic":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ExecutorService",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Executors",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"newFixedThreadPool",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"IntegerLiteralNode",
                              "valueRep":"10"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"e",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"Executors",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"newFixedThreadPool",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"IntegerLiteralNode",
                                    "valueRep":"10"
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ExecutorService",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Will create 10 threads that will sit an wait until</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8086592]-[1123918040]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Will create 10 threads that will sit an wait until</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "wait":1,
                    "thread":1,
                    "creat":1,
                    "sit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"e.submit(new Runnable(){ public void run(){ ...} }); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[8086592]-[-250064208]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"e.submit("
                  },
                  {
                    "type":"ConstructorCreatorNode",
                    "creatorType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Runnable",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "expressionArgs":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "classBody":{
                      "type":"ClassBodyNode",
                      "declarations":[
                        {
                          "type":"TextFragmentNode",
                          "text":"public void run(){ ..."
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"}); "
                  }
                ]
              },
              "rawText":"e.submit(new Runnable(){ public void run(){ ...} }); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "run":1,
                    "runnabl":1,
                    "submit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Runnable",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Then one thread will be notified and invoke that runnable. What they are being used for I cannot tell. You'll have to find out what started the thread pool. Maybe its handling client requests to the application server.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8086592]-[-1556529227]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Then one thread will be notified and invoke that runnable. What they are being used for I cannot tell. You'll have to find out what started the thread pool. Maybe its handling client requests to the application server.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "request":1,
                    "server":1,
                    "notifi":1,
                    "invok":1,
                    "thread":2,
                    "client":1,
                    "pool":1,
                    "applic":1,
                    "runnabl":1,
                    "start":1,
                    "handl":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":8086607,
      "questionId":8086463,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":9911717,
          "postId":8086607,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":286149,
            "displayName":"Timo",
            "reputation":2825
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That can't be. I can explicitly click a button in my application that spawns these threads. Once clicked, these threads appear. After a while these threads consume so much memory that the server crashes."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086607-cu9911717]-[72935847]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That can't be. I can explicitly click a button in my application that spawns these threads. Once clicked, these threads appear. After a while these threads consume so much memory that the server crashes."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "consum":1,
                        "server":1,
                        "spawn":1,
                        "crash":1,
                        "button":1,
                        "thread":3,
                        "click":2,
                        "applic":1,
                        "explicit":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9911839,
          "postId":8086607,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":758133,
            "displayName":"Martin James",
            "reputation":16761
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"If a thread is blocked, (eg. waiting on a queue), they cannot consume any more memory - they are not running and so cannot request any. If anything, their stacks may well get paged out after waiting a while and so actually reduce real RAM use."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086607-cu9911839]-[1833181584]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"If a thread is blocked, (eg. waiting on a queue), they cannot consume any more memory - they are not running and so cannot request any. If anything, their stacks may well get paged out after waiting a while and so actually reduce real RAM use."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "consum":1,
                        "wait":2,
                        "request":1,
                        "ram":1,
                        "reduc":1,
                        "real":1,
                        "queue":1,
                        "run":1,
                        "page":1,
                        "block":1,
                        "thread":1,
                        "stack":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9911947,
          "postId":8086607,
          "creationDate":"2011-11-10",
          "score":3,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":122207,
            "displayName":"Tim Bender",
            "reputation":12304
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I'm going to agree with @ptyx on this. Presumably clicking a button in your application sends a requests to the Tomcat server. My guess is that you have a bad configuration telling Tomcat to be able to handle an obscenely large number of requests because you want to be enterprisey. Tomcat keeps making a new `Thread` in its `ThreadPoolExecutor` because it hasn't reached `corePoolSize`. Ultimately crashing your server because you have configured for a large number of threads but not allowed for enough memory to allocate all the stack space needed for those threads. But that is just my guess."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086607-cu9911947]-[-1090547649]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I'm going to agree with @ptyx on this. Presumably clicking a button in your application sends a requests to the Tomcat server. My guess is that you have a bad configuration telling Tomcat to be able to handle an obscenely large number of requests because you want to be enterprisey. Tomcat keeps making a new `Thread` in its `ThreadPoolExecutor` because it hasn't reached `corePoolSize`. Ultimately crashing your server because you have configured for a large number of threads but not allowed for enough memory to allocate all the stack space needed for those threads. But that is just my guess."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ThreadPoolExecutor",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"corePoolSize",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "number":2,
                        "enterprisey":1,
                        "reach":1,
                        "request":2,
                        "server":2,
                        "alloc":1,
                        "size":1,
                        "ptyx":1,
                        "crash":1,
                        "bad":1,
                        "configur":2,
                        "button":1,
                        "thread":4,
                        "larg":2,
                        "need":1,
                        "click":1,
                        "space":1,
                        "allow":1,
                        "pool":2,
                        "applic":1,
                        "stack":1,
                        "make":1,
                        "agre":1,
                        "obscen":1,
                        "tomcat":3,
                        "ultim":1,
                        "guess":2,
                        "core":1,
                        "executor":1,
                        "tell":1,
                        "handl":1,
                        "send":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ThreadPoolExecutor",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9912074,
          "postId":8086607,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":286149,
            "displayName":"Timo",
            "reputation":2825
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes, I've set `Executors.newFixedThreadPool(3000);` because otherwise the application will crash when this number of threads has been reached. Thus I want to find the reason why those threads do not terminate so I can reduce that number."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086607-cu9912074]-[-2062285038]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes, I've set `Executors.newFixedThreadPool(3000);` because otherwise the application will crash when this number of threads has been reached. Thus I want to find the reason why those threads do not terminate so I can reduce that number."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Executors",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"newFixedThreadPool",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"LiteralNode",
                              "node":{
                                "type":"IntegerLiteralNode",
                                "valueRep":"3000"
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "number":2,
                        "find":1,
                        "reach":1,
                        "reduc":1,
                        "crash":1,
                        "set":1,
                        "fix":1,
                        "reason":1,
                        "thread":3,
                        "pool":1,
                        "applic":1,
                        "executor":1,
                        "termin":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        {
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"Executors",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"newFixedThreadPool",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"IntegerLiteralNode",
                                  "valueRep":"3000"
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9912273,
          "postId":8086607,
          "creationDate":"2011-11-10",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":286149,
            "displayName":"Timo",
            "reputation":2825
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That's it! I reduced the pool size and now tomcat seems to &quot;recycle&quot; pooled threads properly and does not spawn that insanely high number of threads. Thanks, Tim!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8086607-cu9912273]-[-951736754]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That's it! I reduced the pool size and now tomcat seems to &quot;recycle&quot; pooled threads properly and does not spawn that insanely high number of threads. Thanks, Tim!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "number":1,
                        "reduc":1,
                        "size":1,
                        "proper":1,
                        "spawn":1,
                        "tim":1,
                        "recycl":1,
                        "insan":1,
                        "thread":2,
                        "pool":2,
                        "quot":2,
                        "tomcat":1,
                        "high":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-11-10",
      "lastActivityDate":"2011-11-10",
      "score":7,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":83196,
        "displayName":"ptyx",
        "reputation":1898
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>On tomcat, they're usually request worker threads waiting for someone to connect. Nothing to worry about. They're ready to handle those 100 users connecting at once to your server.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8086607]-[-876678183]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>On tomcat, they're usually request worker threads waiting for someone to connect. Nothing to worry about. They're ready to handle those 100 users connecting at once to your server.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "readi":1,
                    "wait":1,
                    "request":1,
                    "server":1,
                    "connect":2,
                    "thread":1,
                    "tomcat":1,
                    "worri":1,
                    "handl":1,
                    "user":1,
                    "worker":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}