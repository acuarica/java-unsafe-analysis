{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":37551,
    "title":"Multiple threads stuck in native calls (Java)",
    "comments":[
      
    ],
    "tags":[
      "java",
      "multithreading",
      "native-methods",
      "blocked"
    ],
    "creationDate":"2008-09-01",
    "lastActivityDate":"2011-02-15",
    "score":4,
    "viewCount":3989,
    "owner":{
      "type":"StackOverflowUser",
      "id":3904,
      "displayName":"David Resnick",
      "reputation":2286
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have a problem with an application running on Fedora Core 6 with JDK 1.5.0_08.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[759349565]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have a problem with an application running on Fedora Core 6 with JDK 1.5.0_08.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "fedora":1,
                  "problem":1,
                  "run":1,
                  "applic":1,
                  "core":1,
                  "jdk":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>After some amount of uptime (usually some days) threads begin getting stuck in native methods.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[-885821549]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>After some amount of uptime (usually some days) threads begin getting stuck in native methods.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "begin":1,
                  "amount":1,
                  "stuck":1,
                  "thread":1,
                  "uptim":1,
                  "day":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The threads are locked in something like this:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[-2037456037]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The threads are locked in something like this:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "lock":1,
                  "thread":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&quot;pool-2-thread-2571&quot; prio=1 tid=0x08dd0b28 nid=0x319e waiting for monitor entry [0xb91fe000..0xb91ff7d4] at java.lang.Class.getDeclaredConstructors0(Native Method) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[37551]-[390723613]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"\"pool-2-thread-2571\" prio=1 tid=0x08dd0b28 nid=0x319e waiting for monitor entry [0xb91fe000..0xb91ff7d4] "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Class",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getDeclaredConstructors0",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                }
              ]
            },
            "rawText":"\"pool-2-thread-2571\" prio=1 tid=0x08dd0b28 nid=0x319e waiting for monitor entry [0xb91fe000..0xb91ff7d4] at java.lang.Class.getDeclaredConstructors0(Native Method)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "monitor":1,
                  "method":1,
                  "wait":1,
                  "constructor":1,
                  "declar":1,
                  "thread":1,
                  "entri":1,
                  "pool":1,
                  "lang":1,
                  "tid":1,
                  "nid":1,
                  "prio":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>or</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[-971216786]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>or</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&quot;pool-2-thread-2547&quot; prio=1 tid=0x75641620 nid=0x1745 waiting for monitor entry [0xbc7fe000..0xbc7ff554] at sun.misc.Unsafe.defineClass(Native Method) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[37551]-[805536879]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"\"pool-2-thread-2547\" prio=1 tid=0x75641620 nid=0x1745 waiting for monitor entry [0xbc7fe000..0xbc7ff554] "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"defineClass",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                }
              ]
            },
            "rawText":"\"pool-2-thread-2547\" prio=1 tid=0x75641620 nid=0x1745 waiting for monitor entry [0xbc7fe000..0xbc7ff554] at sun.misc.Unsafe.defineClass(Native Method)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "monitor":1,
                  "method":1,
                  "wait":1,
                  "xbc":2,
                  "sun":1,
                  "thread":1,
                  "entri":1,
                  "pool":1,
                  "misc":1,
                  "unsaf":1,
                  "defin":1,
                  "tid":1,
                  "nid":1,
                  "prio":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Especially puzzling to me is this one:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[240043092]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Especially puzzling to me is this one:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "puzzl":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&quot;HealthMonitor-10&quot; daemon prio=1 tid=0x0868d1c0 nid=0x2b72 waiting for monitor entry [0xbe5ff000..0xbe5ff4d4] at java.lang.Thread.dumpThreads(Native Method) at java.lang.Thread.getStackTrace(Thread.java:1383) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[37551]-[-451162892]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"\""
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"HealthMonitor",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-10\" daemon prio=1 tid=0x0868d1c0 nid=0x2b72 waiting for monitor entry [0xbe5ff000..0xbe5ff4d4] "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"dumpThreads",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getStackTrace",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Thread.java",
                    "lineNumber":1383
                  }
                }
              ]
            },
            "rawText":"\"HealthMonitor-10\" daemon prio=1 tid=0x0868d1c0 nid=0x2b72 waiting for monitor entry [0xbe5ff000..0xbe5ff4d4] at java.lang.Thread.dumpThreads(Native Method)at java.lang.Thread.getStackTrace(Thread.java:1383)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "health":1,
                  "monitor":2,
                  "method":1,
                  "wait":1,
                  "trace":1,
                  "daemon":1,
                  "dump":1,
                  "thread":4,
                  "entri":1,
                  "xbe":2,
                  "stack":1,
                  "lang":2,
                  "tid":1,
                  "nid":1,
                  "prio":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HealthMonitor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The threads remain stuck until the VM is restarted.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[-901234553]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The threads remain stuck until the VM is restarted.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "remain":1,
                  "restart":1,
                  "thread":1,
                  "stuck":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Can anyone give me an idea as to what is happening here, what might be causing the native methods to block? The monitor entry address range at the top of each stuck thread is different. How can I figure out what is holding this monitor?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[-1854746075]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Can anyone give me an idea as to what is happening here, what might be causing the native methods to block? The monitor entry address range at the top of each stuck thread is different. How can I figure out what is holding this monitor?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "monitor":2,
                  "method":1,
                  "happen":1,
                  "rang":1,
                  "idea":1,
                  "hold":1,
                  "stuck":1,
                  "block":1,
                  "thread":1,
                  "entri":1,
                  "give":1,
                  "caus":1,
                  "address":1,
                  "figur":1,
                  "top":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Any suggestions or advice will be greatly appreciated!</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[379465637]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Any suggestions or advice will be greatly appreciated!</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "suggest":1,
                  "advic":1,
                  "great":1,
                  "appreci":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Thanks, David </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[37551]-[1093844276]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Thanks, David </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "david":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":156378,
      "questionId":37551,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":50500,
          "postId":156378,
          "creationDate":"2008-10-02",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3904,
            "displayName":"David Resnick",
            "reputation":2286
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I think the name of the tool is jstack; I used it for thread info above. Also, sending a SIGQUIT (ctrl-\\\\) to the JVM dumps the threads to stdout. My problem is that it seems that the deadlock is happening in code beyond my control (native code). Though I've no doubt I'm holding the lock somehow..."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[156378-cu50500]-[-1001793537]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I think the name of the tool is jstack; I used it for thread info above. Also, sending a SIGQUIT (ctrl-\\\\) to the JVM dumps the threads to stdout. My problem is that it seems that the deadlock is happening in code beyond my control (native code). Though I've no doubt I'm holding the lock somehow..."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "stdout":1,
                        "happen":1,
                        "tool":1,
                        "problem":1,
                        "ctrl":1,
                        "lock":1,
                        "dump":1,
                        "deadlock":1,
                        "info":1,
                        "code":2,
                        "hold":1,
                        "thread":2,
                        "doubt":1,
                        "jstack":1,
                        "sigquit":1,
                        "control":1,
                        "send":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2008-10-01",
      "lastActivityDate":"2008-10-01",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":17201,
        "displayName":"David Smith",
        "reputation":772
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I was having similar problems a few months ago and found the jthread(?) utility to be invaluable. You give it the process ID for your Java application and it will dump the entire stack for each thread in your process.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[156378]-[-834164496]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I was having similar problems a few months ago and found the jthread(?) utility to be invaluable. You give it the process ID for your Java application and it will dump the entire stack for each thread in your process.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jthread":1,
                    "util":1,
                    "similar":1,
                    "problem":1,
                    "process":2,
                    "dump":1,
                    "entir":1,
                    "found":1,
                    "thread":1,
                    "ago":1,
                    "applic":1,
                    "stack":1,
                    "give":1,
                    "month":1,
                    "invalu":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>From the output of jthread, I could see one thread was trying to obtain a lock after having entered a monitor and another thread was trying to enter the monitor after obtaining the lock. A recipe for deadlock.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[156378]-[-501599032]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>From the output of jthread, I could see one thread was trying to obtain a lock after having entered a monitor and another thread was trying to enter the monitor after obtaining the lock. A recipe for deadlock.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "monitor":2,
                    "jthread":1,
                    "recip":1,
                    "enter":2,
                    "lock":2,
                    "deadlock":1,
                    "thread":2,
                    "output":1,
                    "obtain":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I was also wondering if your application was running into a garbage collection issue. You say it runs for a couple days before it stops like this. How long have you let it sit in the stuck state to see if maybe the GC ever finishes?</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[156378]-[67375266]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I was also wondering if your application was running into a garbage collection issue. You say it runs for a couple days before it stops like this. How long have you let it sit in the stuck state to see if maybe the GC ever finishes?</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "sit":1,
                    "state":1,
                    "run":2,
                    "issu":1,
                    "finish":1,
                    "stop":1,
                    "stuck":1,
                    "coupl":1,
                    "wonder":1,
                    "applic":1,
                    "collect":1,
                    "day":1,
                    "garbag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":38320,
      "questionId":37551,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":33544532,
          "postId":38320,
          "creationDate":"2014-03-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3904,
            "displayName":"David Resnick",
            "reputation":2286
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Unless I can prove that the problem is caused by a bug in the JDK version which was fixed later, upgrading the JDK is not an option. I'll try looking up the source code tomorrow -- hopefully that might give me some insight into the problem. Though I do recall having a &quot;mixed native/Java&quot; thread dump which showed the JDK native stack traces and not being able to see anything there... I'm running on Linux, so it doesn't look like the the bug you linked to is relevant."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[38320-cu33544532]-[998106656]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Unless I can prove that the problem is caused by a bug in the JDK version which was fixed later, upgrading the JDK is not an option. I'll try looking up the source code tomorrow -- hopefully that might give me some insight into the problem. Though I do recall having a &quot;mixed native/Java&quot; thread dump which showed the JDK native stack traces and not being able to see anything there... I'm running on Linux, so it doesn't look like the the bug you linked to is relevant."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "insight":1,
                        "prove":1,
                        "show":1,
                        "trace":1,
                        "problem":2,
                        "run":1,
                        "option":1,
                        "fix":1,
                        "relev":1,
                        "dump":1,
                        "upgrad":1,
                        "code":1,
                        "version":1,
                        "thread":1,
                        "mix":1,
                        "bug":2,
                        "link":1,
                        "stack":1,
                        "give":1,
                        "caus":1,
                        "linux":1,
                        "quot":2,
                        "tomorrow":1,
                        "recal":1,
                        "sourc":1,
                        "jdk":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2008-09-01",
      "lastActivityDate":"2008-09-01",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1069,
        "displayName":"John Smithers",
        "reputation":1489
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Maybe you should use another jdk version.<br /> For your &quot;puzzling one&quot;, there is a bug entry for 1.5.0_08. A memory leak is reported (I do not know, if this is related to your problem):<br /> <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6469701\"rel=\"nofollow\">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6469701</a> </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[38320]-[1185416623]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Maybe you should use another jdk version.<br /> For your &quot;puzzling one&quot;, there is a bug entry for 1.5.0_08. A memory leak is reported (I do not know, if this is related to your problem):<br /> <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6469701\"rel=\"nofollow\">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6469701</a> </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"view_bug",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"bug_id",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "puzzl":1,
                    "relat":1,
                    "problem":1,
                    "sun":2,
                    "rel":1,
                    "leak":1,
                    "version":1,
                    "entri":1,
                    "nofollow":1,
                    "bugdatabas":2,
                    "bug":7,
                    "report":1,
                    "quot":2,
                    "href":1,
                    "http":2,
                    "jdk":1,
                    "view":2,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Also you could get the source code and look, what happens at line 1383. On the other side, it could just be the stack dump, after the original error occurred.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[38320]-[74362814]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Also you could get the source code and look, what happens at line 1383. On the other side, it could just be the stack dump, after the original error occurred.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "side":1,
                    "line":1,
                    "occur":1,
                    "dump":1,
                    "code":1,
                    "error":1,
                    "origin":1,
                    "stack":1,
                    "sourc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":152563,
      "questionId":37551,
      "comments":[
        
      ],
      "creationDate":"2008-09-30",
      "lastActivityDate":"2008-09-30",
      "score":4,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":23424,
        "displayName":"VoidPointer",
        "reputation":7706
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>My initial suspicion would be that you are experiencing some sort of class-loader realted dead lock. I imagine, that class loading needs to be synchronized at some level because class information will become available for the entire VM, not just the thread where it was initially loaded.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[152563]-[-1834666075]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>My initial suspicion would be that you are experiencing some sort of class-loader realted dead lock. I imagine, that class loading needs to be synchronized at some level because class information will become available for the entire VM, not just the thread where it was initially loaded.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"loading",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"information",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "realt":1,
                    "loader":1,
                    "dead":1,
                    "load":2,
                    "lock":1,
                    "entir":1,
                    "thread":1,
                    "suspicion":1,
                    "inform":1,
                    "imagin":1,
                    "initi":2,
                    "sort":1,
                    "experienc":1,
                    "level":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The fact that the methods on top of the stack are native methods seems to be pure coincidence, since part of the class loading mechanism happens to implemented that way.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[152563]-[2024580504]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The fact that the methods on top of the stack are native methods seems to be pure coincidence, since part of the class loading mechanism happens to implemented that way.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"loading",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":2,
                    "load":1,
                    "pure":1,
                    "fact":1,
                    "mechan":1,
                    "stack":1,
                    "implement":1,
                    "part":1,
                    "top":1,
                    "coincid":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I would investigate further what is going on class-loading wise. Maybe some thread uses the class loader to load a class from a network location which is slow/unavailable and thus blocks for a really long time, not yielding the monitor to other threads that want to load a class. Investigating the output when starting the JVM with -verbose:class might be one thing to try.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[152563]-[-41438933]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I would investigate further what is going on class-loading wise. Maybe some thread uses the class loader to load a class from a network location which is slow/unavailable and thus blocks for a really long time, not yielding the monitor to other threads that want to load a class. Investigating the output when starting the JVM with -verbose:class might be one thing to try.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"loader",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"from",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"might",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "verbos":1,
                    "wise":1,
                    "jvm":1,
                    "network":1,
                    "monitor":1,
                    "slow":1,
                    "loader":1,
                    "yield":1,
                    "thing":1,
                    "load":3,
                    "investig":2,
                    "block":1,
                    "thread":2,
                    "unavail":1,
                    "time":1,
                    "output":1,
                    "start":1,
                    "locat":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":177855,
      "questionId":37551,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":33549684,
          "postId":177855,
          "creationDate":"2008-10-02",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3904,
            "displayName":"David Resnick",
            "reputation":2286
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I think you are right about it being classloader related. Though the threads always block on native methods so I don't think that's a coincidence. There are no classes that might take a long time to load (or be unavailable). The classpath includes only local jars. Actually there is more than one classloader, each of which might be contending for some resource and becoming blocked as a result. Since the use of Groovy was removed from the application (it caused a memory leak in PermGen), we haven't seen any additional cases of the block. So this might be what was causing the problem."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[177855-cu33549684]-[-2102692105]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I think you are right about it being classloader related. Though the threads always block on native methods so I don't think that's a coincidence. There are no classes that might take a long time to load (or be unavailable). The classpath includes only local jars. Actually there is more than one classloader, each of which might be contending for some resource and becoming blocked as a result. Since the use of Groovy was removed from the application (it caused a memory leak in PermGen), we haven't seen any additional cases of the block. So this might be what was causing the problem."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PermGen",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "contend":1,
                        "method":1,
                        "remov":1,
                        "relat":1,
                        "addit":1,
                        "problem":1,
                        "result":1,
                        "local":1,
                        "resourc":1,
                        "leak":1,
                        "load":1,
                        "classpath":1,
                        "includ":1,
                        "block":3,
                        "thread":1,
                        "groovi":1,
                        "applic":1,
                        "perm":1,
                        "caus":2,
                        "class":1,
                        "unavail":1,
                        "classload":2,
                        "time":1,
                        "case":1,
                        "jar":1,
                        "coincid":1,
                        "gen":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"PermGen",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":33549704,
          "postId":177855,
          "creationDate":"2008-10-07",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3904,
            "displayName":"David Resnick",
            "reputation":2286
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Unfortunately, there is no obviously deadlocking monitor. None of the values identifying monitors are repeated in a thread dump. If there were I would have noticed: I think the JVM reports suspected deadlocked threads, and there is also the [Thread Dump Analyzer][1] visualvm plugin that helps find problems in thread dumps."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[177855-cu33549704]-[-1624454046]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Unfortunately, there is no obviously deadlocking monitor. None of the values identifying monitors are repeated in a thread dump. If there were I would have noticed: I think the JVM reports suspected deadlocked threads, and there is also the [Thread Dump Analyzer][1] visualvm plugin that helps find problems in thread dumps."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "plugin":1,
                        "jvm":1,
                        "find":1,
                        "monitor":2,
                        "visualvm":1,
                        "analyz":1,
                        "problem":1,
                        "dump":3,
                        "deadlock":2,
                        "help":1,
                        "thread":4,
                        "valu":1,
                        "suspect":1,
                        "identifi":1,
                        "report":1,
                        "notic":1,
                        "repeat":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2008-10-07",
      "lastActivityDate":"2008-10-07",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":23424,
        "displayName":"VoidPointer",
        "reputation":7706
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Can you find out which thread is actually synchronizing on the monitor on which the native method is waiting? At least the thread-dump you get from the VM when you send it a SIGQUIT (kill -3) should show this information, as in</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[177855]-[288320239]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Can you find out which thread is actually synchronizing on the monitor on which the native method is waiting? At least the thread-dump you get from the VM when you send it a SIGQUIT (kill -3) should show this information, as in</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "monitor":1,
                    "method":1,
                    "wait":1,
                    "show":1,
                    "dump":1,
                    "thread":2,
                    "inform":1,
                    "sigquit":1,
                    "kill":1,
                    "synchron":1,
                    "send":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&quot;Thread-0&quot; prio=5 tid=0x0100b060 nid=0x84c000 waiting for monitor entry [0xb0c8a000..0xb0c8ad90] at Deadlock$1.run(Deadlock.java:8) - waiting to lock &lt;0x255e5b38&gt; (a java.lang.Object) ... &quot;main&quot; prio=5 tid=0x01001350 nid=0xb0801000 waiting on condition [0xb07ff000..0xb0800148] at java.lang.Thread.sleep(Native Method) at Deadlock.main(Deadlock.java:21) - locked &lt;0x255e5b38&gt; (a java.lang.Object) "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[177855]-[-570190033]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"\"Thread-0\" prio=5 tid=0x0100b060 nid=0x84c000 waiting for monitor entry [0xb0c8a000..0xb0c8ad90] "
                  },
                  {
                    "type":"StackTraceLineNode",
                    "methodName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Deadlock$1",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"run",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "location":{
                      "type":"SourceLocationNode",
                      "fileName":"Deadlock.java",
                      "lineNumber":8
                    }
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"- waiting to lock <0x255e5b38> (a "
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Object",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":") ... \"main\" prio=5 tid=0x01001350 nid=0xb0801000 waiting on condition [0xb07ff000..0xb0800148] "
                  },
                  {
                    "type":"StackTraceLineNode",
                    "methodName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"Thread",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"sleep",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "location":{
                      "type":"SourceLocationNode",
                      "fileName":"Native Method"
                    }
                  },
                  {
                    "type":"StackTraceLineNode",
                    "methodName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Deadlock",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"main",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "location":{
                      "type":"SourceLocationNode",
                      "fileName":"Deadlock.java",
                      "lineNumber":21
                    }
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"- locked <0x255e5b38> (a "
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Object",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":") "
                  }
                ]
              },
              "rawText":"\"Thread-0\" prio=5 tid=0x0100b060 nid=0x84c000 waiting for monitor entry [0xb0c8a000..0xb0c8ad90] at Deadlock$1.run(Deadlock.java:8)- waiting to lock <0x255e5b38> (a java.lang.Object) ... \"main\" prio=5 tid=0x01001350 nid=0xb0801000 waiting on condition [0xb07ff000..0xb0800148] at java.lang.Thread.sleep(Native Method)at Deadlock.main(Deadlock.java:21)- locked <0x255e5b38> (a java.lang.Object) ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "monitor":1,
                    "method":1,
                    "wait":3,
                    "condit":1,
                    "run":1,
                    "sleep":1,
                    "lock":2,
                    "main":2,
                    "deadlock":4,
                    "object":2,
                    "thread":2,
                    "entri":1,
                    "lang":3,
                    "tid":2,
                    "nid":2,
                    "prio":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Object",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In the dumps you've posted so far, I can't see any thread that is actually waiting to lock a specific monitor...</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[177855]-[1886253524]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In the dumps you've posted so far, I can't see any thread that is actually waiting to lock a specific monitor...</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "monitor":1,
                    "post":1,
                    "wait":1,
                    "lock":1,
                    "dump":1,
                    "thread":1,
                    "specif":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5005799,
      "questionId":37551,
      "comments":[
        
      ],
      "creationDate":"2011-02-15",
      "lastActivityDate":"2011-02-15",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":410755,
        "displayName":"Scott",
        "reputation":342
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I found this thread after hitting the same problem - JDK 1.6.0_23 running on Linux with Tomcat 6.0.29. Not sure those bits are relevant, though - what I did notice was that aside from many threads getting &quot;stuck&quot; in the getDeclaredConstructors() native method, the CPU was at 100% for the java process. So, all request threads getting stuck here, CPU at 100%, thread dumps not showing any deadlocks (and no other threads doing any significant activity), it smelled like a thrashing garbage collector to me. Sure enough, checked the server logs and there were numerous OutOfMemory errors - heap space was exhausted.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5005799]-[1039032084]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I found this thread after hitting the same problem - JDK 1.6.0_23 running on Linux with Tomcat 6.0.29. Not sure those bits are relevant, though - what I did notice was that aside from many threads getting &quot;stuck&quot; in the getDeclaredConstructors() native method, the CPU was at 100% for the java process. So, all request threads getting stuck here, CPU at 100%, thread dumps not showing any deadlocks (and no other threads doing any significant activity), it smelled like a thrashing garbage collector to me. Sure enough, checked the server logs and there were numerous OutOfMemory errors - heap space was exhausted.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"getDeclaredConstructors",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"OutOfMemory",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "collector":1,
                    "show":1,
                    "request":1,
                    "server":1,
                    "bit":1,
                    "problem":1,
                    "process":1,
                    "hit":1,
                    "run":1,
                    "relev":1,
                    "constructor":1,
                    "dump":1,
                    "exhaust":1,
                    "deadlock":1,
                    "numer":1,
                    "declar":1,
                    "found":1,
                    "stuck":2,
                    "thread":5,
                    "activ":1,
                    "check":1,
                    "space":1,
                    "error":1,
                    "smell":1,
                    "signific":1,
                    "cpu":2,
                    "linux":1,
                    "quot":2,
                    "notic":1,
                    "tomcat":1,
                    "heap":1,
                    "thrash":1,
                    "jdk":1,
                    "log":1,
                    "garbag":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"OutOfMemory",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Can't say that this is going to be the root cause of threads getting stuck here every time, but hopefully the info here will help others at least rule out this as a possible cause...</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5005799]-[1209815933]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Can't say that this is going to be the root cause of threads getting stuck here every time, but hopefully the info here will help others at least rule out this as a possible cause...</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "root":1,
                    "rule":1,
                    "info":1,
                    "stuck":1,
                    "thread":1,
                    "time":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}