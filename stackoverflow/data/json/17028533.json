{"type":"StackOverflowArtifact","question":{"type":"StackOverflowQuestion","id":17028533,"title":"GSON + InAppBilling + ProGuard --&gt; App doesn't working","comments":[{"type":"StackOverflowComment","id":24613108,"postId":17028533,"creationDate":"2013-06-10","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":2340612,"displayName":"user2340612","reputation":1703},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"have you tried keeping all gson library not obsuscated? Its source code is public, so you can leave it out of proguard.. Or you can see [this example](https://code.google.com/p/google-gson/source/browse/trunk/examples/android-proguard-example/proguard.cfg)"},"units":[{"type":"TextUnit","id":"[17028533-cu24613108]-[-825868641]","astNode":{"type":"TextFragmentNode","text":"have you tried keeping all gson library not obsuscated? Its source code is public, so you can leave it out of proguard.. Or you can see [this example](https://code.google.com/p/google-gson/source/browse/trunk/examples/android-proguard-example/proguard.cfg)"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"proguard":3,"googl":2,"exampl":1,"keep":1,"librari":1,"https":1,"brows":1,"gson":2,"leav":1,"code":2,"cfg":1,"obsusc":1,"trunk":1,"sourc":2,"android":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Neutral"},{"fleshReadingEaseScore":7.402643678160928,"fleshKincaidGradeLevel":14.628275862068964,"automatedReadingIndex":19.296781609195406,"gunningFogIndex":6.625287356321839,"smogIndex":7.47213595499958,"colemanLiauIndex":25.982413793103436}]}]}]},{"type":"StackOverflowComment","id":24613492,"postId":17028533,"creationDate":"2013-06-10","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":1266551,"displayName":"britzl","reputation":4030},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"The proguard config seems fine and it's in line with the recommended settings (https://code.google.com/p/google-gson/source/browse/trunk/examples/android-proguard-example/proguard.cfg). What kind of crash are you getting? Can you provide a stacktrace and logcat output"},"units":[{"type":"TextUnit","id":"[17028533-cu24613492]-[-2085086495]","astNode":{"type":"TextFragmentNode","text":"The proguard config seems fine and it's in line with the recommended settings (https://code.google.com/p/google-gson/source/browse/trunk/examples/android-proguard-example/proguard.cfg). What kind of crash are you getting? Can you provide a stacktrace and logcat output"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"provid":1,"recommend":1,"proguard":3,"googl":2,"line":1,"exampl":1,"crash":1,"set":1,"config":1,"https":1,"brows":1,"gson":1,"code":1,"stacktrac":1,"cfg":1,"fine":1,"kind":1,"output":1,"trunk":1,"sourc":1,"logcat":1,"android":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Positive"},{"fleshReadingEaseScore":7.7450000000000045,"fleshKincaidGradeLevel":14.663333333333338,"automatedReadingIndex":20.622,"gunningFogIndex":6.666666666666668,"smogIndex":7.47213595499958,"colemanLiauIndex":27.534666666666663}]}]}]},{"type":"StackOverflowComment","id":24613589,"postId":17028533,"creationDate":"2013-06-10","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":1096351,"displayName":"Andreas","reputation":6},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"How can I exclude an library? Like this: -keep class gson-2.2.2.** { *; } I already found that example you posted but it doesn't work for me. The problem is, I can't find any error message. Thx for your help."},"units":[{"type":"TextUnit","id":"[17028533-cu24613589]-[1388046833]","astNode":{"type":"TextFragmentNode","text":"How can I exclude an library? Like this: -keep class gson-2.2.2.** { *; } I already found that example you posted but it doesn't work for me. The problem is, I can't find any error message. Thx for your help."},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"ClassDeclarationNode","modifiers":[],"identifier":{"type":"IdentifierNode","name":"gson","comments":[]},"labels":[],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"find":1,"post":1,"problem":1,"librari":1,"thx":1,"gson":1,"work":1,"found":1,"error":1,"messag":1,"exclud":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"gson","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":86.62000000000002,"fleshKincaidGradeLevel":3.164999999999999,"automatedReadingIndex":0.8212499999999991,"gunningFogIndex":3.2,"smogIndex":3.0,"colemanLiauIndex":3.273749999999996}]}]}]},{"type":"StackOverflowComment","id":24613998,"postId":17028533,"creationDate":"2013-06-10","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":1096351,"displayName":"Andreas","reputation":6},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"I've made Log Outputs: Gson gson = new GsonBuilder().create(); Log.d(TAG, &quot;GSON1&quot;); try { Packages packages = gson.fromJson(content, Packages.class); Log.d(TAG, &quot;GSON2&quot;); items = packages.getPackages(); final List\n<string>\n  itemList = new ArrayList(); Bundle queryItems = new Bundle(); Log.d(TAG, &quot;Size GSON: &quot; + items.size()); The last log (Size GSON) doesn't show up. No crash, no error, it only stops\n</string>"},"units":[{"type":"TextUnit","id":"[17028533-cu24613998]-[1306954865]","astNode":{"type":"TextFragmentNode","text":"I've made Log Outputs: Gson gson = new GsonBuilder().create(); Log.d(TAG, &quot;GSON1&quot;); try { Packages packages = gson.fromJson(content, Packages.class); Log.d(TAG, &quot;GSON2&quot;); items = packages.getPackages(); final List\n<string>\n  itemList = new ArrayList(); Bundle queryItems = new Bundle(); Log.d(TAG, &quot;Size GSON: &quot; + items.size()); The last log (Size GSON) doesn't show up. No crash, no error, it only stops\n</string>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"LocalVariableDeclarationStatementNode","modifiers":[],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"gson","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":".","comments":[]},"left":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"GsonBuilder","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"right":{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"create","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Gson","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"GSON1\""},"comments":[]}],"comments":[]},"comments":[]},{"type":"LocalVariableDeclarationStatementNode","modifiers":[],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"packages","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"gson","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"fromJson","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"content","comments":[]}],"comments":[]},{"type":"ClassLiteralExpressionNode","aType":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Packages","comments":[]}],"comments":[]},"arrayDepths":[],"comments":[]}],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Packages","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"GSON2\""},"comments":[]}],"comments":[]},"comments":[]},{"type":"ExpressionStatement","expression":{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":"=","comments":[]},"left":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"items","comments":[]}],"comments":[]},"right":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"packages","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"getPackages","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"comments":[]},"labels":[]},{"type":"LocalVariableDeclarationStatementNode","modifiers":[{"type":"KeywordModifierNode","value":"final","comments":[]}],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"itemList","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"ArrayList","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"List","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"LocalVariableDeclarationStatementNode","modifiers":[],"declarators":{"type":"VariableDeclaratorsNode","declarators":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"queryItems","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Bundle","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Bundle","comments":[]},"comments":[]}],"comments":[]}}],"comments":[]},"labels":[],"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":"+","comments":[]},"left":{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"Size GSON: \""},"comments":[]},"right":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"items","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"size","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"comments":[]}],"comments":[]},"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"show":1,"size":3,"json":1,"tag":3,"crash":1,"builder":1,"stop":1,"gson":8,"bundl":2,"array":1,"queri":1,"error":1,"content":1,"quot":6,"packag":5,"output":1,"creat":1,"made":1,"log":5,"list":3,"item":4}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Gson","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"ArrayList","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Bundle","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"List","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"GsonBuilder","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Packages","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":"+","comments":[]},"left":{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"Size GSON: \""},"comments":[]},"right":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"items","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"size","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"comments":[]}],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"items","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"size","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"GSON1\""},"comments":[]}],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"gson","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"fromJson","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"content","comments":[]}],"comments":[]},{"type":"ClassLiteralExpressionNode","aType":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Packages","comments":[]}],"comments":[]},"arrayDepths":[],"comments":[]}],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"create","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Log","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"d","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"TAG","comments":[]}],"comments":[]},{"type":"LiteralNode","node":{"type":"StringLiteralNode","valueRep":"\"GSON2\""},"comments":[]}],"comments":[]},"comments":[]},{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"packages","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"getPackages","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}]},{"type":"CodeVariablesMetaInformation","variables":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"gson","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"BinaryExpressionNode","operator":{"type":"OperatorNode","symbol":".","comments":[]},"left":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"GsonBuilder","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"right":{"type":"MethodInvocationNode","identifier":{"type":"IdentifierNode","name":"create","comments":[]},"args":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Gson","comments":[]},"comments":[]}],"comments":[]}},{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"packages","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"gson","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"fromJson","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"content","comments":[]}],"comments":[]},{"type":"ClassLiteralExpressionNode","aType":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Packages","comments":[]}],"comments":[]},"arrayDepths":[],"comments":[]}],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Packages","comments":[]},"comments":[]}],"comments":[]}},{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"itemList","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"ArrayList","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"List","comments":[]},"comments":[]}],"comments":[]}},{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"queryItems","comments":[]},"arrayDepth":[],"assignment":{"type":"VariableAssignmentNode","variableAssignment":{"type":"VariableExpressionInitNode","expression":{"type":"ConstructorCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Bundle","comments":[]},"comments":[]}],"comments":[]},"expressionArgs":{"type":"ExpressionListNode","arguments":[],"comments":[]},"comments":[]}},"comments":[]},"varType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Bundle","comments":[]},"comments":[]}],"comments":[]}}]},{"identifiers":[{"type":"IdentifierNode","name":"gson","comments":[]},{"type":"IdentifierNode","name":"getPackages","comments":[]},{"type":"IdentifierNode","name":"packages","comments":[]},{"type":"IdentifierNode","name":"size","comments":[]},{"type":"IdentifierNode","name":"create","comments":[]},{"type":"IdentifierNode","name":"Log","comments":[]},{"type":"IdentifierNode","name":"d","comments":[]},{"type":"IdentifierNode","name":"List","comments":[]},{"type":"IdentifierNode","name":"content","comments":[]},{"type":"IdentifierNode","name":"Packages","comments":[]},{"type":"IdentifierNode","name":"Gson","comments":[]},{"type":"IdentifierNode","name":"items","comments":[]},{"type":"IdentifierNode","name":"itemList","comments":[]},{"type":"IdentifierNode","name":"queryItems","comments":[]},{"type":"IdentifierNode","name":"TAG","comments":[]},{"type":"IdentifierNode","name":"fromJson","comments":[]},{"type":"IdentifierNode","name":"GsonBuilder","comments":[]},{"type":"IdentifierNode","name":"ArrayList","comments":[]},{"type":"IdentifierNode","name":"Bundle","comments":[]}]},{"declarators":[]},{"averageLevel":"VeryNegative"},{"fleshReadingEaseScore":47.21692307692311,"fleshKincaidGradeLevel":9.903076923076924,"automatedReadingIndex":13.873461538461534,"gunningFogIndex":8.276923076923078,"smogIndex":8.477225575051662,"colemanLiauIndex":17.911923076923078}]}]}]},{"type":"StackOverflowComment","id":24614437,"postId":17028533,"creationDate":"2013-06-10","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":1096351,"displayName":"Andreas","reputation":6},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"I have the solution. You also have to exclude the objects/classes where your content from JSON is mapped to! Thanks for your help, it forces me to investigate more into that problem."},"units":[{"type":"TextUnit","id":"[17028533-cu24614437]-[1367524868]","astNode":{"type":"TextFragmentNode","text":"I have the solution. You also have to exclude the objects/classes where your content from JSON is mapped to! Thanks for your help, it forces me to investigate more into that problem."},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"map":1,"json":1,"problem":1,"investig":1,"object":1,"content":1,"class":1,"forc":1,"solut":1,"exclud":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":71.75208333333336,"fleshKincaidGradeLevel":5.901250000000001,"automatedReadingIndex":5.539895833333333,"gunningFogIndex":6.766666666666666,"smogIndex":7.47213595499958,"colemanLiauIndex":8.444687499999997}]}]}]}],"tags":["android","gson","proguard","in-app-billing"],"creationDate":"2013-06-10","lastActivityDate":"2013-06-10","score":0,"viewCount":149,"owner":{"type":"StackOverflowUser","id":1096351,"displayName":"Andreas","reputation":6},"source":[{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>I've activated proguard in my application to obfuscate my code. The problem is my activity where InAppBilling happens, does not working anymore. First I get an successful request from my own server and then nothing happens. It seems for me that GSON is crashing. I already use this code on my proguard config file but it doesn't solve the problem:</p>"},"units":[{"type":"TextUnit","id":"[17028533]-[1071340419]","astNode":{"type":"TextFragmentNode","text":"<p>I've activated proguard in my application to obfuscate my code. The problem is my activity where InAppBilling happens, does not working anymore. First I get an successful request from my own server and then nothing happens. It seems for me that GSON is crashing. I already use this code on my proguard config file but it doesn't solve the problem:</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"InAppBilling","comments":[]},"comments":[]}],"comments":[]}]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"solv":1,"success":1,"request":1,"server":1,"proguard":2,"problem":2,"crash":1,"config":1,"gson":1,"work":1,"obfusc":1,"code":2,"anymor":1,"activ":2,"bill":1,"applic":1,"app":1,"file":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"InAppBilling","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"InAppBilling","comments":[]}]},{"declarators":[]},{"averageLevel":"Negative"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlNode","name":{"type":"XmlNameNode","value":"pre"},"attributes":[],"elements":[{"type":"XmlNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"##---------------Begin: proguard configuration for Gson  ----------\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n# removes such information by default, so configure it to keep all of it.\n-keepattributes Signature\n# For using GSON @Expose annotation\n-keepattributes *Annotation*\n# Gson specific classes\n-keep class sun.misc.Unsafe { *; }\n#-keep class com.google.gson.stream.** { *; }\n# Application classes that will be serialized/deserialized over Gson\n-keep class com.google.gson.examples.android.model.** { *; }\n##---------------End: proguard configuration for Gson  ----------\n"}]}]},"units":[{"type":"StructuredFragmentUnit","id":"[17028533]-[-1283286323]","astNode":{"type":"CodeFragmentSequence","fragments":[{"type":"TextFragmentNode","text":"##---------------Begin: proguard configuration for Gson  ----------\n# Gson uses generic type information stored in a "},{"type":"ClassDeclarationNode","modifiers":[],"identifier":{"type":"IdentifierNode","name":"file","comments":[]},"labels":[],"comments":[]},{"type":"TextFragmentNode","text":"when working with fields. Proguard\n# removes such information by default, so configure it to keep all of it.\n-keepattributes Signature\n# For using GSON "},{"type":"AnnotationNode","identifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"Expose","comments":[]}],"comments":[]},"comments":[]},{"type":"TextFragmentNode","text":" annotation\n-keepattributes *Annotation*\n# Gson specific classes\n-keep "},{"type":"ClassDeclarationNode","modifiers":[],"identifier":{"type":"IdentifierNode","name":"sun","comments":[]},"labels":[],"comments":[]},{"type":"TextFragmentNode","text":".misc.Unsafe { *; }\n#-keep "},{"type":"ClassDeclarationNode","modifiers":[],"identifier":{"type":"IdentifierNode","name":"com","comments":[]},"labels":[],"comments":[]},{"type":"TextFragmentNode","text":".google.gson.stream.** { *; }\n# Application classes that will be serialized/deserialized over Gson\n-keep "},{"type":"ClassDeclarationNode","modifiers":[],"identifier":{"type":"IdentifierNode","name":"com","comments":[]},"labels":[],"comments":[]},{"type":"TextFragmentNode","text":".google.gson.examples.android.model.** { *; }\n##---------------End: proguard configuration for Gson  ----------\n"}]},"rawText":"##---------------Begin: proguard configuration for Gson  ----------\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n# removes such information by default, so configure it to keep all of it.\n-keepattributes Signature\n# For using GSON @Expose annotation\n-keepattributes *Annotation*\n# Gson specific classes\n-keep class sun.misc.Unsafe { *; }\n#-keep class com.google.gson.stream.** { *; }\n# Application classes that will be serialized/deserialized over Gson\n-keep class com.google.gson.examples.android.model.** { *; }\n##---------------End: proguard configuration for Gson  ----------\n","metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"serial":1,"begin":1,"remov":1,"proguard":3,"googl":2,"field":1,"model":1,"signatur":1,"exampl":1,"keepattribut":2,"sun":1,"store":1,"configur":3,"gson":8,"expos":1,"work":1,"generic":1,"annot":2,"inform":2,"stream":1,"specif":1,"applic":1,"misc":1,"end":1,"class":2,"file":1,"unsaf":1,"deseri":1,"type":1,"android":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[{"type":"IdentifierNode","name":"file","comments":[]},{"type":"IdentifierNode","name":"Expose","comments":[]},{"type":"IdentifierNode","name":"sun","comments":[]},{"type":"IdentifierNode","name":"com","comments":[]}]},{"declarators":[]},{"grade":0.0044055599719285965}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>I hope someone has a solution to this problem.</p>"},"units":[{"type":"TextUnit","id":"[17028533]-[484885502]","astNode":{"type":"TextFragmentNode","text":"<p>I hope someone has a solution to this problem.</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"solut":1,"hope":1,"problem":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Neutral"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]},{"type":"SourceInfo","node":{"type":"XmlTextNode","contents":"<p>Best regards\nAndy</p>"},"units":[{"type":"TextUnit","id":"[17028533]-[1487093867]","astNode":{"type":"TextFragmentNode","text":"<p>Best regards\nAndy</p>"},"codeFragments":{"type":"CodeFragmentSequence","fragments":[]},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"andi":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"identifiers":[]},{"declarators":[]},{"averageLevel":"Positive"},{"fleshReadingEaseScore":121.2,"fleshKincaidGradeLevel":-3.4,"automatedReadingIndex":-16.1,"gunningFogIndex":0.4,"smogIndex":3.0,"colemanLiauIndex":-39.8}]}]}]},"answers":[]}