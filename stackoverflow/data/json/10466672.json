{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":10466672,
    "title":"Exception in thread &quot;Thread-8&quot; java.lang.StackOverflowError...at java.util.Random.nextInt(Unknown Source)",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":13519579,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":7,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":928711,
          "displayName":"Guillaume Polet",
          "reputation":33487
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"You should consider posting some more code and some more of the stacktrace because a stacoverflow is a recursion that just goes too deep and the stack gets filled. Therefore, the beginning of the stacktrace is hardly an indication of the problem."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519579]-[-1121098622]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"You should consider posting some more code and some more of the stacktrace because a stacoverflow is a recursion that just goes too deep and the stack gets filled. Therefore, the beginning of the stacktrace is hardly an indication of the problem."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "post":1,
                      "begin":1,
                      "stacoverflow":1,
                      "problem":1,
                      "code":1,
                      "recurs":1,
                      "indic":1,
                      "stacktrac":2,
                      "deep":1,
                      "fill":1,
                      "stack":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519705,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":122003,
          "displayName":"Everyone",
          "reputation":1322
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Is the object 'rand' shared amongst the threads?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519705]-[-1374179334]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Is the object 'rand' shared amongst the threads?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "object":1,
                      "share":1,
                      "rand":1,
                      "thread":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519753,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1348782,
          "displayName":"nommyravian",
          "reputation":611
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"&quot;rand&quot; is not shared. Every thread creates it for using. I think that there is something wrong with the index bounds of arrays i'm using because i couldn't generate the above scenario again but encountered with some new. stacktraces is a good option, I'm doing this now..."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519753]-[1545737162]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"&quot;rand&quot; is not shared. Every thread creates it for using. I think that there is something wrong with the index bounds of arrays i'm using because i couldn't generate the above scenario again but encountered with some new. stacktraces is a good option, I'm doing this now..."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "scenario":1,
                      "wrong":1,
                      "good":1,
                      "option":1,
                      "share":1,
                      "array":1,
                      "thread":1,
                      "bound":1,
                      "stacktrac":1,
                      "rand":1,
                      "generat":1,
                      "encount":1,
                      "quot":2,
                      "creat":1,
                      "index":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519820,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":122003,
          "displayName":"Everyone",
          "reputation":1322
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"This appears to happen within the Random ... can you use Math.random in lieu of java.util.Random (which I assume you use at present) and check whether the error you encountered recurs?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519820]-[1620988465]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"This appears to happen within the Random ... can you use Math.random in lieu of java.util.Random (which I assume you use at present) and check whether the error you encountered recurs?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "lieu":1,
                      "assum":1,
                      "random":3,
                      "util":1,
                      "happen":1,
                      "appear":1,
                      "present":1,
                      "math":1,
                      "check":1,
                      "error":1,
                      "recur":1,
                      "encount":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Random",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519827,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":928711,
          "displayName":"Guillaume Polet",
          "reputation":33487
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Everyone read my first comment. it is unlikely random that is the problem"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519827]-[1473712758]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Everyone read my first comment. it is unlikely random that is the problem"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Everyone",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "comment":1,
                      "random":1,
                      "read":1,
                      "problem":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519909,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":122003,
          "displayName":"Everyone",
          "reputation":1322
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@GuillaumePolet: It would be helpful if the OP could post more code, and specify the relevant JDK version. At the same time, whilst I admit I may be wrong, AtomicLong is used internally by java.util.Random ... hence my recommendation to try using the alternate implementation"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519909]-[714491190]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@GuillaumePolet: It would be helpful if the OP could post more code, and specify the relevant JDK version. At the same time, whilst I admit I may be wrong, AtomicLong is used internally by java.util.Random ... hence my recommendation to try using the alternate implementation"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"GuillaumePolet",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"AtomicLong",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "recommend":1,
                      "post":1,
                      "random":1,
                      "util":1,
                      "wrong":1,
                      "relev":1,
                      "altern":1,
                      "guillaum":1,
                      "code":1,
                      "help":1,
                      "version":1,
                      "whilst":1,
                      "implement":1,
                      "polet":1,
                      "admit":1,
                      "atom":1,
                      "time":1,
                      "intern":1,
                      "jdk":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Random",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"AtomicLong",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13519969,
        "postId":10466672,
        "creationDate":"2012-05-05",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":928711,
          "displayName":"Guillaume Polet",
          "reputation":33487
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Everyone Math.random() uses also java.util.Random behind the scenes. For the problem he has, read my answer below, it may help you understand what is going on and why you should not waste time investigating java.util.Random"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13519969]-[121558219]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Everyone Math.random() uses also java.util.Random behind the scenes. For the problem he has, read my answer below, it may help you understand what is going on and why you should not waste time investigating java.util.Random"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Everyone",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "read":1,
                      "random":3,
                      "wast":1,
                      "util":2,
                      "problem":1,
                      "understand":1,
                      "investig":1,
                      "math":1,
                      "scene":1,
                      "answer":1,
                      "time":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Random",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":13520069,
        "postId":10466672,
        "creationDate":"2012-05-06",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":122003,
          "displayName":"Everyone",
          "reputation":1322
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@GuillaumePolet: Thank you (+: Hopefully your answer will have solved his/her problem."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[10466672-cu13520069]-[1454897734]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@GuillaumePolet: Thank you (+: Hopefully your answer will have solved his/her problem."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"GuillaumePolet",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "solv":1,
                      "problem":1,
                      "guillaum":1,
                      "answer":1,
                      "polet":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "multithreading",
      "random",
      "synchronization",
      "thread-safety"
    ],
    "creationDate":"2012-05-05",
    "lastActivityDate":"2012-05-05",
    "score":0,
    "viewCount":1389,
    "owner":{
      "type":"StackOverflowUser",
      "id":1348782,
      "displayName":"nommyravian",
      "reputation":611
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Exception in thread &quot;Thread-8&quot; java.lang.StackOverflowError at sun.misc.Unsafe.compareAndSwapLong(Native Method) at java.util.concurrent.atomic.AtomicLong.compareAndSet(Unknown Source) at java.util.Random.next(Unknown Source) at java.util.Random.nextInt(Unknown Source) at sim.ant.colony.ants.Forager.moveTo(Forager.java:108) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[10466672]-[2067683988]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"Thread-8\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"StackOverflowError",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "lines":[
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"compareAndSwapLong",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Native Method"
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"concurrent",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"atomic",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"AtomicLong",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"compareAndSet",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Unknown Source"
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"next",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Unknown Source"
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"nextInt",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Unknown Source"
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"sim",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"ant",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"colony",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"ants",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"Forager",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"moveTo",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Forager.java",
                        "lineNumber":108
                      }
                    }
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":"Exception in thread \"Thread-8\" java.lang.StackOverflowError at sun.misc.Unsafe.compareAndSwapLong(Native Method)at java.util.concurrent.atomic.AtomicLong.compareAndSet(Unknown Source)at java.util.Random.next(Unknown Source)at java.util.Random.nextInt(Unknown Source)at sim.ant.colony.ants.Forager.moveTo(Forager.java:108)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "random":2,
                  "move":1,
                  "concurr":1,
                  "util":3,
                  "overflow":1,
                  "sim":1,
                  "ant":2,
                  "set":1,
                  "sun":1,
                  "unknown":3,
                  "thread":2,
                  "coloni":1,
                  "error":1,
                  "compar":2,
                  "stack":1,
                  "misc":1,
                  "swap":1,
                  "atom":2,
                  "unsaf":1,
                  "lang":1,
                  "sourc":3,
                  "forag":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm working with a multi threaded application(Ant Simulation Colony) where I created every ant as a thread and when tens of threads (ants) are running, above exception occurs after every few turns and thread is killed. code where I'm using Random() is;</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[10466672]-[1091783967]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm working with a multi threaded application(Ant Simulation Colony) where I created every ant as a thread and when tens of threads (ants) are running, above exception occurs after every few turns and thread is killed. code where I'm using Random() is;</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "random":1,
                  "ant":3,
                  "occur":1,
                  "run":1,
                  "simul":1,
                  "work":1,
                  "code":1,
                  "thread":4,
                  "coloni":1,
                  "applic":1,
                  "turn":1,
                  "ten":1,
                  "kill":1,
                  "creat":1,
                  "multi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Random rand = new Random(); return adjacents.elementAt(rand.nextInt(8)); "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[10466672]-[-799950044]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"LocalVariableDeclarationStatementNode",
                  "modifiers":[
                    
                  ],
                  "declarators":{
                    "type":"VariableDeclaratorsNode",
                    "declarators":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"rand",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "assignment":{
                          "type":"VariableAssignmentNode",
                          "variableAssignment":{
                            "type":"VariableExpressionInitNode",
                            "expression":{
                              "type":"ConstructorCreatorNode",
                              "creatorType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Random",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "expressionArgs":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Random",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReturnStatementNode",
                  "expression":{
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"adjacents",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"elementAt",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"rand",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"nextInt",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"IntegerLiteralNode",
                                  "valueRep":"8"
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"Random rand = new Random(); return adjacents.elementAt(rand.nextInt(8)); ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "adjac":1,
                  "rand":2,
                  "random":2,
                  "element":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Random",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"adjacents",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"elementAt",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"rand",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"nextInt",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"IntegerLiteralNode",
                                  "valueRep":"8"
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"rand",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"nextInt",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        {
                          "type":"LiteralNode",
                          "node":{
                            "type":"IntegerLiteralNode",
                            "valueRep":"8"
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"rand",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Random",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Random",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>this code is written in a thread's local member function. So assuming every thread creates random numbers hundred of times and there are more than ten threads are working.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[10466672]-[1180827175]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>this code is written in a thread's local member function. So assuming every thread creates random numbers hundred of times and there are more than ten threads are working.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "number":1,
                  "assum":1,
                  "random":1,
                  "local":1,
                  "hundr":1,
                  "work":1,
                  "code":1,
                  "thread":3,
                  "member":1,
                  "function":1,
                  "written":1,
                  "ten":1,
                  "time":1,
                  "creat":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Can somebody help me with this exception?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[10466672]-[1036749298]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Can somebody help me with this exception?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":10466889,
      "questionId":10466672,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":13520559,
          "postId":10466889,
          "creationDate":"2012-05-06",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1348782,
            "displayName":"nommyravian",
            "reputation":611
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thank you Polet for your help but actually for my case, there are lot of threads so debugging a multi threaded application using debugger is not an easy task (remember that I can't produce the exception scenario with less threads). Number two is that I'm calling a member function of my Runnable from another member function of the same class and it was happening in a loop running for a stopping condition so limiting the scenario gives me only the call from previous function and then the exception at the above mentioned code (rand.nextInt(8)) so it didn't help as well."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10466889-cu13520559]-[-580509560]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thank you Polet for your help but actually for my case, there are lot of threads so debugging a multi threaded application using debugger is not an easy task (remember that I can't produce the exception scenario with less threads). Number two is that I'm calling a member function of my Runnable from another member function of the same class and it was happening in a loop running for a stopping condition so limiting the scenario gives me only the call from previous function and then the exception at the above mentioned code (rand.nextInt(8)) so it didn't help as well."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"and",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"rand",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"nextInt",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "scenario":2,
                        "number":1,
                        "task":1,
                        "loop":1,
                        "easi":1,
                        "produc":1,
                        "happen":1,
                        "condit":1,
                        "previous":1,
                        "run":1,
                        "stop":1,
                        "debug":1,
                        "code":1,
                        "rememb":1,
                        "thread":3,
                        "debugg":1,
                        "mention":1,
                        "member":2,
                        "function":3,
                        "rand":1,
                        "applic":1,
                        "runnabl":1,
                        "lot":1,
                        "polet":1,
                        "call":2,
                        "limit":1,
                        "multi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":13520610,
          "postId":10466889,
          "creationDate":"2012-05-06",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1348782,
            "displayName":"nommyravian",
            "reputation":611
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I changed the previously added logic and it helped me to overcome this exception. I guess that it was some where in my used data structures out of bound indexes. Thanks a lot for your help and concern by the way :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[10466889-cu13520610]-[-1397068954]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I changed the previously added logic and it helped me to overcome this exception. I guess that it was some where in my used data structures out of bound indexes. Thanks a lot for your help and concern by the way :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":1,
                        "previous":1,
                        "data":1,
                        "logic":1,
                        "structur":1,
                        "concern":1,
                        "help":1,
                        "bound":1,
                        "overcom":1,
                        "lot":1,
                        "ad":1,
                        "guess":1,
                        "index":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-05-05",
      "lastActivityDate":"2012-05-05",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":928711,
        "displayName":"Guillaume Polet",
        "reputation":33487
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Not really an answer to your problem but more an example of the problem you have, how you can track it and how you can fix it.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[2125957459]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Not really an answer to your problem but more an example of the problem you have, how you can track it and how you can fix it.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "fix":1,
                    "track":1,
                    "answer":1,
                    "problem":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Take the code below:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[1534291103]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Take the code below:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "code":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"import java.util.HashMap; import java.util.Map; public class StackOverflowExample { public static void a() { Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); map.putAll(b()); } private static Map&lt;String, String&gt; b() { Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); map.put(&quot;a&quot;, &quot;a&quot;); a(); return map; } public static void main(String[] args) { a(); } } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10466889]-[-1303719556]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"CompilationUnitNode",
                    "imports":[
                      {
                        "type":"ImportDeclarationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "isStatic":false,
                        "isOnDemand":false,
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ImportDeclarationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"Map",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "isStatic":false,
                        "isOnDemand":false,
                        "comments":[
                          
                        ]
                      }
                    ],
                    "typeDeclarations":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"StackOverflowExample",
                          "comments":[
                            
                          ]
                        },
                        "body":{
                          "type":"ClassBodyNode",
                          "declarations":[
                            {
                              "type":"MethodDeclaratorNode",
                              "modifiers":[
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"public",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"static",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "returnType":{
                                "type":"PrimitiveTypeNode",
                                "name":"void",
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"a",
                                "comments":[
                                  
                                ]
                              },
                              "parameters":{
                                "type":"FormalParametersNode",
                                "comments":[
                                  
                                ]
                              },
                              "arrayReturnType":[
                                
                              ],
                              "body":{
                                "type":"BlockNode",
                                "statements":[
                                  {
                                    "type":"LocalVariableDeclarationStatementNode",
                                    "modifiers":[
                                      
                                    ],
                                    "declarators":{
                                      "type":"VariableDeclaratorsNode",
                                      "declarators":[
                                        {
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"map",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ],
                                          "assignment":{
                                            "type":"VariableAssignmentNode",
                                            "variableAssignment":{
                                              "type":"VariableExpressionInitNode",
                                              "expression":{
                                                "type":"ConstructorCreatorNode",
                                                "creatorType":{
                                                  "type":"ReferenceTypeNode",
                                                  "ids":[
                                                    {
                                                      "type":"ParameterizedTypeNode",
                                                      "identifier":{
                                                        "type":"IdentifierNode",
                                                        "name":"HashMap",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "typeArguments":{
                                                        "type":"TypeArgumentsNode",
                                                        "types":[
                                                          {
                                                            "type":"ReferenceTypeNode",
                                                            "ids":[
                                                              {
                                                                "type":"ParameterizedTypeNode",
                                                                "identifier":{
                                                                  "type":"IdentifierNode",
                                                                  "name":"String",
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          {
                                                            "type":"ReferenceTypeNode",
                                                            "ids":[
                                                              {
                                                                "type":"ParameterizedTypeNode",
                                                                "identifier":{
                                                                  "type":"IdentifierNode",
                                                                  "name":"String",
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "expressionArgs":{
                                                  "type":"ExpressionListNode",
                                                  "arguments":[
                                                    
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "varType":{
                                            "type":"ReferenceTypeNode",
                                            "ids":[
                                              {
                                                "type":"ParameterizedTypeNode",
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"Map",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "typeArguments":{
                                                  "type":"TypeArgumentsNode",
                                                  "types":[
                                                    {
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    {
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          }
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "qualifiedIdentifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"map",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"putAll",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          {
                                            "type":"MethodInvocationNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"b",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "args":{
                                              "type":"ExpressionListNode",
                                              "arguments":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"MethodDeclaratorNode",
                              "modifiers":[
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"private",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"static",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "returnType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Map",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "typeArguments":{
                                      "type":"TypeArgumentsNode",
                                      "types":[
                                        {
                                          "type":"ReferenceTypeNode",
                                          "ids":[
                                            {
                                              "type":"ParameterizedTypeNode",
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"String",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        {
                                          "type":"ReferenceTypeNode",
                                          "ids":[
                                            {
                                              "type":"ParameterizedTypeNode",
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"String",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"b",
                                "comments":[
                                  
                                ]
                              },
                              "parameters":{
                                "type":"FormalParametersNode",
                                "comments":[
                                  
                                ]
                              },
                              "arrayReturnType":[
                                
                              ],
                              "body":{
                                "type":"BlockNode",
                                "statements":[
                                  {
                                    "type":"LocalVariableDeclarationStatementNode",
                                    "modifiers":[
                                      
                                    ],
                                    "declarators":{
                                      "type":"VariableDeclaratorsNode",
                                      "declarators":[
                                        {
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"map",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ],
                                          "assignment":{
                                            "type":"VariableAssignmentNode",
                                            "variableAssignment":{
                                              "type":"VariableExpressionInitNode",
                                              "expression":{
                                                "type":"ConstructorCreatorNode",
                                                "creatorType":{
                                                  "type":"ReferenceTypeNode",
                                                  "ids":[
                                                    {
                                                      "type":"ParameterizedTypeNode",
                                                      "identifier":{
                                                        "type":"IdentifierNode",
                                                        "name":"HashMap",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "typeArguments":{
                                                        "type":"TypeArgumentsNode",
                                                        "types":[
                                                          {
                                                            "type":"ReferenceTypeNode",
                                                            "ids":[
                                                              {
                                                                "type":"ParameterizedTypeNode",
                                                                "identifier":{
                                                                  "type":"IdentifierNode",
                                                                  "name":"String",
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          {
                                                            "type":"ReferenceTypeNode",
                                                            "ids":[
                                                              {
                                                                "type":"ParameterizedTypeNode",
                                                                "identifier":{
                                                                  "type":"IdentifierNode",
                                                                  "name":"String",
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "expressionArgs":{
                                                  "type":"ExpressionListNode",
                                                  "arguments":[
                                                    
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "varType":{
                                            "type":"ReferenceTypeNode",
                                            "ids":[
                                              {
                                                "type":"ParameterizedTypeNode",
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"Map",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "typeArguments":{
                                                  "type":"TypeArgumentsNode",
                                                  "types":[
                                                    {
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    {
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          }
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "qualifiedIdentifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"map",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"put",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          {
                                            "type":"LiteralNode",
                                            "node":{
                                              "type":"StringLiteralNode",
                                              "valueRep":"\"a\""
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"LiteralNode",
                                            "node":{
                                              "type":"StringLiteralNode",
                                              "valueRep":"\"a\""
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"a",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ReturnStatementNode",
                                    "expression":{
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"map",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"MethodDeclaratorNode",
                              "modifiers":[
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"public",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"static",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "returnType":{
                                "type":"PrimitiveTypeNode",
                                "name":"void",
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"main",
                                "comments":[
                                  
                                ]
                              },
                              "parameters":{
                                "type":"FormalParametersNode",
                                "parameters":{
                                  "type":"FormalParameterDeclsNode",
                                  "modifiers":[
                                    
                                  ],
                                  "parameterType":{
                                    "type":"ArrayTypeNode",
                                    "typeNode":{
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"String",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "depth":[
                                      {
                                        "type":"ArrayDimensionNode",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ]
                                  },
                                  "nextDeclarator":{
                                    "type":"AdditionalFormalParameterDeclNode",
                                    "variableDeclarator":{
                                      "type":"VariableDeclaratorNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"args",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "arrayDepth":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                },
                                "comments":[
                                  
                                ]
                              },
                              "arrayReturnType":[
                                
                              ],
                              "body":{
                                "type":"BlockNode",
                                "statements":[
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"a",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  }
                ]
              },
              "rawText":"import java.util.HashMap; import java.util.Map; public class StackOverflowExample { public static void a() { Map<String, String> map = new HashMap<String, String>(); map.putAll(b()); } private static Map<String, String> b() { Map<String, String> map = new HashMap<String, String>(); map.put(\"a\", \"a\"); a(); return map; } public static void main(String[] args) { a(); } } ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "util":2,
                    "overflow":1,
                    "map":12,
                    "main":1,
                    "hash":3,
                    "stack":1,
                    "put":2,
                    "arg":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HashMap",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"util",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Map",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HashMap",
                            "comments":[
                              
                            ]
                          },
                          "typeArguments":{
                            "type":"TypeArgumentsNode",
                            "types":[
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Map",
                            "comments":[
                              
                            ]
                          },
                          "typeArguments":{
                            "type":"TypeArgumentsNode",
                            "types":[
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"String",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"map",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"putAll",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"MethodInvocationNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"b",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"map",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"a\""
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"a\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"a",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"map",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"ConstructorCreatorNode",
                            "creatorType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"HashMap",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "typeArguments":{
                                    "type":"TypeArgumentsNode",
                                    "types":[
                                      {
                                        "type":"ReferenceTypeNode",
                                        "ids":[
                                          {
                                            "type":"ParameterizedTypeNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"String",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      {
                                        "type":"ReferenceTypeNode",
                                        "ids":[
                                          {
                                            "type":"ParameterizedTypeNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"String",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "expressionArgs":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Map",
                              "comments":[
                                
                              ]
                            },
                            "typeArguments":{
                              "type":"TypeArgumentsNode",
                              "types":[
                                {
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"String",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"String",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"args",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It will produce a StackOverFlowError instantly:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[83358861]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It will produce a StackOverFlowError instantly:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"StackOverFlowError",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "produc":1,
                    "error":1,
                    "instant":1,
                    "flow":1,
                    "stack":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"StackOverFlowError",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"Exception in thread &quot;main&quot; java.lang.StackOverflowError at java.util.HashMap$Entry.&lt;init&gt;(Unknown Source) at java.util.HashMap.addEntry(Unknown Source) at java.util.HashMap.put(Unknown Source) at StackOverflowExample.b(StackOverflowExample.java:14) "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10466889]-[-963832043]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"StackTraceNode",
                    "threadName":{
                      "type":"StackTraceThreadNameNode",
                      "threadName":"\"main\""
                    },
                    "exceptionName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"StackOverflowError",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "lines":[
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap$Entry",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"<init>",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"addEntry",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"put",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":14
                        }
                      }
                    ],
                    "causedByTraces":[
                      
                    ]
                  }
                ]
              },
              "rawText":"Exception in thread \"main\" java.lang.StackOverflowError at java.util.HashMap$Entry.<init>(Unknown Source)at java.util.HashMap.addEntry(Unknown Source)at java.util.HashMap.put(Unknown Source)at StackOverflowExample.b(StackOverflowExample.java:14)",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "util":3,
                    "overflow":3,
                    "map":3,
                    "unknown":3,
                    "main":1,
                    "hash":3,
                    "thread":1,
                    "entri":2,
                    "error":1,
                    "stack":3,
                    "put":1,
                    "lang":1,
                    "add":1,
                    "sourc":3,
                    "init":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The problem is not in HashMap, nor HashMap$Entry. The problem is that a() and b() call each other recursively without a proper stop-condition, meaning infinitely. If you actually look below in the stack, you immediately discover that pattern:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[274591954]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The problem is not in HashMap, nor HashMap$Entry. The problem is that a() and b() call each other recursively without a proper stop-condition, meaning infinitely. If you actually look below in the stack, you immediately discover that pattern:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HashMap",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pattern":1,
                    "map":2,
                    "proper":1,
                    "problem":2,
                    "condit":1,
                    "mean":1,
                    "stop":1,
                    "hash":2,
                    "entri":1,
                    "recurs":1,
                    "discov":1,
                    "stack":1,
                    "infinit":1,
                    "immedi":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HashMap",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"Exception in thread &quot;main&quot; java.lang.StackOverflowError at java.util.HashMap$Entry.&lt;init&gt;(Unknown Source) at java.util.HashMap.addEntry(Unknown Source) at java.util.HashMap.put(Unknown Source) at StackOverflowExample.b(StackOverflowExample.java:14) at StackOverflowExample.a(StackOverflowExample.java:8) at StackOverflowExample.b(StackOverflowExample.java:15) at StackOverflowExample.a(StackOverflowExample.java:8) at StackOverflowExample.b(StackOverflowExample.java:15) at StackOverflowExample.a(StackOverflowExample.java:8) at StackOverflowExample.b(StackOverflowExample.java:15) at StackOverflowExample.a(StackOverflowExample.java:8) at StackOverflowExample.b(StackOverflowExample.java:15) at StackOverflowExample.a(StackOverflowExample.java:8) at StackOverflowExample.b(StackOverflowExample.java:15) ... "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[10466889]-[-702695346]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"StackTraceNode",
                    "threadName":{
                      "type":"StackTraceThreadNameNode",
                      "threadName":"\"main\""
                    },
                    "exceptionName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"StackOverflowError",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "lines":[
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap$Entry",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"<init>",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"addEntry",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"java",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"util",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"put",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"Unknown Source"
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":14
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":8
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":15
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":8
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":15
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":8
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":15
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":8
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":15
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"a",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":8
                        }
                      },
                      {
                        "type":"StackTraceLineNode",
                        "methodName":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"StackOverflowExample",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"b",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "location":{
                          "type":"SourceLocationNode",
                          "fileName":"StackOverflowExample.java",
                          "lineNumber":15
                        }
                      }
                    ],
                    "causedByTraces":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"... "
                  }
                ]
              },
              "rawText":"Exception in thread \"main\" java.lang.StackOverflowError at java.util.HashMap$Entry.<init>(Unknown Source)at java.util.HashMap.addEntry(Unknown Source)at java.util.HashMap.put(Unknown Source)at StackOverflowExample.b(StackOverflowExample.java:14)at StackOverflowExample.a(StackOverflowExample.java:8)at StackOverflowExample.b(StackOverflowExample.java:15)at StackOverflowExample.a(StackOverflowExample.java:8)at StackOverflowExample.b(StackOverflowExample.java:15)at StackOverflowExample.a(StackOverflowExample.java:8)at StackOverflowExample.b(StackOverflowExample.java:15)at StackOverflowExample.a(StackOverflowExample.java:8)at StackOverflowExample.b(StackOverflowExample.java:15)at StackOverflowExample.a(StackOverflowExample.java:8)at StackOverflowExample.b(StackOverflowExample.java:15)... ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "util":3,
                    "overflow":23,
                    "map":3,
                    "unknown":3,
                    "main":1,
                    "hash":3,
                    "thread":1,
                    "entri":2,
                    "error":1,
                    "stack":23,
                    "put":1,
                    "lang":1,
                    "add":1,
                    "sourc":3,
                    "init":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You need to find the recursion that goes too deep in your code. Either fix it or change it to a non-recursive method.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[-1560997099]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You need to find the recursion that goes too deep in your code. Either fix it or change it to a non-recursive method.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "find":1,
                    "method":1,
                    "fix":1,
                    "code":1,
                    "recurs":2,
                    "deep":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Using a debugger can be of great help for that as you can step into each method call and put breakpoints (amongst plenty of other good stuffs).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10466889]-[703898901]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Using a debugger can be of great help for that as you can step into each method call and put breakpoints (amongst plenty of other good stuffs).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "step":1,
                    "good":1,
                    "debugg":1,
                    "stuff":1,
                    "put":1,
                    "breakpoint":1,
                    "plenti":1,
                    "call":1,
                    "great":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}