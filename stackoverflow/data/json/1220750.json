{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":1220750,
    "title":"When and why we have to implement Comparable interface?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":1046487,
        "postId":1220750,
        "creationDate":"2009-08-03",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":49246,
          "displayName":"starblue",
          "reputation":31642
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"See also http://stackoverflow.com/questions/1167478/what-is-a-practical-application-of-javas-compareto-method."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[1220750-cu1046487]-[1455283230]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"See also http://stackoverflow.com/questions/1167478/what-is-a-practical-application-of-javas-compareto-method."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "method":1,
                      "java":1,
                      "compareto":1,
                      "stackoverflow":1,
                      "applic":1,
                      "practic":1,
                      "http":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "collections"
    ],
    "creationDate":"2009-08-03",
    "lastActivityDate":"2009-08-03",
    "score":1,
    "viewCount":918,
    "owner":{
      "type":"StackOverflowUser",
      "id":124339,
      "displayName":"Johanna",
      "reputation":3714
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>in which situations we <strong>have to</strong> implement the Comparable interface?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[1220750]-[-1275592504]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>in which situations we <strong>have to</strong> implement the Comparable interface?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "situat":1,
                  "compar":1,
                  "strong":2,
                  "implement":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":1220770,
      "questionId":1220750,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":1047255,
          "postId":1220770,
          "creationDate":"2009-08-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":124339,
            "displayName":"Johanna",
            "reputation":3714
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Chad Okere:also for HashMap???"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1220770-cu1047255]-[-1165376469]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Chad Okere:also for HashMap???"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "oker":1,
                        "hash":1,
                        "chad":1,
                        "map":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"HashMap",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1045615,
          "postId":1220770,
          "creationDate":"2009-08-03",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":148870,
            "displayName":"Amber",
            "reputation":182027
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"To expand on takteek's answer, basically, you'll need to implement the Comparable interface to use most of the built-in sorting functionality for various sorted collections."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1220770-cu1045615]-[1605518293]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"To expand on takteek's answer, basically, you'll need to implement the Comparable interface to use most of the built-in sorting functionality for various sorted collections."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "built":1,
                        "expand":1,
                        "takteek":1,
                        "compar":1,
                        "function":1,
                        "implement":1,
                        "answer":1,
                        "collect":1,
                        "sort":2,
                        "basic":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1045626,
          "postId":1220770,
          "creationDate":"2009-08-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":124339,
            "displayName":"Johanna",
            "reputation":3714
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"or can we say we have to use it for the collection which is unsorted and unordered and we want to find the index of the specified element of that collection(like HashMap collection)????"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1220770-cu1045626]-[1038593941]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"or can we say we have to use it for the collection which is unsorted and unordered and we want to find the index of the specified element of that collection(like HashMap collection)????"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"HashMap",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "find":1,
                        "unsort":1,
                        "map":1,
                        "element":1,
                        "hash":1,
                        "unord":1,
                        "collect":3,
                        "index":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"HashMap",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1045963,
          "postId":1220770,
          "creationDate":"2009-08-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":117839,
            "displayName":"Michael Wiles",
            "reputation":8595
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The Comparable interface specifies what is known as the &quot;natural&quot; ordering of the objects."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1220770-cu1045963]-[-2094601372]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The Comparable interface specifies what is known as the &quot;natural&quot; ordering of the objects."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "natur":1,
                        "object":1,
                        "compar":1,
                        "order":1,
                        "quot":2,
                        "specifi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1045971,
          "postId":1220770,
          "creationDate":"2009-08-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":48839,
            "displayName":"Chad Okere",
            "reputation":3314
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Johanna: You don't need to implement it for hastables, since they go by the hash code"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1220770-cu1045971]-[1726294406]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Johanna: You don't need to implement it for hastables, since they go by the hash code"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "code":1,
                        "hash":1,
                        "implement":1,
                        "johanna":1,
                        "hastabl":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2009-08-03",
      "lastActivityDate":"2009-08-03",
      "score":6,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":115563,
        "displayName":"takteek",
        "reputation":4173
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>When you want to be able to compare 2 objects and get a result of equal, less than, or greater than.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1220770]-[513685462]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>When you want to be able to compare 2 objects and get a result of equal, less than, or greater than.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "result":1,
                    "object":1,
                    "equal":1,
                    "compar":1,
                    "greater":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Implementing Comparable gives your objects a <code>compareTo</code> method. If you add them to a sorted list then they will automatically be sorted based on what your <code>compareTo</code> method returns.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1220770]-[-1626210956]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Implementing Comparable gives your objects a <code>compareTo</code> method. If you add them to a sorted list then they will automatically be sorted based on what your <code>compareTo</code> method returns.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"compareTo",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"compareTo",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":2,
                    "return":1,
                    "object":1,
                    "base":1,
                    "code":4,
                    "automat":1,
                    "compar":3,
                    "implement":1,
                    "sort":2,
                    "add":1,
                    "list":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It's pretty basic. I don't know what else there is to add.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1220770]-[-769541699]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It's pretty basic. I don't know what else there is to add.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "basic":1,
                    "pretti":1,
                    "add":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":1224105,
      "questionId":1220750,
      "comments":[
        
      ],
      "creationDate":"2009-08-03",
      "lastActivityDate":"2009-08-03",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":148629,
        "displayName":"Munir",
        "reputation":21
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>When your class implement the Comparable interface, you <strong>have</strong> to implement the compareTo() method in a way that you can clearly tell where an instance of your class would go in an ordered list of such instances. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1224105]-[-1053071669]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>When your class implement the Comparable interface, you <strong>have</strong> to implement the compareTo() method in a way that you can clearly tell where an instance of your class would go in an ordered list of such instances. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"implement",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"compareTo",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"would",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "strong":2,
                    "compar":2,
                    "order":1,
                    "implement":2,
                    "list":1,
                    "instanc":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Implementing efficient sorting algorithms and ordered collections isn't trivial. Therefore you would do this when you want objects of a class to have natural ordering, so you can use the proven sorting and order-dependent algorithms and classes provided by Java instead of implementing your own, like having the contents of a TreeSet remain ordered after insertions/deletions, or using Collections.sort(). </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1224105]-[-1250375601]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Implementing efficient sorting algorithms and ordered collections isn't trivial. Therefore you would do this when you want objects of a class to have natural ordering, so you can use the proven sorting and order-dependent algorithms and classes provided by Java instead of implementing your own, like having the contents of a TreeSet remain ordered after insertions/deletions, or using Collections.sort(). </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"to",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"TreeSet",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "provid":1,
                    "natur":1,
                    "proven":1,
                    "delet":1,
                    "depend":1,
                    "insert":1,
                    "set":1,
                    "effici":1,
                    "object":1,
                    "remain":1,
                    "algorithm":2,
                    "order":4,
                    "isn":1,
                    "content":1,
                    "implement":2,
                    "class":1,
                    "tree":1,
                    "collect":2,
                    "sort":3,
                    "trivial":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"TreeSet",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}