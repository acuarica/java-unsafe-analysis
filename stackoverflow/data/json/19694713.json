{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":19694713,
    "title":"OutOfMemory PermGen space",
    "comments":[
      
    ],
    "tags":[
      "java",
      "rmi",
      "permgen"
    ],
    "creationDate":"2013-10-30",
    "lastActivityDate":"2013-12-21",
    "score":0,
    "viewCount":505,
    "owner":{
      "type":"StackOverflowUser",
      "id":1932781,
      "displayName":"Travis",
      "reputation":397
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm getting an OutOfMemory: PermGen space error when running my application. A brief description:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19694713]-[460047991]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm getting an OutOfMemory: PermGen space error when running my application. A brief description:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"OutOfMemory",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PermGen",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "descript":1,
                  "run":1,
                  "space":1,
                  "error":1,
                  "applic":1,
                  "perm":1,
                  "gen":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"OutOfMemory",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The error does not occur when running from the source code, but it does occur when I run from the deployed .jnlp launcher. The error occurs in a screen that retrieves data from our company database via RMI. Running from the source code and from the launcher both use the same RMI url. Running from the source code and from the launcher both use the same Java version (6_38). The app is hosted in OC4J 10.1.3. When the error occurs, it kills not only my app, but also the Java console.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19694713]-[-1118513459]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The error does not occur when running from the source code, but it does occur when I run from the deployed .jnlp launcher. The error occurs in a screen that retrieves data from our company database via RMI. Running from the source code and from the launcher both use the same RMI url. Running from the source code and from the launcher both use the same Java version (6_38). The app is hosted in OC4J 10.1.3. When the error occurs, it kills not only my app, but also the Java console.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "url":1,
                  "retriev":1,
                  "occur":4,
                  "host":1,
                  "run":4,
                  "data":1,
                  "consol":1,
                  "code":3,
                  "version":1,
                  "jnlp":1,
                  "error":3,
                  "screen":1,
                  "deploy":1,
                  "app":2,
                  "databas":1,
                  "kill":1,
                  "compani":1,
                  "sourc":3,
                  "rmi":2,
                  "launcher":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I've added the below options to the server properties in the Application Sever Control, as suggested in some other questions, but to no avail.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19694713]-[1489942321]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I've added the below options to the server properties in the Application Sever Control, as suggested in some other questions, but to no avail.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "properti":1,
                  "question":1,
                  "server":1,
                  "suggest":1,
                  "option":1,
                  "sever":1,
                  "applic":1,
                  "ad":1,
                  "control":1,
                  "avail":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19694713]-[1523595477]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"-XX:+"
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"CMSClassUnloadingEnabled",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-XX:+"
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"CMSPermGenSweepingEnabled",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "cmsclass":1,
                  "sweep":1,
                  "cmsperm":1,
                  "unload":1,
                  "enabl":2,
                  "gen":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"CMSClassUnloadingEnabled",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"CMSPermGenSweepingEnabled",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The error as recorded in the java console is as such, taken from the trace file:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19694713]-[-1266380741]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The error as recorded in the java console is as such, taken from the trace file:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "trace":1,
                  "consol":1,
                  "error":1,
                  "file":1,
                  "record":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Couldn't process record: java.lang.OutOfMemoryError: PermGen space at sun.misc.Unsafe.defineClass(Native Method) at sun.reflect.ClassDefiner.defineClass(Unknown Source) at sun.reflect.MethodAccessorGenerator$1.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at sun.reflect.MethodAccessorGenerator.generate(Unknown Source) at sun.reflect.MethodAccessorGenerator.generateSerializationConstructor(Unknown Source) at sun.reflect.ReflectionFactory.newConstructorForSerialization(Unknown Source) at java.io.ObjectStreamClass.getSerializableConstructor(Unknown Source) at java.io.ObjectStreamClass.access$1500(Unknown Source) at java.io.ObjectStreamClass$2.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.io.ObjectStreamClass.&lt;init&gt;(Unknown Source) at java.io.ObjectStreamClass.lookup(Unknown Source) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[19694713]-[-1465372462]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"Couldn't process record: "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"OutOfMemoryError",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":": "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PermGen",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"space "
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"defineClass",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"reflect",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ClassDefiner",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"defineClass",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"reflect",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"MethodAccessorGenerator$1",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"security",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"AccessController",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"doPrivileged",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"reflect",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"MethodAccessorGenerator",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"generate",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"reflect",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"MethodAccessorGenerator",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"generateSerializationConstructor",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"reflect",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ReflectionFactory",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"newConstructorForSerialization",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"io",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ObjectStreamClass",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getSerializableConstructor",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"io",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ObjectStreamClass",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"access$1500",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"io",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ObjectStreamClass$2",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"security",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"AccessController",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"doPrivileged",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"io",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ObjectStreamClass",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"<init>",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"io",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ObjectStreamClass",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lookup",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Unknown Source"
                  }
                }
              ]
            },
            "rawText":"Couldn't process record: java.lang.OutOfMemoryError: PermGen space at sun.misc.Unsafe.defineClass(Native Method)at sun.reflect.ClassDefiner.defineClass(Unknown Source)at sun.reflect.MethodAccessorGenerator$1.run(Unknown Source)at java.security.AccessController.doPrivileged(Native Method)at sun.reflect.MethodAccessorGenerator.generate(Unknown Source)at sun.reflect.MethodAccessorGenerator.generateSerializationConstructor(Unknown Source)at sun.reflect.ReflectionFactory.newConstructorForSerialization(Unknown Source)at java.io.ObjectStreamClass.getSerializableConstructor(Unknown Source)at java.io.ObjectStreamClass.access$1500(Unknown Source)at java.io.ObjectStreamClass$2.run(Unknown Source)at java.security.AccessController.doPrivileged(Native Method)at java.io.ObjectStreamClass.<init>(Unknown Source)at java.io.ObjectStreamClass.lookup(Unknown Source)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "serial":2,
                  "lookup":1,
                  "method":6,
                  "process":1,
                  "run":2,
                  "serializ":1,
                  "sun":6,
                  "privileg":2,
                  "constructor":3,
                  "unknown":10,
                  "secur":2,
                  "factori":1,
                  "object":5,
                  "accessor":3,
                  "space":1,
                  "error":1,
                  "stream":5,
                  "misc":1,
                  "perm":1,
                  "generat":5,
                  "control":2,
                  "unsaf":1,
                  "lang":1,
                  "defin":3,
                  "sourc":10,
                  "init":1,
                  "reflect":6,
                  "record":1,
                  "gen":1,
                  "access":3,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"OutOfMemoryError",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm not sure what other info might be helpful, and I'm at a loss as to how to continue. Any guidance would be welcome.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[19694713]-[-998887310]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm not sure what other info might be helpful, and I'm at a loss as to how to continue. Any guidance would be welcome.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "guidanc":1,
                  "info":1,
                  "help":1,
                  "loss":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":19694796,
      "questionId":19694713,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":29320301,
          "postId":19694796,
          "creationDate":"2013-11-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1932781,
            "displayName":"Travis",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It is already 256M, unfortunately. From what I've read, it sounds like I've got a memory leak somewhere, but the error messages aren't helpful in that regard (at least to me). The application is an inherited one, and none of the original writers are employed at my workplace anymore."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19694796-cu29320301]-[377209636]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It is already 256M, unfortunately. From what I've read, it sounds like I've got a memory leak somewhere, but the error messages aren't helpful in that regard (at least to me). The application is an inherited one, and none of the original writers are employed at my workplace anymore."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "regard":1,
                        "writer":1,
                        "aren":1,
                        "workplac":1,
                        "leak":1,
                        "anymor":1,
                        "help":1,
                        "inherit":1,
                        "error":1,
                        "origin":1,
                        "sound":1,
                        "applic":1,
                        "messag":1,
                        "employ":1,
                        "memori":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":29321050,
          "postId":19694796,
          "creationDate":"2013-11-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1932781,
            "displayName":"Travis",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I did go ahead and try upping it to 512M, just to see. It didn't stop the error from occurring, but it did cause the application to freeze and die more smoothly, so that's something."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19694796-cu29321050]-[82896826]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I did go ahead and try upping it to 512M, just to see. It didn't stop the error from occurring, but it did cause the application to freeze and die more smoothly, so that's something."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "smooth":1,
                        "up":1,
                        "occur":1,
                        "stop":1,
                        "die":1,
                        "error":1,
                        "applic":1,
                        "ahead":1,
                        "freez":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":29330225,
          "postId":19694796,
          "creationDate":"2013-11-02",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1195197,
            "displayName":"Farid",
            "reputation":1341
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"if it is really a memory leak you could use the following 2 arguments : `- XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=path_to_file` which will dump the content of the memory when the exception occurs (set the path to file). you can then use applications like [http://www.eclipse.org/mat/](http://www.eclipse.org/mat/) to open the file created and see what was the issue. But be aware it's not an easy task."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19694796-cu29330225]-[-991109951]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"if it is really a memory leak you could use the following 2 arguments : `- XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=path_to_file` which will dump the content of the memory when the exception occurs (set the path to file). you can then use applications like [http://www.eclipse.org/mat/](http://www.eclipse.org/mat/) to open the file created and see what was the issue. But be aware it's not an easy task."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"HeapDumpOnOutOfMemoryError",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"HeapDumpPath",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"path_to_file",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "task":1,
                        "easi":1,
                        "path":3,
                        "mat":2,
                        "occur":1,
                        "set":1,
                        "leak":1,
                        "issu":1,
                        "dump":3,
                        "open":1,
                        "eclips":2,
                        "awar":1,
                        "error":1,
                        "applic":1,
                        "content":1,
                        "file":3,
                        "heap":2,
                        "org":2,
                        "http":2,
                        "creat":1,
                        "argument":1,
                        "www":2,
                        "memori":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"HeapDumpOnOutOfMemoryError",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"HeapDumpPath",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":29420765,
          "postId":19694796,
          "creationDate":"2013-11-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1932781,
            "displayName":"Travis",
            "reputation":397
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for that, @Farid. Looks like I have a fun time ahead of me. I'll go ahead and mark this as the answer, as from what I've read it **is** the answer for most situations like this."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[19694796-cu29420765]-[-1625146781]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for that, @Farid. Looks like I have a fun time ahead of me. I'll go ahead and mark this as the answer, as from what I've read it **is** the answer for most situations like this."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Farid",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "situat":1,
                        "farid":1,
                        "fun":1,
                        "answer":2,
                        "ahead":2,
                        "time":1,
                        "mark":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-10-30",
      "lastActivityDate":"2013-10-30",
      "score":0,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":1195197,
        "displayName":"Farid",
        "reputation":1341
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>try first to increase your perm size as the default value is usually too low (for 64bit jvms mainly).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19694796]-[-1237437886]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>try first to increase your perm size as the default value is usually too low (for 64bit jvms mainly).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "bit":1,
                    "size":1,
                    "jvms":1,
                    "low":1,
                    "increas":1,
                    "perm":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>the arguments needed are <code>-XX:PermSize</code> and <code>-XX:MaxPermSize</code></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19694796]-[-204118210]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>the arguments needed are <code>-XX:PermSize</code> and <code>-XX:MaxPermSize</code></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MaxPermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "size":2,
                    "code":4,
                    "max":1,
                    "need":1,
                    "perm":2,
                    "argument":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermSize",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MaxPermSize",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>a max value of 256M is usually enought.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19694796]-[172154113]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>a max value of 256M is usually enought.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "enought":1,
                    "max":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20717998,
      "questionId":19694713,
      "comments":[
        
      ],
      "creationDate":"2013-12-21",
      "lastActivityDate":"2013-12-21",
      "lastEditDate":"2013-12-21",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1260222,
        "displayName":"Mattias Jiderhamn",
        "reputation":161
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you have ClassLoader/PermGen leaks in a web application you can get rid of them using the <a href=\"https://github.com/mjiderhamn/classloader-leak-prevention\"rel=\"nofollow\">ClassLoader Leak Prevention library</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20717998]-[-1463769899]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you have ClassLoader/PermGen leaks in a web application you can get rid of them using the <a href=\"https://github.com/mjiderhamn/classloader-leak-prevention\"rel=\"nofollow\">ClassLoader Leak Prevention library</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ClassLoader",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ClassLoader",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":1,
                    "rid":1,
                    "loader":2,
                    "prevent":2,
                    "rel":1,
                    "leak":3,
                    "mjiderhamn":1,
                    "librari":1,
                    "https":1,
                    "web":1,
                    "nofollow":1,
                    "applic":1,
                    "perm":1,
                    "classload":1,
                    "href":1,
                    "gen":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ClassLoader",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermGen",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In case you want to track down leaks yourself <a href=\"http://java.jiderhamn.se/2011/12/11/classloader-leaks-i-how-to-find-classloader-leaks-with-eclipse-memory-analyser-mat/\"rel=\"nofollow\">this blog series</a> will be of help.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20717998]-[527485289]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In case you want to track down leaks yourself <a href=\"http://java.jiderhamn.se/2011/12/11/classloader-leaks-i-how-to-find-classloader-leaks-with-eclipse-memory-analyser-mat/\"rel=\"nofollow\">this blog series</a> will be of help.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "mat":1,
                    "jiderhamn":1,
                    "track":1,
                    "rel":1,
                    "leak":3,
                    "eclips":1,
                    "blog":1,
                    "nofollow":1,
                    "seri":1,
                    "classload":2,
                    "href":1,
                    "analys":1,
                    "http":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}