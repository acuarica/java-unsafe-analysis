{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":12392342,
    "title":"KeyListener stop working with Action or Mouse Listenter?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":16650138,
        "postId":12392342,
        "creationDate":"2012-09-12",
        "score":3,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1229023,
          "displayName":"raina77ow",
          "reputation":49688
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"If you want your code to be fixed, why showing only an error message instead?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[12392342-cu16650138]-[1939340414]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"If you want your code to be fixed, why showing only an error message instead?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "show":1,
                      "fix":1,
                      "code":1,
                      "error":1,
                      "messag":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":16650163,
        "postId":12392342,
        "creationDate":"2012-09-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1359370,
          "displayName":"Lipongo",
          "reputation":639
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"For any of us to effectively help you we need the stack trace shown above and the code generating it."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[12392342-cu16650163]-[-610648911]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"For any of us to effectively help you we need the stack trace shown above and the code generating it."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "trace":1,
                      "effect":1,
                      "code":1,
                      "shown":1,
                      "stack":1,
                      "generat":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "keyboard",
      "key",
      "keylistener",
      "keyevent"
    ],
    "creationDate":"2012-09-12",
    "lastActivityDate":"2012-09-30",
    "lastEditDate":"2012-09-30",
    "score":-1,
    "viewCount":446,
    "owner":{
      "type":"StackOverflowUser",
      "id":1666017,
      "displayName":"Sudhir Yadav",
      "reputation":6
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I want to add KeyListener to get input through keyboard, so i add keyListener and implements its methods, but when i run that and press any key it works but in console it write something like this:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12392342]-[-320536600]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I want to add KeyListener to get input through keyboard, so i add keyListener and implements its methods, but when i run that and press any key it works but in console it write something like this:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"KeyListener",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"keyListener",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "keyboard":1,
                  "run":1,
                  "consol":1,
                  "work":1,
                  "key":3,
                  "listen":2,
                  "press":1,
                  "add":2,
                  "input":1,
                  "write":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"KeyListener",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":" Exception in thread &quot;AWT-EventQueue-0&quot; java.lang.UnsupportedOperationException: Not supported yet. at Calculator.keyReleased(Calculator.java:520) at java.awt.Component.processKeyEvent(Unknown Source) at java.awt.Component.processEvent(Unknown Source) at java.awt.Container.processEvent(Unknown Source) at java.awt.Window.processEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEventImpl(Unknown Source) at java.awt.EventQueue.access$200(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[12392342]-[412776557]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"AWT-EventQueue-0\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"UnsupportedOperationException",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "message":"Not supported yet. at Calculator.keyReleased(Calculator.java:520) at java.awt.Component.processKeyEvent(Unknown Source) at java.awt.Component.processEvent(Unknown Source) at java.awt.Container.processEvent(Unknown Source) at java.awt.Window.processEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEventImpl(Unknown Source) at java.awt.EventQueue.access$200(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source) ",
                  "lines":[
                    
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":" Exception in thread \"AWT-EventQueue-0\" java.lang.UnsupportedOperationException:Not supported yet. at Calculator.keyReleased(Calculator.java:520) at java.awt.Component.processKeyEvent(Unknown Source) at java.awt.Component.processEvent(Unknown Source) at java.awt.Container.processEvent(Unknown Source) at java.awt.Window.processEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEventImpl(Unknown Source) at java.awt.EventQueue.access$200(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "assert":1,
                  "pre":1,
                  "support":1,
                  "method":2,
                  "window":3,
                  "keyboard":5,
                  "intersect":3,
                  "event":37,
                  "queue":8,
                  "process":4,
                  "domain":3,
                  "run":5,
                  "dispatch":19,
                  "privileg":5,
                  "unknown":33,
                  "calcul":2,
                  "secur":5,
                  "contain":3,
                  "compon":6,
                  "pump":5,
                  "key":4,
                  "impl":7,
                  "filter":2,
                  "oper":1,
                  "thread":7,
                  "releas":1,
                  "focus":5,
                  "hierarchi":1,
                  "redispatch":1,
                  "unsupport":1,
                  "control":2,
                  "ahead":1,
                  "protect":3,
                  "lang":1,
                  "type":1,
                  "manag":5,
                  "sourc":33,
                  "awt":31,
                  "access":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>after this keylistener is working fine but when i click on any button it stopped working, i press keys but nothing happens. my code:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12392342]-[1049757725]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>after this keylistener is working fine but when i click on any button it stopped working, i press keys but nothing happens. my code:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "keylisten":1,
                  "stop":1,
                  "work":2,
                  "key":1,
                  "code":1,
                  "button":1,
                  "click":1,
                  "press":1,
                  "fine":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":" @Override public void keyPressed(KeyEvent e) { try{ switch (e.getKeyCode()) { case KeyEvent.VK_NUMPAD0: case KeyEvent.VK_0: num0(); break; case KeyEvent.VK_NUMPAD1: case KeyEvent.VK_1: num1(); break; case KeyEvent.VK_NUMPAD2: case KeyEvent.VK_2: num2(); break; case KeyEvent.VK_NUMPAD3: case KeyEvent.VK_3: num3(); break; case KeyEvent.VK_NUMPAD4: case KeyEvent.VK_4: num4(); break; case KeyEvent.VK_NUMPAD5: case KeyEvent.VK_5: num5(); break; case KeyEvent.VK_NUMPAD6: case KeyEvent.VK_6: num6(); break; case KeyEvent.VK_NUMPAD7: case KeyEvent.VK_7: num7(); break; case KeyEvent.VK_NUMPAD8: case KeyEvent.VK_8: num8(); break; case KeyEvent.VK_NUMPAD9: case KeyEvent.VK_9: num9(); break; case KeyEvent.VK_BACK_SPACE: back(); break; case KeyEvent.VK_DELETE: clear(); break; case KeyEvent.VK_ENTER: equals(); break; case KeyEvent.VK_ADD: bAdd(); break; case KeyEvent.VK_DECIMAL: bDot(); break; case KeyEvent.VK_MULTIPLY: bMul(); break; case KeyEvent.VK_SUBTRACT: bSub(); break; case KeyEvent.VK_DIVIDE: bDiv(); break; default: } } catch(UnsupportedOperationException ex){} } @Override public void keyReleased(KeyEvent e) { throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);// line 520 } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[12392342]-[394333623]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Override",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"KeywordModifierNode",
                      "value":"public",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"keyPressed",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"KeyEvent",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"e",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "body":{
                    "type":"BlockNode",
                    "statements":[
                      {
                        "type":"TryCatchStatementNode",
                        "block":{
                          "type":"BlockNode",
                          "statements":[
                            {
                              "type":"SwitchStatementNode",
                              "expression":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"e",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"getKeyCode",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "statements":[
                                {
                                  "type":"SwitchBlockStatementGroupNode",
                                  "labels":[
                                    {
                                      "type":"SwitchExpressionLabel",
                                      "expression":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"KeyEvent",
                                            "comments":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"IdentifierNode",
                                            "name":"VK_NUMPAD0",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"SwitchExpressionLabel",
                                      "expression":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"KeyEvent",
                                            "comments":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"IdentifierNode",
                                            "name":"VK_0",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "statements":[
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num0",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD1"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num1",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_1",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD2"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num2",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_2",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD3"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num3",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_3",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD4"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num4",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_4",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD5"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num5",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_5",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD6"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num6",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_6",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD7"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num7",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_7",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD8"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num8",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_8",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"VK"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"_"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"NUMPAD9"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"num9",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_9",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"back",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_BACK_SPACE",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"clear",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_DELETE",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"equals",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_ENTER",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"bAdd",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_ADD",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"bDot",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_DECIMAL",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"bMul",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_MULTIPLY",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"bSub",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_SUBTRACT",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"case"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"KeyEvent"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"."
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"bDiv",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        {
                                          "type":"LabelNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"VK_DIVIDE",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type":"BreakStatementNode",
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":"default"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":":"
                                    },
                                    {
                                      "type":"TextFragmentNode",
                                      "text":" "
                                    }
                                  ]
                                }
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "catches":[
                          {
                            "type":"CatchClauseNode",
                            "modifiers":[
                              
                            ],
                            "catchType":{
                              "type":"CatchTypeNode",
                              "identifiers":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"UnsupportedOperationException",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ex",
                              "comments":[
                                
                              ]
                            },
                            "block":{
                              "type":"BlockNode",
                              "statements":[
                                
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                },
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Override",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"KeywordModifierNode",
                      "value":"public",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"keyReleased",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"KeyEvent",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"e",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "body":{
                    "type":"BlockNode",
                    "statements":[
                      {
                        "type":"ThrowStatementNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"UnsupportedOperationException",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"LiteralNode",
                                "node":{
                                  "type":"StringLiteralNode",
                                  "valueRep":"\"Not supported yet.\""
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          {
                            "text":"// line 520 } \n"
                          }
                        ]
                      }
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":" @Override public void keyPressed(KeyEvent e) { try{ switch (e.getKeyCode()) { case KeyEvent.VK_NUMPAD0: case KeyEvent.VK_0: num0(); break; case KeyEvent.VK_NUMPAD1: case KeyEvent.VK_1: num1(); break; case KeyEvent.VK_NUMPAD2: case KeyEvent.VK_2: num2(); break; case KeyEvent.VK_NUMPAD3: case KeyEvent.VK_3: num3(); break; case KeyEvent.VK_NUMPAD4: case KeyEvent.VK_4: num4(); break; case KeyEvent.VK_NUMPAD5: case KeyEvent.VK_5: num5(); break; case KeyEvent.VK_NUMPAD6: case KeyEvent.VK_6: num6(); break; case KeyEvent.VK_NUMPAD7: case KeyEvent.VK_7: num7(); break; case KeyEvent.VK_NUMPAD8: case KeyEvent.VK_8: num8(); break; case KeyEvent.VK_NUMPAD9: case KeyEvent.VK_9: num9(); break; case KeyEvent.VK_BACK_SPACE: back(); break; case KeyEvent.VK_DELETE: clear(); break; case KeyEvent.VK_ENTER: equals(); break; case KeyEvent.VK_ADD: bAdd(); break; case KeyEvent.VK_DECIMAL: bDot(); break; case KeyEvent.VK_MULTIPLY: bMul(); break; case KeyEvent.VK_SUBTRACT: bSub(); break; case KeyEvent.VK_DIVIDE: bDiv(); break; default: } } catch(UnsupportedOperationException ex){} } @Override public void keyReleased(KeyEvent e) { throw new UnsupportedOperationException(\"Not supported yet.\");// line 520 } \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "dot":1,
                  "support":1,
                  "divid":1,
                  "delet":1,
                  "subtract":1,
                  "event":30,
                  "line":1,
                  "clear":1,
                  "enter":1,
                  "overrid":2,
                  "div":1,
                  "multipli":1,
                  "num":10,
                  "key":33,
                  "code":1,
                  "oper":2,
                  "releas":1,
                  "equal":1,
                  "space":1,
                  "decim":1,
                  "mul":1,
                  "back":2,
                  "numpad":10,
                  "unsupport":2,
                  "press":1,
                  "add":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"KeyEvent",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"UnsupportedOperationException",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  {
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"bSub",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"back",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num7",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"bDiv",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"clear",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num0",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"equals",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num9",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"bMul",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num1",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num8",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num3",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"bDot",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num5",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"e",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"getKeyCode",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num4",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num6",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"num2",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"MethodInvocationNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"bAdd",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"e",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":12392416,
      "questionId":12392342,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":16650930,
          "postId":12392416,
          "creationDate":"2012-09-12",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1666017,
            "displayName":"Sudhir Yadav",
            "reputation":6
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"here my code of keylistener methods: public void keyPressed(KeyEvent e) { try{ switch (e.getKeyCode()) { //my cases default: } } catch(UnsupportedOperationException ex){} } @Override public void keyReleased(KeyEvent e) { throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);//line 520 }"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[12392416-cu16650930]-[-2133384259]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"here my code of keylistener methods: public void keyPressed(KeyEvent e) { try{ switch (e.getKeyCode()) { //my cases default: } } catch(UnsupportedOperationException ex){} } @Override public void keyReleased(KeyEvent e) { throw new UnsupportedOperationException(&quot;Not supported yet.&quot;);//line 520 }"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"MethodDeclaratorNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "returnType":{
                          "type":"PrimitiveTypeNode",
                          "name":"void",
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"keyPressed",
                          "comments":[
                            
                          ]
                        },
                        "parameters":{
                          "type":"FormalParametersNode",
                          "parameters":{
                            "type":"FormalParameterDeclsNode",
                            "modifiers":[
                              
                            ],
                            "parameterType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"KeyEvent",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "nextDeclarator":{
                              "type":"AdditionalFormalParameterDeclNode",
                              "variableDeclarator":{
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"e",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        },
                        "arrayReturnType":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"BlockDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "block":{
                          "type":"BlockNode",
                          "statements":[
                            {
                              "type":"SwitchStatementNode",
                              "expression":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"e",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"getKeyCode",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "statements":[
                                
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                {
                                  "text":"//my cases default: } } catch(UnsupportedOperationException ex){} } @Override public void keyReleased(KeyEvent e) { throw new UnsupportedOperationException(\"Not supported yet.\");//line 520 }\n"
                                }
                              ]
                            }
                          ],
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "keylisten":1,
                        "support":1,
                        "method":1,
                        "event":2,
                        "line":1,
                        "overrid":1,
                        "key":5,
                        "code":2,
                        "oper":2,
                        "releas":1,
                        "unsupport":2,
                        "press":1,
                        "quot":2,
                        "case":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"KeyEvent",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        {
                          "type":"PrimitiveTypeNode",
                          "name":"void",
                          "comments":[
                            
                          ]
                        }
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        {
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"e",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"getKeyCode",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"e",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":16650970,
          "postId":12392416,
          "creationDate":"2012-09-12",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1123123,
            "displayName":"Sam I am",
            "reputation":20624
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@SudhirYadav edit your question. your code will be better formatted that way"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[12392416-cu16650970]-[1414861288]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@SudhirYadav edit your question. your code will be better formatted that way"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"SudhirYadav",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "format":1,
                        "question":1,
                        "sudhir":1,
                        "code":1,
                        "edit":1,
                        "yadav":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-09-12",
      "lastActivityDate":"2012-09-12",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1123123,
        "displayName":"Sam I am",
        "reputation":20624
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>your program threw an exception </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12392416]-[1637423126]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>your program threw an exception </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "threw":1,
                    "program":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"at Calculator.keyReleased(Calculator.java:520) "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[12392416]-[1636000173]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"StackTraceLineNode",
                    "methodName":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Calculator",
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IdentifierNode",
                          "name":"keyReleased",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "location":{
                      "type":"SourceLocationNode",
                      "fileName":"Calculator.java",
                      "lineNumber":520
                    }
                  }
                ]
              },
              "rawText":"at Calculator.keyReleased(Calculator.java:520)",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "key":1,
                    "calcul":2,
                    "releas":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>it also threw an exception of the following type:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12392416]-[-1446075328]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>it also threw an exception of the following type:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "type":1,
                    "threw":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"java.lang.UnsupportedOperationException: Not supported yet. "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[12392416]-[-1144932596]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"UnsupportedOperationException",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":": Not supported yet. "
                  }
                ]
              },
              "rawText":"java.lang.UnsupportedOperationException: Not supported yet. ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "unsupport":1,
                    "lang":1,
                    "oper":1,
                    "support":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"UnsupportedOperationException",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>So, It seems that you're calling a routine on line 520 of your <code>Calculator.java</code> file that is Not supported yet. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12392416]-[-344295819]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>So, It seems that you're calling a routine on line 520 of your <code>Calculator.java</code> file that is Not supported yet. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "support":1,
                    "line":1,
                    "calcul":1,
                    "code":2,
                    "routin":1,
                    "file":1,
                    "call":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you could post the method where it's breaking, and then mark the line that it breaks on, we can help you further. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12392416]-[-271129284]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you could post the method where it's breaking, and then mark the line that it breaks on, we can help you further. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "post":1,
                    "break":2,
                    "line":1,
                    "mark":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}