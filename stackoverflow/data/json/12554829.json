{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":12554829,
    "title":"Passing arguments to compiler and javadoc in gradle",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":16909869,
        "postId":12554829,
        "creationDate":"2012-09-23",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":84889,
          "displayName":"Peter Niederwieser",
          "reputation":46294
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Please always state the Gradle version."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[12554829-cu16909869]-[-1324847946]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Please always state the Gradle version."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "state":1,
                      "gradl":1,
                      "version":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":16910294,
        "postId":12554829,
        "creationDate":"2012-09-23",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":385429,
          "displayName":"Dalibor Novak",
          "reputation":383
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I've added the version information as suggested"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[12554829-cu16910294]-[273554483]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I've added the version information as suggested"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "suggest":1,
                      "ad":1,
                      "inform":1,
                      "version":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "javadoc",
      "gradle",
      "javac"
    ],
    "creationDate":"2012-09-23",
    "lastActivityDate":"2012-09-27",
    "lastEditDate":"2012-09-27",
    "score":6,
    "viewCount":4755,
    "owner":{
      "type":"StackOverflowUser",
      "id":385429,
      "displayName":"Dalibor Novak",
      "reputation":383
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am trying to provide Gradle as an alternative build system on an existing project. That project makes use of <code>sun.misc.Unsafe</code> which leads to warnings like this one:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-347488024]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am trying to provide Gradle as an alternative build system on an existing project. That project makes use of <code>sun.misc.Unsafe</code> which leads to warnings like this one:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "provid":1,
                  "lead":1,
                  "warn":1,
                  "system":1,
                  "gradl":1,
                  "exist":1,
                  "project":2,
                  "sun":1,
                  "build":1,
                  "altern":1,
                  "code":2,
                  "misc":1,
                  "make":1,
                  "unsaf":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"warning: Unsafe is internal proprietary API and may be removed in a future release import sun.misc.Unsafe; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[12554829]-[-1181784103]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"warning: Unsafe is internal proprietary API and may be removed in a future release "
                },
                {
                  "type":"ImportDeclarationNode",
                  "identifier":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "isStatic":false,
                  "isOnDemand":false,
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"warning: Unsafe is internal proprietary API and may be removed in a future release import sun.misc.Unsafe; ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "remov":1,
                  "warn":1,
                  "proprietari":1,
                  "sun":1,
                  "releas":1,
                  "futur":1,
                  "misc":1,
                  "api":1,
                  "unsaf":2,
                  "intern":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To suppress this warning <code>-XDignore.symbol.file</code> is passed as an argument to javac and javadoc in the current ant script.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-524977037]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To suppress this warning <code>-XDignore.symbol.file</code> is passed as an argument to javac and javadoc in the current ant script.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "xdignor":1,
                  "warn":1,
                  "ant":1,
                  "suppress":1,
                  "code":2,
                  "symbol":1,
                  "pass":1,
                  "file":1,
                  "script":1,
                  "current":1,
                  "argument":1,
                  "javac":1,
                  "javadoc":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>In order to suppress these warnings in Gradle I had to resort to what I feel are 'dirty' hacks that I am not too comfortable with.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-1395056993]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>In order to suppress these warnings in Gradle I had to resort to what I feel are 'dirty' hacks that I am not too comfortable with.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "feel":1,
                  "warn":1,
                  "gradl":1,
                  "suppress":1,
                  "resort":1,
                  "comfort":1,
                  "order":1,
                  "hack":1,
                  "dirti":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"apply plugin: 'java' compileJava { // I only managed to get this working when I forked // and passed 'javac' as an executable options.compilerArgs &lt;&lt; '-XDignore.symbol.file' options.fork = true options.forkOptions.executable = 'javac' } javadoc { // These get ignored // options.addStringOption('XDignore.symbol.file', null) // options.addStringOption('XDignore.symbol.file') // This one fails the build - I am assuming it's trying to parse '' // options.addStringOption('XDignore.symbol.file') // This works, but it's an ugly hack options.addStringOption('XDignore.symbol.file', '-quiet') } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[12554829]-[657686959]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"apply plugin: 'java' "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"compileJava",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"BlockDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "block":{
                    "type":"BlockNode",
                    "statements":[
                      
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      {
                        "text":"// I only managed to get this working when I forked // and passed 'javac' as an executable options.compilerArgs << '-XDignore.symbol.file' options.fork = true options.forkOptions.executable = 'javac' } javadoc { // These get ignored // options.addStringOption('XDignore.symbol.file', null) // options.addStringOption('XDignore.symbol.file') // This one fails the build - I am assuming it's trying to parse '' // options.addStringOption('XDignore.symbol.file') // This works, but it's an ugly hack options.addStringOption('XDignore.symbol.file', '-quiet') } \n"
                      }
                    ]
                  }
                }
              ]
            },
            "rawText":"apply plugin: 'java' compileJava { // I only managed to get this working when I forked // and passed 'javac' as an executable options.compilerArgs << '-XDignore.symbol.file' options.fork = true options.forkOptions.executable = 'javac' } javadoc { // These get ignored // options.addStringOption('XDignore.symbol.file', null) // options.addStringOption('XDignore.symbol.file') // This one fails the build - I am assuming it's trying to parse '' // options.addStringOption('XDignore.symbol.file') // This works, but it's an ugly hack options.addStringOption('XDignore.symbol.file', '-quiet') } \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":1,
                  "assum":1,
                  "fail":1,
                  "xdignor":5,
                  "option":12,
                  "build":1,
                  "quiet":1,
                  "work":2,
                  "fork":3,
                  "symbol":5,
                  "pars":1,
                  "true":1,
                  "pass":1,
                  "ugli":1,
                  "file":5,
                  "hack":1,
                  "compil":2,
                  "appli":1,
                  "manag":1,
                  "add":4,
                  "javac":2,
                  "arg":1,
                  "javadoc":1,
                  "execut":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Surely there must be a more elegant way that I don't know to achieve this.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-1254978437]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Surely there must be a more elegant way that I don't know to achieve this.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "achiev":1,
                  "sure":1,
                  "eleg":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Here ( <a href=\"https://gist.github.com/3772416\">https://gist.github.com/3772416</a> ) is a more complete example with an accompanying ant script and a sample class that causes the problem.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[189202373]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Here ( <a href=\"https://gist.github.com/3772416\">https://gist.github.com/3772416</a> ) is a more complete example with an accompanying ant script and a sample class that causes the problem.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"that",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "github":2,
                  "problem":1,
                  "sampl":1,
                  "ant":1,
                  "accompani":1,
                  "https":2,
                  "gist":2,
                  "complet":1,
                  "script":1,
                  "href":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Thanks</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-1946290828]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Thanks</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am running Gradle 1.1</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[-1968856560]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am running Gradle 1.1</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "gradl":1,
                  "run":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"------------------------------------------------------------ Gradle 1.1 ------------------------------------------------------------ Gradle build time: Tuesday, 31 July 2012 13:24:32 o'clock UTC Groovy: 1.8.6 Ant: Apache Ant(TM) version 1.8.4 compiled on May 22 2012 Ivy: 2.2.0 JVM: 1.7.0_07 (Oracle Corporation 23.3-b01) OS: Linux 3.2.0-30-generic amd64 "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[12554829]-[-1852714095]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"------------------------------------------------------------ Gradle 1.1 ------------------------------------------------------------ Gradle build time: Tuesday, 31 July 2012 13:24:32 o'clock UTC Groovy: 1.8.6 Ant: Apache Ant(TM) version 1.8.4 compiled on May 22 2012 Ivy: 2.2.0 JVM: 1.7.0_07 (Oracle Corporation 23.3-b01) OS: Linux 3.2.0-30-generic amd64 "
                }
              ]
            },
            "rawText":"------------------------------------------------------------ Gradle 1.1 ------------------------------------------------------------ Gradle build time: Tuesday, 31 July 2012 13:24:32 o'clock UTC Groovy: 1.8.6 Ant: Apache Ant(TM) version 1.8.4 compiled on May 22 2012 Ivy: 2.2.0 JVM: 1.7.0_07 (Oracle Corporation 23.3-b01) OS: Linux 3.2.0-30-generic amd64 ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "apach":1,
                  "gradl":2,
                  "corpor":1,
                  "tuesday":1,
                  "ant":2,
                  "amd":1,
                  "build":1,
                  "oracl":1,
                  "generic":1,
                  "utc":1,
                  "ivi":1,
                  "version":1,
                  "clock":1,
                  "groovi":1,
                  "linux":1,
                  "juli":1,
                  "compil":1,
                  "time":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>It seems that this is a reasonable worakround at the moment for suppressing these particular warnings. See - <a href=\"http://forums.gradle.org/gradle/topics/passing_arguments_to_compiler_and_javadoc?rfm=1\">http://forums.gradle.org/gradle/topics/passing_arguments_to_compiler_and_javadoc?rfm=1</a></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[12554829]-[2099420729]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>It seems that this is a reasonable worakround at the moment for suppressing these particular warnings. See - <a href=\"http://forums.gradle.org/gradle/topics/passing_arguments_to_compiler_and_javadoc?rfm=1\">http://forums.gradle.org/gradle/topics/passing_arguments_to_compiler_and_javadoc?rfm=1</a></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"passing_arguments_to_compiler_and_javadoc",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "worakround":1,
                  "warn":1,
                  "gradl":4,
                  "rfm":2,
                  "suppress":1,
                  "reason":1,
                  "forum":2,
                  "moment":1,
                  "pass":2,
                  "topic":2,
                  "compil":2,
                  "org":2,
                  "href":1,
                  "http":2,
                  "argument":2,
                  "javadoc":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":12555185,
      "questionId":12554829,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":16910447,
          "postId":12555185,
          "creationDate":"2012-09-23",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":385429,
            "displayName":"Dalibor Novak",
            "reputation":383
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I have tried using `jFlags` and got a `Unrecognized option: -XDignore.symbol.file` I have upgraded to Gradle 1.2 and I still need both `options.fork = true` and `options.forkOptions.executable = 'javac'`. I have also tried jFlags with 1.2 and got the same result as with 1.1 I'll raise the issue on Gradle forum. Thanks for help."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[12555185-cu16910447]-[-2068076049]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I have tried using `jFlags` and got a `Unrecognized option: -XDignore.symbol.file` I have upgraded to Gradle 1.2 and I still need both `options.fork = true` and `options.forkOptions.executable = 'javac'`. I have also tried jFlags with 1.2 and got the same result as with 1.1 I'll raise the issue on Gradle forum. Thanks for help."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"jFlags",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"forkOptions",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"jFlags",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "unrecogn":1,
                        "xdignor":1,
                        "gradl":2,
                        "result":1,
                        "option":4,
                        "issu":1,
                        "upgrad":1,
                        "fork":2,
                        "symbol":1,
                        "rais":1,
                        "forum":1,
                        "true":1,
                        "flag":2,
                        "file":1,
                        "javac":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-09-23",
      "lastActivityDate":"2012-09-23",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":84889,
        "displayName":"Peter Niederwieser",
        "reputation":46294
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Regarding Javadoc, the following might work:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12555185]-[-1497972544]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Regarding Javadoc, the following might work:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "work":1,
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"javadoc.options.jflags &quot;-XDignore.symbol.file&quot; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[12555185]-[-721539930]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"javadoc.options.jflags \"-XDignore.symbol.file\" "
                  }
                ]
              },
              "rawText":"javadoc.options.jflags \"-XDignore.symbol.file\" ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "xdignor":1,
                    "option":1,
                    "jflag":1,
                    "symbol":1,
                    "file":1,
                    "javadoc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Regarding Java compilation, it would be good to know if <code>options.fork = true</code> and <code>options.forkOptions.executable = 'javac'</code> are still required with recent Gradle versions (e.g. 1.2). If yes, please file a problem at <a href=\"http://forums.gradle.org\"rel=\"nofollow\">http://forums.gradle.org</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[12555185]-[-407484426]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Regarding Java compilation, it would be good to know if <code>options.fork = true</code> and <code>options.forkOptions.executable = 'javac'</code> are still required with recent Gradle versions (e.g. 1.2). If yes, please file a problem at <a href=\"http://forums.gradle.org\"rel=\"nofollow\">http://forums.gradle.org</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"IdentifierNode",
                    "name":"forkOptions",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "gradl":3,
                    "recent":1,
                    "good":1,
                    "problem":1,
                    "requir":1,
                    "option":3,
                    "rel":1,
                    "code":4,
                    "fork":2,
                    "version":1,
                    "nofollow":1,
                    "forum":2,
                    "true":1,
                    "file":1,
                    "compil":1,
                    "org":2,
                    "href":1,
                    "http":2,
                    "javac":1,
                    "execut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}