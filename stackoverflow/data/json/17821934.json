{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":17821934,
    "title":"PHP image path different for every user",
    "comments":[
      
    ],
    "tags":[
      "java",
      "php",
      "html",
      "image"
    ],
    "creationDate":"2013-07-23",
    "lastActivityDate":"2013-07-23",
    "score":0,
    "viewCount":54,
    "owner":{
      "type":"StackOverflowUser",
      "id":2559250,
      "displayName":"James Bartram",
      "reputation":21
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Hi ive run into what I thought would be a simple obstacle however, its become quite a hassle I want to display a picture on my website however it will be different for every user that is logged in. I tried this </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[17821934]-[1109215839]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Hi ive run into what I thought would be a simple obstacle however, its become quite a hassle I want to display a picture on my website however it will be different for every user that is logged in. I tried this </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "obstacl":1,
                  "simpl":1,
                  "thought":1,
                  "websit":1,
                  "hassl":1,
                  "run":1,
                  "pictur":1,
                  "user":1,
                  "ive":1,
                  "log":1,
                  "display":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&lt;img src=&quot;&lt;?php echo 'screenshots/img_$username.png' ?&gt;&quot; /&gt; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[17821934]-[-1536689897]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"img"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"src"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"<?php echo 'screenshots/img_$username.png' ?>\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                }
              ]
            },
            "rawText":"<img src=\"<?php echo 'screenshots/img_$username.png' ?>\"/> ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "png":1,
                  "img":2,
                  "php":1,
                  "screenshot":1,
                  "src":1,
                  "echo":1,
                  "usernam":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I didnt really think that would work but Im not exactly sure where to go on this one I have a java application that saves the images to a file on the users computer then uploads them to my server and saves them all as &quot;img_someusername.png&quot; but the username is going to be different for every person </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[17821934]-[1518765692]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I didnt really think that would work but Im not exactly sure where to go on this one I have a java application that saves the images to a file on the users computer then uploads them to my server and saves them all as &quot;img_someusername.png&quot; but the username is going to be different for every person </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"IdentifierNode",
                  "name":"img_someusername",
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "png":1,
                  "server":1,
                  "img":1,
                  "someusernam":1,
                  "work":1,
                  "comput":1,
                  "upload":1,
                  "applic":1,
                  "person":1,
                  "file":1,
                  "didnt":1,
                  "quot":2,
                  "save":2,
                  "usernam":1,
                  "user":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>how can I get it so that the user that is logged in will see his or her picture and not someone else's much like a profile picture on facebook? </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[17821934]-[-1624621626]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>how can I get it so that the user that is logged in will see his or her picture and not someone else's much like a profile picture on facebook? </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "profil":1,
                  "facebook":1,
                  "pictur":2,
                  "user":1,
                  "log":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":17821995,
      "questionId":17821934,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":26010101,
          "postId":17821995,
          "creationDate":"2013-07-23",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2559250,
            "displayName":"James Bartram",
            "reputation":21
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"i feel stupid... thank you sometimes I just get those moments"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[17821995-cu26010101]-[526285450]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"i feel stupid... thank you sometimes I just get those moments"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "stupid":1,
                        "moment":1,
                        "feel":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":26010197,
          "postId":17821995,
          "creationDate":"2013-07-23",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2310830,
            "displayName":"RiggsFolly",
            "reputation":12670
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"We all get those moments, not stupid."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[17821995-cu26010197]-[1577158769]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"We all get those moments, not stupid."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "stupid":1,
                        "moment":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-07-23",
      "lastActivityDate":"2013-07-23",
      "score":1,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":2310830,
        "displayName":"RiggsFolly",
        "reputation":12670
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>try this instead.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17821995]-[-766353920]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>try this instead.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;img src=&quot;screenshots/img_&lt;?php echo $username; ?&gt;.png&quot; /&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[17821995]-[-1128090234]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"img"
                    },
                    "attributes":[
                      {
                        "type":"XmlAttributeNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"src"
                        },
                        "value":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"screenshots/img_<?php echo $username; ?>.png\""
                        }
                      }
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<img src=\"screenshots/img_<?php echo $username; ?>.png\"/> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "png":1,
                    "img":2,
                    "php":1,
                    "screenshot":1,
                    "src":1,
                    "echo":1,
                    "usernam":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":17822044,
      "questionId":17821934,
      "comments":[
        
      ],
      "creationDate":"2013-07-23",
      "lastActivityDate":"2013-07-23",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2601263,
        "displayName":"seanmk",
        "reputation":1375
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The problem is that you are trying to evaluate a PHP variable inside a single quote (') string. You can evaluate a variable only inside a double quote string (&quot;). It should be fine to change your code to this, assuming the path of the image is correct.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822044]-[1367404761]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The problem is that you are trying to evaluate a PHP variable inside a single quote (') string. You can evaluate a variable only inside a double quote string (&quot;). It should be fine to change your code to this, assuming the path of the image is correct.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "singl":1,
                    "assum":1,
                    "path":1,
                    "problem":1,
                    "correct":1,
                    "code":1,
                    "insid":2,
                    "php":1,
                    "quot":3,
                    "evalu":2,
                    "fine":1,
                    "variabl":2,
                    "imag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;img src=&quot;&lt;?php echo &quot;screenshots/img_$username.png&quot; ?&gt;&quot; /&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[17822044]-[372581473]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"<img src=\"<?php echo \"screenshots/"
                  },
                  {
                    "type":"IdentifierNode",
                    "name":"img_$username",
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":".png\" ?>\" /> "
                  }
                ]
              },
              "rawText":"<img src=\"<?php echo \"screenshots/img_$username.png\" ?>\" /> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "png":1,
                    "img":2,
                    "php":1,
                    "screenshot":1,
                    "src":1,
                    "echo":1,
                    "usernam":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Alternatively, the other two answers will also work. Lots of options in PHP.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822044]-[1859196981]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Alternatively, the other two answers will also work. Lots of options in PHP.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "option":1,
                    "altern":1,
                    "work":1,
                    "php":1,
                    "lot":1,
                    "answer":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":17822008,
      "questionId":17821934,
      "comments":[
        
      ],
      "creationDate":"2013-07-23",
      "lastActivityDate":"2013-07-23",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2365865,
        "displayName":"fa7d0",
        "reputation":353
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;?php echo &quot;&lt;img src='screenshots/img_&quot;.$username.&quot;'&gt;&quot;; ?&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[17822008]-[840383534]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"<?php echo \"<img src='screenshots/"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"img_",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"\".$username.\"'>\"; ?> "
                  }
                ]
              },
              "rawText":"<?php echo \"<img src='screenshots/img_\".$username.\"'>\"; ?> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "img":2,
                    "php":1,
                    "screenshot":1,
                    "src":1,
                    "echo":1,
                    "usernam":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":17822061,
      "questionId":17821934,
      "comments":[
        
      ],
      "creationDate":"2013-07-23",
      "lastActivityDate":"2013-07-23",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1619193,
        "displayName":"Shawn Frank",
        "reputation":145
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>When your java program is being used, it automatically saves the image with an extension so perhaps you don't need to add an extension. Perhpas shawn.jpg or sandra.jpg.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822061]-[158534920]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>When your java program is being used, it automatically saves the image with an extension so perhaps you don't need to add an extension. Perhpas shawn.jpg or sandra.jpg.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "jpg":2,
                    "automat":1,
                    "sandra":1,
                    "save":1,
                    "perhpa":1,
                    "extens":2,
                    "add":1,
                    "imag":1,
                    "shawn":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This is what I would do.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822061]-[-2062561628]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This is what I would do.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;img src=&quot;&lt;?php echo 'screenshots/img_'.$usernames; ?&gt;&quot; /&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[17822061]-[2107348056]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"img"
                    },
                    "attributes":[
                      {
                        "type":"XmlAttributeNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"src"
                        },
                        "value":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"<?php echo 'screenshots/img_'.$usernames; ?>\""
                        }
                      }
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<img src=\"<?php echo 'screenshots/img_'.$usernames; ?>\"/> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "img":2,
                    "php":1,
                    "screenshot":1,
                    "src":1,
                    "echo":1,
                    "usernam":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The other users have already mentioned ways in which .png can be added as well. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822061]-[-1317781937]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The other users have already mentioned ways in which .png can be added as well. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "png":1,
                    "way":1,
                    "mention":1,
                    "ad":1,
                    "user":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>if not this would also work </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822061]-[-1128766402]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>if not this would also work </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "work":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;img src=&quot;&lt;?php echo 'screenshots/img_'.$usernames.'.png'; ?&gt;&quot; /&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[17822061]-[-1969587103]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"img"
                    },
                    "attributes":[
                      {
                        "type":"XmlAttributeNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"src"
                        },
                        "value":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"<?php echo 'screenshots/img_'.$usernames.'.png'; ?>\""
                        }
                      }
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<img src=\"<?php echo 'screenshots/img_'.$usernames.'.png'; ?>\"/> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "png":1,
                    "img":2,
                    "php":1,
                    "screenshot":1,
                    "src":1,
                    "echo":1,
                    "usernam":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Thanks.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[17822061]-[-218076388]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Thanks.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}