{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":4826626,
    "title":"xor operation between java references",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":5354613,
        "postId":4826626,
        "creationDate":"2011-01-28",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":53897,
          "displayName":"Thorbj√∏rn Ravn Andersen",
          "reputation":42054
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Why? The runtime has plenty of list implementations - what is it you need?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[4826626-cu5354613]-[-1713803736]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Why? The runtime has plenty of list implementations - what is it you need?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "list":1,
                      "runtim":1,
                      "implement":1,
                      "plenti":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":5354654,
        "postId":4826626,
        "creationDate":"2011-01-28",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":57695,
          "displayName":"Peter Lawrey",
          "reputation":257803
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"The purpose of XOR-linked-list appears to be to same memory. If you wanted to do that you would use an ArrayList which would save even more memory. (Though I doubt you need to worry about it either way)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[4826626-cu5354654]-[1352068478]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"The purpose of XOR-linked-list appears to be to same memory. If you wanted to do that you would use an ArrayList which would save even more memory. (Though I doubt you need to worry about it either way)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ArrayList",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "want":1,
                      "appear":1,
                      "array":1,
                      "xor":1,
                      "doubt":1,
                      "link":1,
                      "worri":1,
                      "save":1,
                      "purpos":1,
                      "list":2,
                      "memori":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ArrayList",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "reference",
      "xor"
    ],
    "creationDate":"2011-01-28",
    "lastActivityDate":"2011-01-28",
    "lastEditDate":"2011-01-28",
    "score":4,
    "viewCount":659,
    "owner":{
      "type":"StackOverflowUser",
      "id":424716,
      "displayName":"Jagan",
      "reputation":1048
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I want to write java code for <a href=\"http://en.wikipedia.org/wiki/XOR_linked_list\"rel=\"nofollow\">xor-linked list</a> . Can somebody suggest me how to perform xor operation between references?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[4826626]-[317944439]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I want to write java code for <a href=\"http://en.wikipedia.org/wiki/XOR_linked_list\"rel=\"nofollow\">xor-linked list</a> . Can somebody suggest me how to perform xor operation between references?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "suggest":1,
                  "rel":1,
                  "code":1,
                  "oper":1,
                  "wikipedia":1,
                  "nofollow":1,
                  "xor":3,
                  "link":2,
                  "perform":1,
                  "refer":1,
                  "wiki":1,
                  "org":1,
                  "href":1,
                  "http":1,
                  "write":1,
                  "list":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":4826645,
      "questionId":4826626,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":5354572,
          "postId":4826645,
          "creationDate":"2011-01-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":424716,
            "displayName":"Jagan",
            "reputation":1048
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"There is no other alternative to create xor-linked list in java ?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[4826645-cu5354572]-[-44559064]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"There is no other alternative to create xor-linked list in java ?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "altern":1,
                        "xor":1,
                        "link":1,
                        "creat":1,
                        "list":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":5354605,
          "postId":4826645,
          "creationDate":"2011-01-28",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":139985,
            "displayName":"Stephen C",
            "reputation":291715
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Yes. Use a regular doubly linked list; e.g. as provided by `LinkedList`."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[4826645-cu5354605]-[-1984899113]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Yes. Use a regular doubly linked list; e.g. as provided by `LinkedList`."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"LinkedList",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "provid":1,
                        "regular":1,
                        "link":2,
                        "doubli":1,
                        "list":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"LinkedList",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-01-28",
      "lastActivityDate":"2011-01-28",
      "score":9,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":15619,
        "displayName":"Riduidel",
        "reputation":14151
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To say long things short, <strong>you can't</strong>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4826645]-[-972930717]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To say long things short, <strong>you can't</strong>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "strong":2,
                    "thing":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>With just a little more words, if Java allows you to pass variables by references, arithmetic on these reference is not permitted by the Java language. Hence, your xor operations won't be possible.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4826645]-[-128732776]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>With just a little more words, if Java allows you to pass variables by references, arithmetic on these reference is not permitted by the Java language. Hence, your xor operations won't be possible.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "languag":1,
                    "oper":1,
                    "arithmet":1,
                    "permit":1,
                    "xor":1,
                    "refer":2,
                    "pass":1,
                    "variabl":1,
                    "word":1,
                    "won":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Moreover, when reading the wikiedpia entry, I undestand it's a memory optimization of classical linked list implementation relying, for determining next/previous node, solely upon that pointer arithmetics. I consider it a knind of very advanced memory optimization, that don't seem as useful in Java as it can be in unmanaged memory languages like, say, C(++).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4826645]-[-1101868563]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Moreover, when reading the wikiedpia entry, I undestand it's a memory optimization of classical linked list implementation relying, for determining next/previous node, solely upon that pointer arithmetics. I consider it a knind of very advanced memory optimization, that don't seem as useful in Java as it can be in unmanaged memory languages like, say, C(++).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "languag":1,
                    "determin":1,
                    "advanc":1,
                    "sole":1,
                    "pointer":1,
                    "previous":1,
                    "wikiedpia":1,
                    "classic":1,
                    "undestand":1,
                    "optim":2,
                    "entri":1,
                    "arithmet":1,
                    "link":1,
                    "unmanag":1,
                    "implement":1,
                    "node":1,
                    "reli":1,
                    "knind":1,
                    "list":1,
                    "memori":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":4827511,
      "questionId":4826626,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":5358333,
          "postId":4827511,
          "creationDate":"2011-01-28",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":15619,
            "displayName":"Riduidel",
            "reputation":14151
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Wow ... +1 For the mention of `Unsafe`. i would easily double it (if it were possible) with a code example."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[4827511-cu5358333]-[30511518]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Wow ... +1 For the mention of `Unsafe`. i would easily double it (if it were possible) with a code example."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "wow":1,
                        "code":1,
                        "easili":1,
                        "mention":1,
                        "unsaf":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-01-28",
      "lastActivityDate":"2011-01-28",
      "score":4,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":581205,
        "displayName":"maaartinus",
        "reputation":15638
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can... but I must say first: <strong>DO NOT DO IT</strong>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[788349115]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can... but I must say first: <strong>DO NOT DO IT</strong>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "strong":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There's a class <code>sun.misc.Unsafe</code> allowing doing a lot of unsafe things. Using it you can get the address of objects and make you xor-linked list. But again: <strong>DO NOT DO IT</strong>. There are at least the following problems:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[467520408]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There's a class <code>sun.misc.Unsafe</code> allowing doing a lot of unsafe things. Using it you can get the address of objects and make you xor-linked list. But again: <strong>DO NOT DO IT</strong>. There are at least the following problems:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"sun",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "problem":1,
                    "sun":1,
                    "thing":1,
                    "strong":2,
                    "object":1,
                    "code":2,
                    "allow":1,
                    "xor":1,
                    "link":1,
                    "misc":1,
                    "lot":1,
                    "address":1,
                    "make":1,
                    "unsaf":2,
                    "list":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li>As JVM do not understand your list, the elements get eaten by the GC.</li> \n <li>As Unsafe is a undocumented part of Oracle/Sun JRE, it may be missing in other JREs and it may disappear anytime.</li> \n <li>As fiddling with pointers is an error-prone operation, you may crash your VM or get strange result due to destroying memory structures.</li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[-157355141]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li>As JVM do not understand your list, the elements get eaten by the GC.</li> \n <li>As Unsafe is a undocumented part of Oracle/Sun JRE, it may be missing in other JREs and it may disappear anytime.</li> \n <li>As fiddling with pointers is an error-prone operation, you may crash your VM or get strange result due to destroying memory structures.</li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jre":1,
                    "jvm":1,
                    "due":1,
                    "disappear":1,
                    "pointer":1,
                    "crash":1,
                    "result":1,
                    "understand":1,
                    "sun":1,
                    "oracl":1,
                    "prone":1,
                    "structur":1,
                    "element":1,
                    "miss":1,
                    "oper":1,
                    "eaten":1,
                    "destroy":1,
                    "undocu":1,
                    "error":1,
                    "anytim":1,
                    "unsaf":1,
                    "part":1,
                    "fiddl":1,
                    "strang":1,
                    "jres":1,
                    "list":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>And finally: <strong>DO NOT DO IT</strong>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[-843371174]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>And finally: <strong>DO NOT DO IT</strong>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "strong":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<hr />"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[1817223689]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<hr />"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you just want to play with the list, implement it inside of an array (use indexes instead of pointers). This is safe and will work. However, linked lists are quite inefficient structures, close to unusable most of the time.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[4827511]-[1816000558]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you just want to play with the list, implement it inside of an array (use indexes instead of pointers). This is safe and will work. However, linked lists are quite inefficient structures, close to unusable most of the time.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "unus":1,
                    "pointer":1,
                    "play":1,
                    "safe":1,
                    "work":1,
                    "structur":1,
                    "array":1,
                    "insid":1,
                    "link":1,
                    "implement":1,
                    "ineffici":1,
                    "time":1,
                    "close":1,
                    "list":2,
                    "index":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}