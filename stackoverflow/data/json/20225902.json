{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":20225902,
    "title":"How to query list elements using spring JPA",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":30181986,
        "postId":20225902,
        "creationDate":"2013-11-27",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":504956,
          "displayName":"Andrei I",
          "reputation":10106
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"if my answer helped, please mark it as accepted."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20225902-cu30181986]-[1774002988]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"if my answer helped, please mark it as accepted."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "mark":1,
                      "accept":1,
                      "help":1,
                      "answer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "hibernate",
      "jpa",
      "persistence",
      "spring-jpa"
    ],
    "creationDate":"2013-11-26",
    "lastActivityDate":"2013-11-26",
    "score":0,
    "viewCount":79,
    "owner":{
      "type":"StackOverflowUser",
      "id":2639206,
      "displayName":"Ram",
      "reputation":760
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p><strong>Context:</strong> Salad contains multiple vegetables. Lets assume that recipe of the salad is to add vegetables in the given order so the order also needs to be persisted</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[1780306258]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p><strong>Context:</strong> Salad contains multiple vegetables. Lets assume that recipe of the salad is to add vegetables in the given order so the order also needs to be persisted</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "salad":2,
                  "assum":1,
                  "recip":1,
                  "context":1,
                  "veget":2,
                  "strong":2,
                  "persist":1,
                  "order":2,
                  "multipl":1,
                  "add":1,
                  "let":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Here are the class definitions</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[-1697468776]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Here are the class definitions</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"definitions",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "definit":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"public class Salad { private String name; private String description; private List&lt;Vegetable&gt; veggies = new ArrayList&lt;Vegetable&gt;(); //setters and getters } public class Vegetable { private String name; private String description; //setters and getters } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[20225902]-[1943423512]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"CompilationUnitNode",
                  "imports":[
                    
                  ],
                  "typeDeclarations":[
                    {
                      "type":"ClassDeclarationNode",
                      "modifiers":[
                        {
                          "type":"KeywordModifierNode",
                          "value":"public",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Salad",
                        "comments":[
                          
                        ]
                      },
                      "body":{
                        "type":"ClassBodyNode",
                        "declarations":[
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"name",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"description",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"String",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"FieldDeclaratorNode",
                            "modifiers":[
                              {
                                "type":"KeywordModifierNode",
                                "value":"private",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "variables":{
                              "type":"VariableDeclaratorsNode",
                              "declarators":[
                                {
                                  "type":"VariableDeclaratorNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"veggies",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayDepth":[
                                    
                                  ],
                                  "assignment":{
                                    "type":"VariableAssignmentNode",
                                    "variableAssignment":{
                                      "type":"VariableExpressionInitNode",
                                      "expression":{
                                        "type":"ConstructorCreatorNode",
                                        "creatorType":{
                                          "type":"ReferenceTypeNode",
                                          "ids":[
                                            {
                                              "type":"ParameterizedTypeNode",
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"ArrayList",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "typeArguments":{
                                                "type":"TypeArgumentsNode",
                                                "types":[
                                                  {
                                                    "type":"ReferenceTypeNode",
                                                    "ids":[
                                                      {
                                                        "type":"ParameterizedTypeNode",
                                                        "identifier":{
                                                          "type":"IdentifierNode",
                                                          "name":"Vegetable",
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "expressionArgs":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "varType":{
                                    "type":"ReferenceTypeNode",
                                    "ids":[
                                      {
                                        "type":"ParameterizedTypeNode",
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"List",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "typeArguments":{
                                          "type":"TypeArgumentsNode",
                                          "types":[
                                            {
                                              "type":"ReferenceTypeNode",
                                              "ids":[
                                                {
                                                  "type":"ParameterizedTypeNode",
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"Vegetable",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              {
                                "text":"//setters and getters } public class Vegetable { private String name; private String description; //setters and getters } \n"
                              }
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                }
              ]
            },
            "rawText":"public class Salad { private String name; private String description; private List<Vegetable> veggies = new ArrayList<Vegetable>(); //setters and getters } public class Vegetable { private String name; private String description; //setters and getters } \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "salad":1,
                  "descript":2,
                  "setter":2,
                  "veget":3,
                  "getter":2,
                  "array":1,
                  "veggi":1,
                  "list":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ArrayList",
                          "comments":[
                            
                          ]
                        },
                        "typeArguments":{
                          "type":"TypeArgumentsNode",
                          "types":[
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"Vegetable",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Vegetable",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"List",
                          "comments":[
                            
                          ]
                        },
                        "typeArguments":{
                          "type":"TypeArgumentsNode",
                          "types":[
                            {
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"Vegetable",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"name",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"description",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"veggies",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"ConstructorCreatorNode",
                          "creatorType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"ArrayList",
                                  "comments":[
                                    
                                  ]
                                },
                                "typeArguments":{
                                  "type":"TypeArgumentsNode",
                                  "types":[
                                    {
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"Vegetable",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "expressionArgs":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"List",
                            "comments":[
                              
                            ]
                          },
                          "typeArguments":{
                            "type":"TypeArgumentsNode",
                            "types":[
                              {
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"Vegetable",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Here is the hibernate-mapping.xml</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[1319359070]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Here is the hibernate-mapping.xml</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "xml":1,
                  "hibern":1,
                  "map":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&lt;hibernate-mapping&gt; &lt;class name=&quot;Salad&quot; table=&quot;SALAD&quot;&gt; &lt;id name=&quot;id&quot;&gt; &lt;generator class=&quot;sequence&quot;/&gt; &lt;/id&gt; &lt;property name=&quot;name&quot;/&gt; &lt;property name=&quot;description&quot;/&gt; &lt;list name=veggies cascade=&quot;all-delete-orphan&quot; table=&quot;SALAD_VEGGIES&quot; lazy=&quot;false&quot;&gt; &lt;key column=&quot;salad_id&quot; /&gt; &lt;list-index column=&quot;idx&quot; /&gt; &lt;many-to-many column=&quot;veg_id&quot; class=&quot;Vegetable&quot; /&gt; &lt;/list&gt; &lt;/class&gt; &lt;class name=&quot;Vegetable&quot; table=&quot;VEGETABLE&quot;&gt; &lt;id name=&quot;id&quot;&gt; &lt;generator class=&quot;sequence&quot;/&gt; &lt;/id&gt; &lt;property name=&quot;name&quot;/&gt; &lt;property name=&quot;description&quot;/&gt; &lt;/class&gt; &lt;/hibernate-mapping&gt; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[20225902]-[-1557371603]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"<hibernate-mapping> <"
                },
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"name",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"=\"Salad\" table=\"SALAD\"> "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"id"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"id\""
                      }
                    }
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"generator"
                      },
                      "attributes":[
                        {
                          "type":"XmlAttributeNode",
                          "name":{
                            "type":"XmlNameNode",
                            "value":"class"
                          },
                          "value":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"sequence\""
                          }
                        }
                      ],
                      "elements":[
                        
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"name\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"property"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"description\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" <list name=veggies cascade=\"all-delete-orphan\" table=\"SALAD"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"_VEGGIES",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"\" lazy=\"false\"> "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"key"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"column"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"salad_id\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"list-index"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"column"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"idx\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"many-to-many"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"column"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"veg_id\""
                      }
                    },
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"class"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"Vegetable\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" </list> </class> "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"class"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"name"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"Vegetable\""
                      }
                    },
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"table"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"VEGETABLE\""
                      }
                    }
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"id"
                      },
                      "attributes":[
                        {
                          "type":"XmlAttributeNode",
                          "name":{
                            "type":"XmlNameNode",
                            "value":"name"
                          },
                          "value":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"id\""
                          }
                        }
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":" "
                        },
                        {
                          "type":"XmlNode",
                          "name":{
                            "type":"XmlNameNode",
                            "value":"generator"
                          },
                          "attributes":[
                            {
                              "type":"XmlAttributeNode",
                              "name":{
                                "type":"XmlNameNode",
                                "value":"class"
                              },
                              "value":{
                                "type":"StringLiteralNode",
                                "valueRep":"\"sequence\""
                              }
                            }
                          ],
                          "elements":[
                            
                          ]
                        },
                        {
                          "type":"XmlTextNode",
                          "contents":" "
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"property"
                      },
                      "attributes":[
                        {
                          "type":"XmlAttributeNode",
                          "name":{
                            "type":"XmlNameNode",
                            "value":"name"
                          },
                          "value":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"name\""
                          }
                        }
                      ],
                      "elements":[
                        
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"property"
                      },
                      "attributes":[
                        {
                          "type":"XmlAttributeNode",
                          "name":{
                            "type":"XmlNameNode",
                            "value":"name"
                          },
                          "value":{
                            "type":"StringLiteralNode",
                            "valueRep":"\"description\""
                          }
                        }
                      ],
                      "elements":[
                        
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" </hibernate-mapping> "
                }
              ]
            },
            "rawText":"<hibernate-mapping> <class name=\"Salad\" table=\"SALAD\"> <id name=\"id\"> <generator class=\"sequence\"/> </id> <property name=\"name\"/> <property name=\"description\"/> <list name=veggies cascade=\"all-delete-orphan\" table=\"SALAD_VEGGIES\" lazy=\"false\"> <key column=\"salad_id\"/> <list-index column=\"idx\"/> <many-to-many column=\"veg_id\"class=\"Vegetable\"/> </list> </class> <class name=\"Vegetable\"table=\"VEGETABLE\"> <id name=\"id\"> <generator class=\"sequence\"/> </id> <property name=\"name\"/> <property name=\"description\"/> </class> </hibernate-mapping> ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "salad":4,
                  "properti":4,
                  "descript":2,
                  "delet":1,
                  "map":2,
                  "orphan":1,
                  "hibern":2,
                  "lazi":1,
                  "veget":3,
                  "cascad":1,
                  "key":1,
                  "tabl":3,
                  "sequenc":2,
                  "generat":2,
                  "idx":1,
                  "fals":1,
                  "column":3,
                  "veggi":2,
                  "veg":1,
                  "list":3,
                  "index":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<ol> \n <li>I am using the List because sequence of the vegetables have to preserved</li> \n <li>When saving the salad, constituent vegetables already exists in the Vegetables table</li> \n</ol>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[594448061]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<ol> \n <li>I am using the List because sequence of the vegetables have to preserved</li> \n <li>When saving the salad, constituent vegetables already exists in the Vegetables table</li> \n</ol>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "salad":1,
                  "exist":1,
                  "veget":3,
                  "tabl":1,
                  "preserv":1,
                  "sequenc":1,
                  "save":1,
                  "constitu":1,
                  "list":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p><strong>Objective:</strong> Create a JPQ query to fetch the list of all the vegetables involved for a given salad</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[-1168674659]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p><strong>Objective:</strong> Create a JPQ query to fetch the list of all the vegetables involved for a given salad</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "salad":1,
                  "involv":1,
                  "veget":1,
                  "strong":2,
                  "object":1,
                  "queri":1,
                  "jpq":1,
                  "fetch":1,
                  "creat":1,
                  "list":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>What I tried? 1)</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[122925147]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>What I tried? 1)</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"SELECT v FROM SALAD.veggies v where v.salad_id = :salad_id "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[20225902]-[-1329858383]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"SELECT v FROM SALAD.veggies v where "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"v",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"IdentifierNode",
                      "name":"salad_id",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" = :"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"salad_id",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                }
              ]
            },
            "rawText":"SELECT v FROM SALAD.veggies v where vsalad_id = :salad_id ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "veggi":1,
                  "vsalad":1,
                  "salad":2,
                  "select":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>which didn't work. How to query on a table that doesn't have a class (like List and Map? variables)</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20225902]-[-967893779]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>which didn't work. How to query on a table that doesn't have a class (like List and Map? variables)</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "map":1,
                  "work":1,
                  "tabl":1,
                  "queri":1,
                  "variabl":1,
                  "list":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":20225970,
      "questionId":20225902,
      "comments":[
        
      ],
      "creationDate":"2013-11-26",
      "lastActivityDate":"2013-11-26",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":504956,
        "displayName":"Andrei I",
        "reputation":10106
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Try this:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20225970]-[1471886542]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Try this:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"SELECT v FROM Salad s JOIN s.veggies v where s.id = :salad_id "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[20225970]-[-1393058398]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"SELECT v FROM Salad s JOIN s.veggies v where s.id = :"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"salad_id",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"SELECT v FROM Salad s JOIN s.veggies v where s.id = :salad_id ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "veggi":1,
                    "join":1,
                    "salad":2,
                    "select":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Remember: in JPQL you work with Java fields, not with column names. Also there is not relationship from <code>Vegetable</code> entity to the <code>Salad</code> entity.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20225970]-[-660427896]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Remember: in JPQL you work with Java fields, not with column names. Also there is not relationship from <code>Vegetable</code> entity to the <code>Salad</code> entity.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "salad":1,
                    "name":1,
                    "field":1,
                    "veget":1,
                    "jpql":1,
                    "work":1,
                    "code":4,
                    "rememb":1,
                    "relationship":1,
                    "column":1,
                    "entiti":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":20226893,
      "questionId":20225902,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":30178948,
          "postId":20226893,
          "creationDate":"2013-11-27",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2639206,
            "displayName":"Ram",
            "reputation":760
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Vegetable doesn't have salad mapping"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20226893-cu30178948]-[665708244]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Vegetable doesn't have salad mapping"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "veget":1,
                        "salad":1,
                        "map":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":30195801,
          "postId":20226893,
          "creationDate":"2013-11-27",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":258741,
            "displayName":"Zeus",
            "reputation":2209
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"who is the parent of the relationship? looks like a one to many relationship(salad - veggie) then how does the veggie not have the id of the salad in it, looks fishy"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[20226893-cu30195801]-[-1761383483]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"who is the parent of the relationship? looks like a one to many relationship(salad - veggie) then how does the veggie not have the id of the salad in it, looks fishy"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "salad":2,
                        "parent":1,
                        "fishi":1,
                        "relationship":2,
                        "veggi":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-11-26",
      "lastActivityDate":"2013-11-26",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":258741,
        "displayName":"Zeus",
        "reputation":2209
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can even say </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20226893]-[1736868065]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can even say </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"select v from Vegetable v where v.salad_id = :saladId "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[20226893]-[-1763736768]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"select v from Vegetable v where "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"v",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"salad_id",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" = :"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"saladId",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"select v from Vegetable v where vsalad_id = :saladId ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "vsalad":1,
                    "veget":1,
                    "salad":1,
                    "select":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}