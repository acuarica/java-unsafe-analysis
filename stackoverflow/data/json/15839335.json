{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":15839335,
    "title":"Using for loop inside of a JSP",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":22537140,
        "postId":15839335,
        "creationDate":"2013-04-05",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":597657,
          "displayName":"Eng.Fouad",
          "reputation":49545
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Writing Java code inside JSP page is not recommended. Use JSTL core tag `\n<c:foreach>\n ` instead.\n</c:foreach>"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15839335-cu22537140]-[2077499041]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Writing Java code inside JSP page is not recommended. Use JSTL core tag `\n<c:foreach>\n ` instead.\n</c:foreach>"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "recommend":1,
                      "tag":1,
                      "page":1,
                      "code":1,
                      "insid":1,
                      "foreach":2,
                      "jsp":1,
                      "jstl":1,
                      "core":1,
                      "write":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22537267,
        "postId":15839335,
        "creationDate":"2013-04-05",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":157882,
          "displayName":"BalusC",
          "reputation":548029
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Just stop using `&lt;% %&gt;`. You'll automatically be forced to do the right things. See also http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files/3180202#3180202"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15839335-cu22537267]-[1902148499]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Just stop using `&lt;% %&gt;`. You'll automatically be forced to do the right things. See also http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files/3180202#3180202"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "thing":1,
                      "stop":1,
                      "avoid":1,
                      "code":1,
                      "stackoverflow":1,
                      "automat":1,
                      "jsp":1,
                      "file":1,
                      "forc":1,
                      "http":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "html",
      "jsp",
      "loops",
      "for-loop"
    ],
    "creationDate":"2013-04-05",
    "lastActivityDate":"2013-04-05",
    "score":7,
    "viewCount":32141,
    "owner":{
      "type":"StackOverflowUser",
      "id":2249933,
      "displayName":"Jack Dalton",
      "reputation":74
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I want to loop through an arraylist of &quot;Festivals&quot; and get their information with get methods, printing out all it's values. For some reason when i use this code, it will always choose the &quot;0&quot;th value and not increment the loop.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15839335]-[-2117875757]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I want to loop through an arraylist of &quot;Festivals&quot; and get their information with get methods, printing out all it's values. For some reason when i use this code, it will always choose the &quot;0&quot;th value and not increment the loop.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "loop":2,
                  "print":1,
                  "festiv":1,
                  "arraylist":1,
                  "reason":1,
                  "code":1,
                  "inform":1,
                  "valu":1,
                  "quot":4,
                  "choos":1,
                  "increment":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>if i hard code the values as &quot;get(1)&quot; it will get the correct values so my issue is clearly with the syntax.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15839335]-[33894851]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>if i hard code the values as &quot;get(1)&quot; it will get the correct values so my issue is clearly with the syntax.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "hard":1,
                  "correct":1,
                  "issu":1,
                  "code":1,
                  "syntax":1,
                  "valu":2,
                  "quot":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"&lt;h1&gt;All Festival Information&lt;/h1&gt; &lt;jsp:useBean id=&quot;allFestivals&quot; type=&quot;java.util.ArrayList&quot; scope=&quot;session&quot; /&gt; &lt;table border =&quot;1&quot;&gt; &lt;tr&gt; &lt;td&gt;Festival Name:&lt;/td&gt; &lt;td&gt;Location:&lt;/td&gt; &lt;td&gt;Start Date:&lt;/td&gt; &lt;td&gt;End Date:&lt;/td&gt; &lt;td&gt;URL:&lt;/td&gt; &lt;/tr&gt; &lt;% for(int i = 0; i &lt; allFestivals.size(); i+=1) { %&gt; &lt;tr&gt; &lt;td&gt;${allFestivals.get(i).getFestivalName()}&lt;/td&gt; &lt;td&gt;${allFestivals.get(i).getLocation()}&lt;/td&gt; &lt;td&gt;${allFestivals.get(i).getStartDate()}&lt;/td&gt; &lt;td&gt;${allFestivals.get(i).getEndDate()}&lt;/td&gt; &lt;td&gt;${allFestivals.get(i).getURL()}&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; &lt;/table&gt; "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[15839335]-[-1968875594]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"h1"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":"All Festival Information"
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"jsp:useBean"
                  },
                  "attributes":[
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"id"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"allFestivals\""
                      }
                    },
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"type"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"java.util.ArrayList\""
                      }
                    },
                    {
                      "type":"XmlAttributeNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"scope"
                      },
                      "value":{
                        "type":"StringLiteralNode",
                        "valueRep":"\"session\""
                      }
                    }
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" <table border =\"1\"> "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"tr"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"Festival Name:"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"Location:"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"Start Date:"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"End Date:"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"URL:"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" <% for(int "
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"=",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"i",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"LiteralNode",
                      "node":{
                        "type":"IntegerLiteralNode",
                        "valueRep":"0"
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"<",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"i",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"allFestivals",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"size",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"i+=1) { %> "
                },
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"tr"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"${allFestivals.get(i).getFestivalName()}"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"${allFestivals.get(i).getLocation()}"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"${allFestivals.get(i).getStartDate()}"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"${allFestivals.get(i).getEndDate()}"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    },
                    {
                      "type":"XmlNode",
                      "name":{
                        "type":"XmlNameNode",
                        "value":"td"
                      },
                      "attributes":[
                        
                      ],
                      "elements":[
                        {
                          "type":"XmlTextNode",
                          "contents":"${allFestivals.get(i).getURL()}"
                        }
                      ]
                    },
                    {
                      "type":"XmlTextNode",
                      "contents":" "
                    }
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" <% } %> </table> "
                }
              ]
            },
            "rawText":"<h1>All Festival Information</h1> <jsp:useBean id=\"allFestivals\"type=\"java.util.ArrayList\"scope=\"session\"/> <table border =\"1\"> <tr> <td>Festival Name:</td> <td>Location:</td> <td>Start Date:</td> <td>End Date:</td> <td>URL:</td> </tr> <% for(int i = 0; i < allFestivals.size(); i+=1) { %> <tr> <td>${allFestivals.get(i).getFestivalName()}</td> <td>${allFestivals.get(i).getLocation()}</td> <td>${allFestivals.get(i).getStartDate()}</td> <td>${allFestivals.get(i).getEndDate()}</td> <td>${allFestivals.get(i).getURL()}</td> </tr> <% } %> </table> ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "util":1,
                  "size":1,
                  "border":1,
                  "url":2,
                  "scope":1,
                  "festiv":10,
                  "tabl":2,
                  "array":1,
                  "bean":1,
                  "inform":1,
                  "date":4,
                  "jsp":1,
                  "session":1,
                  "end":2,
                  "type":1,
                  "start":2,
                  "locat":2,
                  "list":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  {
                    "type":"MethodInvocationNode",
                    "qualifiedIdentifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"allFestivals",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"size",
                      "comments":[
                        
                      ]
                    },
                    "args":{
                      "type":"ExpressionListNode",
                      "arguments":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":15839400,
      "questionId":15839335,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22537286,
          "postId":15839400,
          "creationDate":"2013-04-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":157882,
            "displayName":"BalusC",
            "reputation":548029
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"In OP's particular case, `allFestivals` is not available in *scriptlet* scope."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15839400-cu22537286]-[-374967302]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"In OP's particular case, `allFestivals` is not available in *scriptlet* scope."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"allFestivals",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "scope":1,
                        "scriptlet":1,
                        "festiv":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-04-05",
      "lastActivityDate":"2013-04-05",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1180968,
        "displayName":"Sajan Chandran",
        "reputation":5017
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Do this</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839400]-[1890017962]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Do this</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":" &lt;% for(int i = 0; i &lt; allFestivals.size(); i+=1) { %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=allFestivals.get(i).getFestivalName()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[15839400]-[-453924895]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":" <% for(int "
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"=",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"i",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"LiteralNode",
                        "node":{
                          "type":"IntegerLiteralNode",
                          "valueRep":"0"
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"<",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"i",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"allFestivals",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"size",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"i+=1) { %> <tr> <td><%="
                  },
                  {
                    "type":"IdentifierNode",
                    "name":"allFestivals",
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":".get(i)."
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"getFestivalName",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"()%></td> </tr> <% } %> "
                  }
                ]
              },
              "rawText":" <% for(int i = 0; i < allFestivals.size(); i+=1) { %> <tr> <td><%=allFestivals.get(i).getFestivalName()%></td> </tr> <% } %> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "size":1,
                    "festiv":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"allFestivals",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"size",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Better way is to use c:foreach see link <a href=\"http://www.tutorialspoint.com/jsp/jstl_core_foreach_tag.htm\"rel=\"nofollow\">jstl for each</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839400]-[-83829178]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Better way is to use c:foreach see link <a href=\"http://www.tutorialspoint.com/jsp/jstl_core_foreach_tag.htm\"rel=\"nofollow\">jstl for each</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "htm":1,
                    "tag":1,
                    "rel":1,
                    "nofollow":1,
                    "foreach":2,
                    "link":1,
                    "jsp":1,
                    "tutorialspoint":1,
                    "jstl":2,
                    "core":1,
                    "href":1,
                    "http":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":15839540,
      "questionId":15839335,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22539468,
          "postId":15839540,
          "creationDate":"2013-04-05",
          "score":4,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2249933,
            "displayName":"Jack Dalton",
            "reputation":74
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"My university. Talk about a bit old school teaching"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15839540-cu22539468]-[1525464731]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"My university. Talk about a bit old school teaching"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "school":1,
                        "bit":1,
                        "teach":1,
                        "talk":1,
                        "univers":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22538048,
          "postId":15839540,
          "creationDate":"2013-04-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2249933,
            "displayName":"Jack Dalton",
            "reputation":74
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Worked perfectly. Not sure why I was told to use the &quot;&lt;% %&gt;&quot; as most information on-line conforms to your method using &quot;"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15839540-cu22538048]-[-1878665712]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Worked perfectly. Not sure why I was told to use the &quot;&lt;% %&gt;&quot; as most information on-line conforms to your method using &quot;"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "conform":1,
                        "line":1,
                        "perfect":1,
                        "told":1,
                        "work":1,
                        "inform":1,
                        "quot":3
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22538095,
          "postId":15839540,
          "creationDate":"2013-04-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":157882,
            "displayName":"BalusC",
            "reputation":548029
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"You're welcome. Perhaps you were relying on a resource which is more than a decade old."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15839540-cu22538095]-[1876616985]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"You're welcome. Perhaps you were relying on a resource which is more than a decade old."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "resourc":1,
                        "reli":1,
                        "decad":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-04-05",
      "lastActivityDate":"2013-04-05",
      "score":12,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":157882,
        "displayName":"BalusC",
        "reputation":548029
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You concrete problem is caused because you're mixing <a href=\"http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files/3180202#3180202\">discouraged and old school</a> <em>scriptlets</em> <code>&lt;% %&gt;</code> with its successor EL <code>${}</code>. They do not share the same variable scope. The <code>allFestivals</code> is not available in <em>scriptlet</em> scope and the <code>i</code> is not available in EL scope.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839540]-[-778598704]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You concrete problem is caused because you're mixing <a href=\"http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files/3180202#3180202\">discouraged and old school</a> <em>scriptlets</em> <code>&lt;% %&gt;</code> with its successor EL <code>${}</code>. They do not share the same variable scope. The <code>allFestivals</code> is not available in <em>scriptlet</em> scope and the <code>i</code> is not available in EL scope.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"JsonObjectNode",
                    "members":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"allFestivals",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "school":1,
                    "question":1,
                    "discourag":1,
                    "concret":1,
                    "problem":1,
                    "scope":3,
                    "successor":1,
                    "scriptlet":2,
                    "festiv":1,
                    "avoid":1,
                    "code":9,
                    "share":1,
                    "stackoverflow":1,
                    "mix":1,
                    "jsp":1,
                    "caus":1,
                    "file":1,
                    "variabl":1,
                    "href":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You should install <a href=\"http://stackoverflow.com/tags/jstl/info\">JSTL</a> (&lt;-- click the link for instructions) and declare it in top of JSP as follows:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839540]-[-533816113]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You should install <a href=\"http://stackoverflow.com/tags/jstl/info\">JSTL</a> (&lt;-- click the link for instructions) and declare it in top of JSP as follows:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "tag":1,
                    "info":1,
                    "declar":1,
                    "stackoverflow":1,
                    "click":1,
                    "instal":1,
                    "link":1,
                    "jsp":1,
                    "jstl":2,
                    "href":1,
                    "http":1,
                    "top":1,
                    "instruct":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[15839540]-[669626811]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%> "
                  }
                ]
              },
              "rawText":"<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "prefix":1,
                    "uri":1,
                    "sun":1,
                    "jsp":1,
                    "jstl":1,
                    "core":1,
                    "taglib":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>and then iterate over the list as follows:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839540]-[-1147505558]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>and then iterate over the list as follows:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "iter":1,
                    "list":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><em>(beware of possible <a href=\"http://stackoverflow.com/questions/2658922/xss-prevention-in-java\">XSS attack holes</a>, use <code>&lt;c:out&gt;</code> accordingly)</em></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839540]-[795734979]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><em>(beware of possible <a href=\"http://stackoverflow.com/questions/2658922/xss-prevention-in-java\">XSS attack holes</a>, use <code>&lt;c:out&gt;</code> accordingly)</em></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"c:out"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "prevent":1,
                    "bewar":1,
                    "code":2,
                    "stackoverflow":1,
                    "attack":1,
                    "href":1,
                    "hole":1,
                    "http":1,
                    "xss":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Don't forget to <strong>remove</strong> the <code>&lt;jsp:useBean&gt;</code> as it has no utter value here when you're using a servlet as model-and-view controller. It would only lead to confusion. See also <a href=\"http://stackoverflow.com/tags/servlets/info\">our servlets wiki page</a>. Further you would do yourself a favour to disable <em>scriptlets</em> by the following entry in <code>web.xml</code> so that you won't accidently use them:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15839540]-[-1046558457]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Don't forget to <strong>remove</strong> the <code>&lt;jsp:useBean&gt;</code> as it has no utter value here when you're using a servlet as model-and-view controller. It would only lead to confusion. See also <a href=\"http://stackoverflow.com/tags/servlets/info\">our servlets wiki page</a>. Further you would do yourself a favour to disable <em>scriptlets</em> by the following entry in <code>web.xml</code> so that you won't accidently use them:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"jsp:useBean"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "disabl":1,
                    "lead":1,
                    "remov":1,
                    "accid":1,
                    "model":1,
                    "tag":1,
                    "scriptlet":1,
                    "page":1,
                    "servlet":3,
                    "strong":2,
                    "info":1,
                    "utter":1,
                    "code":4,
                    "web":1,
                    "stackoverflow":1,
                    "entri":1,
                    "bean":1,
                    "xml":1,
                    "jsp":1,
                    "favour":1,
                    "forget":1,
                    "control":1,
                    "wiki":1,
                    "confus":1,
                    "href":1,
                    "http":1,
                    "won":1,
                    "view":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}