{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":9799312,
    "title":"FullTextSearch in MYSql",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":12480515,
        "postId":9799312,
        "creationDate":"2012-03-21",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":765890,
          "displayName":"safarov",
          "reputation":5279
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"You want to get match percent for title and body separeted ?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9799312-cu12480515]-[753418396]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"You want to get match percent for title and body separeted ?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "titl":1,
                      "match":1,
                      "separet":1,
                      "percent":1,
                      "bodi":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12480671,
        "postId":9799312,
        "creationDate":"2012-03-21",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":349584,
          "displayName":"Muneeswaran Balasubramanian",
          "reputation":589
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Ya.Its appreciable.One more doubt,can you explain about my output compare with my query?I am little confused with that."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9799312-cu12480671]-[2019184114]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Ya.Its appreciable.One more doubt,can you explain about my output compare with my query?I am little confused with that."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "explain":1,
                      "appreci":1,
                      "queri":1,
                      "compar":1,
                      "doubt":1,
                      "confus":1,
                      "output":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12480845,
        "postId":9799312,
        "creationDate":"2012-03-21",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":765890,
          "displayName":"safarov",
          "reputation":5279
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"It seems it doesnt match with your `title` column, and almost all body column have 'database' string in it so its matching with high percent"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9799312-cu12480845]-[-317705232]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"It seems it doesnt match with your `title` column, and almost all body column have 'database' string in it so its matching with high percent"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "titl":1,
                      "match":2,
                      "doesnt":1,
                      "column":2,
                      "percent":1,
                      "databas":1,
                      "bodi":1,
                      "high":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":12480963,
        "postId":9799312,
        "creationDate":"2012-03-21",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":349584,
          "displayName":"Muneeswaran Balasubramanian",
          "reputation":589
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"&quot;almost all body column have 'database' string in it so its matching with high percent&quot;,i can't understand your quotes.Can you please elaborate?Becasue the match is different for 1 and 3?why its different?And how the match is like 0.937695.. and 0.92749810218811?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[9799312-cu12480963]-[-1051431794]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"&quot;almost all body column have 'database' string in it so its matching with high percent&quot;,i can't understand your quotes.Can you please elaborate?Becasue the match is different for 1 and 3?why its different?And how the match is like 0.937695.. and 0.92749810218811?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "understand":1,
                      "match":3,
                      "elabor":1,
                      "column":1,
                      "quot":3,
                      "percent":1,
                      "databas":1,
                      "bodi":1,
                      "becasu":1,
                      "high":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "mysql",
      "mysqli"
    ],
    "creationDate":"2012-03-21",
    "lastActivityDate":"2012-03-21",
    "score":0,
    "viewCount":189,
    "owner":{
      "type":"StackOverflowUser",
      "id":349584,
      "displayName":"Muneeswaran Balasubramanian",
      "reputation":589
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>In mysql fulltext search, the match gives some values,I don't know which one is mentioned by that values? I need the comparsion output in percentage?How can i achieve that?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9799312]-[1022271839]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>In mysql fulltext search, the match gives some values,I don't know which one is mentioned by that values? I need the comparsion output in percentage?How can i achieve that?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "percentag":1,
                  "compars":1,
                  "match":1,
                  "mention":1,
                  "achiev":1,
                  "fulltext":1,
                  "valu":2,
                  "mysql":1,
                  "output":1,
                  "search":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>SELECT id,title,body,MATCH (title,body) AGAINST ('database') FROM articles WHERE MATCH (title,body) AGAINST ('database');</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9799312]-[1452004471]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>SELECT id,title,body,MATCH (title,body) AGAINST ('database') FROM articles WHERE MATCH (title,body) AGAINST ('database');</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "titl":3,
                  "articl":1,
                  "match":2,
                  "select":1,
                  "databas":2,
                  "bodi":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Output:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[9799312]-[1450608112]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Output:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "output":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"id', 'title', 'body', 'MATCH' 1, 'MYSql Tutorial', 'My Sql is one of the database language', 0.93769526481628 10, 'MySQL vs. YourSQL', 'In the following database comparison ...', 0.93769526481628 6, 'MySQL Tutorial', 'DBMS stands for DataBase ...', 0.92749810218811 "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[9799312]-[-275554989]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"id', 'title', 'body', 'MATCH' 1, 'MYSql Tutorial', 'My Sql is one of the database language', 0.93769526481628 10, 'MySQL vs. YourSQL', 'In the following database comparison ...', 0.93769526481628 6, 'MySQL Tutorial', 'DBMS stands for "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DataBase",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"...', 0.92749810218811 "
                }
              ]
            },
            "rawText":"id', 'title', 'body', 'MATCH' 1, 'MYSql Tutorial', 'My Sql is one of the database language', 0.93769526481628 10, 'MySQL vs. YourSQL', 'In the following database comparison ...', 0.93769526481628 6, 'MySQL Tutorial', 'DBMS stands for DataBase ...', 0.92749810218811 ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "sql":4,
                  "languag":1,
                  "dbms":1,
                  "comparison":1,
                  "data":1,
                  "titl":1,
                  "stand":1,
                  "match":1,
                  "base":1,
                  "mysql":1,
                  "databas":2,
                  "bodi":1,
                  "tutori":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DataBase",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":9804206,
      "questionId":9799312,
      "comments":[
        
      ],
      "creationDate":"2012-03-21",
      "lastActivityDate":"2012-03-21",
      "lastEditDate":"2012-03-21",
      "score":1,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":1254716,
        "displayName":"RumpRanger",
        "reputation":376
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I think you mean you want the relevance as well as the result. That would look something like:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9804206]-[-1552508781]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I think you mean you want the relevance as well as the result. That would look something like:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "result":1,
                    "relev":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"SELECT id, title, body, MATCH(title, body) AGAINST ('database') as Relevance FROM `articles` WHERE MATCH(title, body) AGAINST ('database' IN BOOLEAN MODE) ORDER BY `Relevance` DESC "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[9804206]-[846687963]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"SELECT id, title, body, MATCH(title, body) AGAINST ('database') as Relevance FROM `articles` WHERE MATCH(title, body) AGAINST ('database' IN BOOLEAN MODE) ORDER BY `Relevance` DESC "
                  }
                ]
              },
              "rawText":"SELECT id, title, body, MATCH(title, body) AGAINST ('database') as Relevance FROM `articles` WHERE MATCH(title, body) AGAINST ('database' IN BOOLEAN MODE) ORDER BY `Relevance` DESC ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "desc":1,
                    "relev":2,
                    "titl":3,
                    "articl":1,
                    "match":2,
                    "select":1,
                    "order":1,
                    "mode":1,
                    "databas":2,
                    "bodi":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><strong>edit</strong> I got the question wrong. Here's a list of all relevance's in percentage form: </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9804206]-[877072688]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><strong>edit</strong> I got the question wrong. Here's a list of all relevance's in percentage form: </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "percentag":1,
                    "wrong":1,
                    "relev":1,
                    "strong":2,
                    "edit":1,
                    "form":1,
                    "list":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"SELECT a.id, a.title, a.body, MATCH(a.title) AGAINST ('database') as titleRelevance, MATCH(a.body) AGAINST ('database') as bodyRelevance, MATCH(a.title) AGAINST ('database')/c.maxTitleRelevance *100 AS percentageTitleRelevance, MATCH(a.body) AGAINST ('database')/d.maxBodyRelevance *100 AS percentageBodyRelevance, c.maxTitleRelevance + d.maxBodyRelevance AS maxTotalRelevance, (MATCH(a.title) AGAINST ('database')+MATCH(a.body) AGAINST ('database'))/(c.maxTitleRelevance + d.maxBodyRelevance)*100 AS percentageTotalRelevance FROM `articles` a, (SELECT MAX(MATCH(b.title) AGAINST('database')) as maxTitleRelevance FROM articles b LIMIT 1) c, (SELECT MAX(MATCH(b.body) AGAINST('database')) as maxBodyRelevance FROM articles b LIMIT 1) d WHERE MATCH(a.title, a.body) AGAINST ('database' IN BOOLEAN MODE) "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[9804206]-[-1873226303]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"SELECT a.id, a.title, a.body, MATCH(a.title) AGAINST ('database') as "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"titleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":", MATCH(a.body) AGAINST ('database') as "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"bodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":", MATCH(a.title) AGAINST ('database')/"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"c",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxTitleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" *100 AS "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"percentageTitleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":", MATCH(a.body) AGAINST ('database')/"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"d",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxBodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" *100 AS "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"percentageBodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":", "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"c",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxTitleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" + "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"d",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxBodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" AS "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"maxTotalRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":", (MATCH(a.title) AGAINST ('database')+MATCH(a.body) AGAINST ('database'))/("
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"c",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxTitleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" + "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"d",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"maxBodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":")*100 AS "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"percentageTotalRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" FROM `articles` a, (SELECT MAX(MATCH(b.title) AGAINST('database')) as "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"maxTitleRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" FROM articles b LIMIT 1) c, (SELECT MAX(MATCH(b.body) AGAINST('database')) as "
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"maxBodyRelevance",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" FROM articles b LIMIT 1) d WHERE MATCH(a.title, a.body) AGAINST ('database' IN BOOLEAN MODE) "
                  }
                ]
              },
              "rawText":"SELECT a.id, a.title, a.body, MATCH(a.title) AGAINST ('database') as titleRelevance, MATCH(a.body) AGAINST ('database') as bodyRelevance, MATCH(a.title) AGAINST ('database')/cmaxTitleRelevance *100 AS percentageTitleRelevance, MATCH(a.body) AGAINST ('database')/dmaxBodyRelevance *100 AS percentageBodyRelevance, cmaxTitleRelevance + dmaxBodyRelevance AS maxTotalRelevance, (MATCH(a.title) AGAINST ('database')+MATCH(a.body) AGAINST ('database'))/(cmaxTitleRelevance + dmaxBodyRelevance)*100 AS percentageTotalRelevance FROM `articles` a, (SELECT MAX(MATCH(b.title) AGAINST('database')) as maxTitleRelevance FROM articles b LIMIT 1) c, (SELECT MAX(MATCH(b.body) AGAINST('database')) as maxBodyRelevance FROM articles b LIMIT 1) d WHERE MATCH(a.title, a.body) AGAINST ('database' IN BOOLEAN MODE) ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "cmax":3,
                    "percentag":3,
                    "relev":14,
                    "titl":12,
                    "articl":3,
                    "total":2,
                    "match":9,
                    "select":3,
                    "max":5,
                    "mode":1,
                    "databas":9,
                    "bodi":12,
                    "dmax":3,
                    "limit":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This might be easier to read in the following fiddle. <a href=\"http://sqlfiddle.com/#!2/c7885/14\"rel=\"nofollow\">http://sqlfiddle.com/#!2/c7885/14</a> Full text searches in mysql are flaky at best. If the word database is in at least 50% of rows of the db, it will be ignored as a common stopword if you dont specify boolean mode like in the query above. In terms of how relevance is calculated I'm afraid I cant help you there.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[9804206]-[-1700747100]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This might be easier to read in the following fiddle. <a href=\"http://sqlfiddle.com/#!2/c7885/14\"rel=\"nofollow\">http://sqlfiddle.com/#!2/c7885/14</a> Full text searches in mysql are flaky at best. If the word database is in at least 50% of rows of the db, it will be ignored as a common stopword if you dont specify boolean mode like in the query above. In terms of how relevance is calculated I'm afraid I cant help you there.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "flaki":1,
                    "afraid":1,
                    "full":1,
                    "rel":1,
                    "term":1,
                    "dont":1,
                    "relev":1,
                    "stopword":1,
                    "text":1,
                    "calcul":1,
                    "row":1,
                    "easier":1,
                    "nofollow":1,
                    "common":1,
                    "queri":1,
                    "mode":1,
                    "sqlfiddl":2,
                    "mysql":1,
                    "databas":1,
                    "fiddl":1,
                    "href":1,
                    "http":2,
                    "word":1,
                    "search":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}