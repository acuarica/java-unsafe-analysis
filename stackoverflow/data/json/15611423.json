{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":15611423,
    "title":"What do the &quot;compacting perm gen&quot; values represent?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":22142085,
        "postId":15611423,
        "creationDate":"2013-03-25",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":43662,
          "displayName":"seanhodges",
          "reputation":8622
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Sorry, my example was not a good representation of the error we're actually seeing. I've updated my question."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15611423-cu22142085]-[1060463166]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Sorry, my example was not a good representation of the error we're actually seeing. I've updated my question."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "represent":1,
                      "good":1,
                      "updat":1,
                      "error":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22145949,
        "postId":15611423,
        "creationDate":"2013-03-25",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":946679,
          "displayName":"zeller",
          "reputation":3077
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Ah, no clue then. Sorry."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15611423-cu22145949]-[1571472067]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Ah, no clue then. Sorry."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "clue":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22141093,
        "postId":15611423,
        "creationDate":"2013-03-25",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":946679,
          "displayName":"zeller",
          "reputation":3077
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"If you make the division, you'll get it. The percentage of the permgen used. (11253K / 16384K)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15611423-cu22141093]-[-650276855]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"If you make the division, you'll get it. The percentage of the permgen used. (11253K / 16384K)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "divis":1,
                      "permgen":1,
                      "percentag":1,
                      "make":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "jvm",
      "crash-reports",
      "crash-dumps",
      "jvm-crash"
    ],
    "creationDate":"2013-03-25",
    "lastActivityDate":"2013-06-03",
    "lastEditDate":"2013-03-25",
    "score":2,
    "viewCount":1339,
    "owner":{
      "type":"StackOverflowUser",
      "id":43662,
      "displayName":"seanhodges",
      "reputation":8622
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm investigating a JVM crash on one of our production systems, what do the following memory values represent in the hs_err_pid log file snippet below?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15611423]-[-1315708790]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm investigating a JVM crash on one of our production systems, what do the following memory values represent in the hs_err_pid log file snippet below?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"hs_err_pid",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "system":1,
                  "snippet":1,
                  "crash":1,
                  "investig":1,
                  "pid":1,
                  "valu":1,
                  "file":1,
                  "err":1,
                  "repres":1,
                  "log":1,
                  "product":1,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Heap par new generation total 1258624K, used 955445K [0x00000005c0000000, 0x00000006155b0000, 0x000000066aaa0000) eden space 1118784K, 73% used [0x00000005c0000000, 0x00000005f1e52598, 0x0000000604490000) from space 139840K, 98% used [0x000000060cd20000, 0x00000006153db100, 0x00000006155b0000) to space 139840K, 0% used [0x0000000604490000, 0x0000000604490000, 0x000000060cd20000) tenured generation total 2796224K, used 1745107K [0x000000066aaa0000, 0x0000000715550000, 0x00000007c0000000) the space 2796224K, 62% used [0x000000066aaa0000, 0x00000006d52d4d90, 0x00000006c2e0c400, 0x0000000715550000) compacting perm gen total 482944K, used 482943K [0x00000007c0000000, 0x00000007dd7a0000, 0x0000000800000000) the space 482944K, 99% used [0x00000007c0000000, 0x00000007dd79fff0, 0x00000007dd7a0000, 0x00000007dd7a0000) No shared spaces configured. "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[15611423]-[692950970]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"Heap par new generation total 1258624K, used 955445K [0x00000005c0000000, 0x00000006155b0000, 0x000000066aaa0000) eden space 1118784K, 73% used [0x00000005c0000000, 0x00000005f1e52598, 0x0000000604490000) from space 139840K, 98% used [0x000000060cd20000, 0x00000006153db100, 0x00000006155b0000) to space 139840K, 0% used [0x0000000604490000, 0x0000000604490000, 0x000000060cd20000) tenured generation total 2796224K, used 1745107K [0x000000066aaa0000, 0x0000000715550000, 0x00000007c0000000) the space 2796224K, 62% used [0x000000066aaa0000, 0x00000006d52d4d90, 0x00000006c2e0c400, 0x0000000715550000) compacting perm gen total 482944K, used 482943K [0x00000007c0000000, 0x00000007dd7a0000, 0x0000000800000000) the space 482944K, 99% used [0x00000007c0000000, 0x00000007dd79fff0, 0x00000007dd7a0000, 0x00000007dd7a0000) No shared spaces configured. "
                }
              ]
            },
            "rawText":"Heap par new generation total 1258624K, used 955445K [0x00000005c0000000, 0x00000006155b0000, 0x000000066aaa0000) eden space 1118784K, 73% used [0x00000005c0000000, 0x00000005f1e52598, 0x0000000604490000) from space 139840K, 98% used [0x000000060cd20000, 0x00000006153db100, 0x00000006155b0000) to space 139840K, 0% used [0x0000000604490000, 0x0000000604490000, 0x000000060cd20000) tenured generation total 2796224K, used 1745107K [0x000000066aaa0000, 0x0000000715550000, 0x00000007c0000000) the space 2796224K, 62% used [0x000000066aaa0000, 0x00000006d52d4d90, 0x00000006c2e0c400, 0x0000000715550000) compacting perm gen total 482944K, used 482943K [0x00000007c0000000, 0x00000007dd7a0000, 0x0000000800000000) the space 482944K, 99% used [0x00000007c0000000, 0x00000007dd79fff0, 0x00000007dd7a0000, 0x00000007dd7a0000) No shared spaces configured. ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "tenur":1,
                  "par":1,
                  "configur":1,
                  "total":3,
                  "eden":1,
                  "share":1,
                  "space":6,
                  "perm":1,
                  "generat":2,
                  "heap":1,
                  "aaa":3,
                  "fff":1,
                  "gen":1,
                  "compact":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>My concern is with the &quot;compacted perm gen&quot; usage: does it mean percentage used of maximum allocated perm gen heap, or percentage used of maximum heap, or something else? The percentage provided appears to be a division of the used/total, is this the total allocated perm gen? Since our <code>-XX:MaxPermSize</code> is set to 1GB...</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15611423]-[-668307628]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>My concern is with the &quot;compacted perm gen&quot; usage: does it mean percentage used of maximum allocated perm gen heap, or percentage used of maximum heap, or something else? The percentage provided appears to be a division of the used/total, is this the total allocated perm gen? Since our <code>-XX:MaxPermSize</code> is set to 1GB...</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"MaxPermSize",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "provid":1,
                  "alloc":2,
                  "size":1,
                  "percentag":3,
                  "appear":1,
                  "set":1,
                  "total":2,
                  "concern":1,
                  "code":2,
                  "maximum":2,
                  "max":1,
                  "divis":1,
                  "perm":4,
                  "usag":1,
                  "quot":2,
                  "heap":2,
                  "gen":3,
                  "compact":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MaxPermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Are there any useful resources (other than the <a href=\"http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf\"rel=\"nofollow\">Oracle whitepaper</a>, which does not mention hs_err files) to interpret the data dumped on a JVM crash?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15611423]-[-1162961536]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Are there any useful resources (other than the <a href=\"http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf\"rel=\"nofollow\">Oracle whitepaper</a>, which does not mention hs_err files) to interpret the data dumped on a JVM crash?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"hs_err",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "pdf":1,
                  "crash":1,
                  "data":1,
                  "rel":1,
                  "resourc":1,
                  "oracl":2,
                  "dump":1,
                  "memorymanag":1,
                  "mention":1,
                  "nofollow":1,
                  "whitepap":2,
                  "javas":1,
                  "file":1,
                  "err":1,
                  "technetwork":1,
                  "href":1,
                  "http":1,
                  "interpret":1,
                  "www":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":16893854,
      "questionId":15611423,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":24380112,
          "postId":16893854,
          "creationDate":"2013-06-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":43662,
            "displayName":"seanhodges",
            "reputation":8622
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for confirming this, as a result I've marked my question as solved."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16893854-cu24380112]-[-1965639718]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for confirming this, as a result I've marked my question as solved."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "solv":1,
                        "question":1,
                        "result":1,
                        "confirm":1,
                        "mark":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24379785,
          "postId":16893854,
          "creationDate":"2013-06-03",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1804661,
            "displayName":"Christopher Yang",
            "reputation":895
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I guess in the end it had nothing to do with compacting PermGen. I assume by &quot;compacting&quot; it really means garbage collection / unload classes in PermGen. I did a quick test and it's indeed the currently allocated PermGen and not the max perm space. CGLib has also been reported by others to stuff PermGen in the past, but since Hibernate 3.3, it's switched to Javassist which seems to have alleviated this exact issue."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16893854-cu24379785]-[-915065312]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I guess in the end it had nothing to do with compacting PermGen. I assume by &quot;compacting&quot; it really means garbage collection / unload classes in PermGen. I did a quick test and it's indeed the currently allocated PermGen and not the max perm space. CGLib has also been reported by others to stuff PermGen in the past, but since Hibernate 3.3, it's switched to Javassist which seems to have alleviated this exact issue."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PermGen",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PermGen",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":1,
                        "assum":1,
                        "javassist":1,
                        "switch":1,
                        "alloc":1,
                        "hibern":1,
                        "mean":1,
                        "issu":1,
                        "unload":1,
                        "exact":1,
                        "max":1,
                        "space":1,
                        "allevi":1,
                        "stuff":1,
                        "perm":5,
                        "report":1,
                        "end":1,
                        "class":1,
                        "quot":2,
                        "quick":1,
                        "collect":1,
                        "guess":1,
                        "cglib":1,
                        "past":1,
                        "garbag":1,
                        "gen":4,
                        "compact":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"PermGen",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-06-03",
      "lastActivityDate":"2013-06-03",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":43662,
        "displayName":"seanhodges",
        "reputation":8622
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I never found a reference that accurately described the &quot;compacting perm gen&quot; values, but our own investigation proved that the reported values were:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16893854]-[-786844842]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I never found a reference that accurately described the &quot;compacting perm gen&quot; values, but our own investigation proved that the reported values were:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "prove":1,
                    "investig":1,
                    "found":1,
                    "accur":1,
                    "valu":2,
                    "refer":1,
                    "perm":1,
                    "report":1,
                    "quot":2,
                    "gen":1,
                    "compact":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>currently used PermGen / currently allocated PermGen</p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16893854]-[-513208361]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>currently used PermGen / currently allocated PermGen</p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "blockquot":2,
                    "gen":2,
                    "alloc":1,
                    "perm":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermGen",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In the example in my question, this meant that 482944K of memory had already been allocated for PermGen and 482943K of it had been used at the point of GC (99%). Our max PermGen size was set to 1048576K (1GB), so the collection process had plenty of reserved resources to re-allocate with.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16893854]-[-58014111]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In the example in my question, this meant that 482944K of memory had already been allocated for PermGen and 482943K of it had been used at the point of GC (99%). Our max PermGen size was set to 1048576K (1GB), so the collection process had plenty of reserved resources to re-allocate with.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "point":1,
                    "alloc":2,
                    "size":1,
                    "process":1,
                    "set":1,
                    "resourc":1,
                    "meant":1,
                    "max":1,
                    "perm":2,
                    "collect":1,
                    "plenti":1,
                    "reserv":1,
                    "gen":2,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermGen",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>For those encountering similar issues - we solved our problem in the end. In our case it turned out to be a third-party library that made use of the <a href=\"http://www.docjar.com/docs/api/sun/misc/Unsafe.html\"rel=\"nofollow\">sun.misc.Unsafe</a> class, which is <a href=\"http://mishadoff.github.io/blog/java-magic-part-4-sun-dot-misc-dot-unsafe/\"rel=\"nofollow\">notoriously &quot;unsafe&quot;</a> when used incorrectly. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16893854]-[-898276580]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>For those encountering similar issues - we solved our problem in the end. In our case it turned out to be a third-party library that made use of the <a href=\"http://www.docjar.com/docs/api/sun/misc/Unsafe.html\"rel=\"nofollow\">sun.misc.Unsafe</a> class, which is <a href=\"http://mishadoff.github.io/blog/java-magic-part-4-sun-dot-misc-dot-unsafe/\"rel=\"nofollow\">notoriously &quot;unsafe&quot;</a> when used incorrectly. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "solv":1,
                    "dot":2,
                    "github":1,
                    "docjar":1,
                    "similar":1,
                    "problem":1,
                    "notori":1,
                    "sun":3,
                    "rel":2,
                    "issu":1,
                    "librari":1,
                    "doc":1,
                    "blog":1,
                    "nofollow":2,
                    "incorrect":1,
                    "misc":3,
                    "turn":1,
                    "encount":1,
                    "end":1,
                    "quot":2,
                    "magic":1,
                    "api":1,
                    "unsaf":4,
                    "part":1,
                    "html":1,
                    "href":2,
                    "parti":1,
                    "http":2,
                    "made":1,
                    "mishadoff":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In this case, a <a href=\"https://code.google.com/p/powermock/source/browse/trunk/api/support/src/main/java/org/powermock/api/support/DeepCloner.java?r=1193\"rel=\"nofollow\">piece of logic for cloning objects</a> passed a specific ClassLoader to some sun.misc.Unsafe operations to copy objects. On certain machines, the copied objects were regularly being created in a corrupted state. When the JVM attempted to garbage collect, it would eventually harvest one of these bad objects and crash. This always caused the error described in my question.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16893854]-[-124137565]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In this case, a <a href=\"https://code.google.com/p/powermock/source/browse/trunk/api/support/src/main/java/org/powermock/api/support/DeepCloner.java?r=1193\"rel=\"nofollow\">piece of logic for cloning objects</a> passed a specific ClassLoader to some sun.misc.Unsafe operations to copy objects. On certain machines, the copied objects were regularly being created in a corrupted state. When the JVM attempted to garbage collect, it would eventually harvest one of these bad objects and crash. This always caused the error described in my question.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ClassLoader",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "support":2,
                    "question":1,
                    "harvest":1,
                    "powermock":2,
                    "googl":1,
                    "state":1,
                    "loader":1,
                    "crash":1,
                    "sun":1,
                    "rel":1,
                    "bad":1,
                    "regular":1,
                    "https":1,
                    "eventu":1,
                    "main":1,
                    "brows":1,
                    "logic":1,
                    "object":4,
                    "code":1,
                    "oper":1,
                    "nofollow":1,
                    "error":1,
                    "deep":1,
                    "machin":1,
                    "clone":1,
                    "specif":1,
                    "src":1,
                    "misc":1,
                    "caus":1,
                    "pass":1,
                    "piec":1,
                    "api":2,
                    "unsaf":1,
                    "collect":1,
                    "cloner":1,
                    "attempt":1,
                    "org":1,
                    "trunk":1,
                    "href":1,
                    "creat":1,
                    "sourc":1,
                    "corrupt":1,
                    "copi":2,
                    "garbag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ClassLoader",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":16891313,
      "questionId":15611423,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":24375202,
          "postId":16891313,
          "creationDate":"2013-06-03",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":43662,
            "displayName":"seanhodges",
            "reputation":8622
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Unfortunately not. This is a high traffic site using Hibernate - so lots of CGLIB class proxies, hence the large PermGen values. Several days of uptime did not indicate a constant growth of any heap usage. We did solve the problem recently, I'll post my answer shortly."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16891313-cu24375202]-[1386446628]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Unfortunately not. This is a high traffic site using Hibernate - so lots of CGLIB class proxies, hence the large PermGen values. Several days of uptime did not indicate a constant growth of any heap usage. We did solve the problem recently, I'll post my answer shortly."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"proxies",
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PermGen",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "solv":1,
                        "constant":1,
                        "post":1,
                        "recent":1,
                        "problem":1,
                        "hibern":1,
                        "short":1,
                        "growth":1,
                        "site":1,
                        "larg":1,
                        "valu":1,
                        "perm":1,
                        "traffic":1,
                        "lot":1,
                        "answer":1,
                        "usag":1,
                        "heap":1,
                        "proxi":1,
                        "cglib":1,
                        "uptim":1,
                        "day":1,
                        "gen":1,
                        "high":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"PermGen",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-06-03",
      "lastActivityDate":"2013-06-03",
      "lastEditDate":"2013-06-03",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1804661,
        "displayName":"Christopher Yang",
        "reputation":895
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>But just because you set MaxPermSize to 1GB doesn't mean HotSpot will honor it. I don't think I've ever gotten more than 512MB. Your JVM's 482MB is pretty close to this figure. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16891313]-[-1901770702]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>But just because you set MaxPermSize to 1GB doesn't mean HotSpot will honor it. I don't think I've ever gotten more than 512MB. Your JVM's 482MB is pretty close to this figure. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MaxPermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HotSpot",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "size":1,
                    "set":1,
                    "pretti":1,
                    "max":1,
                    "perm":1,
                    "spot":1,
                    "figur":1,
                    "hot":1,
                    "close":1,
                    "honor":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MaxPermSize",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HotSpot",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In any case, 512MB is plenty for PermGen since it's only used to hold classes' metadata, it won't grow in size unless more classes are loaded through ClassLoader. So the question is: do you really need more than 512MB to hold roughly the size of the bytecodes of all the necessary classes in memory?</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16891313]-[60373019]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In any case, 512MB is plenty for PermGen since it's only used to hold classes' metadata, it won't grow in size unless more classes are loaded through ClassLoader. So the question is: do you really need more than 512MB to hold roughly the size of the bytecodes of all the necessary classes in memory?</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "question":1,
                    "size":2,
                    "loader":1,
                    "bytecod":1,
                    "load":1,
                    "hold":2,
                    "grow":1,
                    "rough":1,
                    "perm":1,
                    "metadata":1,
                    "class":3,
                    "plenti":1,
                    "won":1,
                    "gen":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermGen",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It's very possible that your system actually has <a href=\"http://java.dzone.com/articles/what-permgen-leak\"rel=\"nofollow\">memory leaks in PermGen</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16891313]-[259999739]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It's very possible that your system actually has <a href=\"http://java.dzone.com/articles/what-permgen-leak\"rel=\"nofollow\">memory leaks in PermGen</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermGen",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "system":1,
                    "rel":1,
                    "leak":2,
                    "articl":1,
                    "dzone":1,
                    "nofollow":1,
                    "perm":1,
                    "href":1,
                    "http":1,
                    "permgen":1,
                    "gen":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PermGen",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}