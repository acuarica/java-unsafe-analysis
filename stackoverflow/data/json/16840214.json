{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":16840214,
    "title":"Unit testing a plug-in: cannot find symbol errors?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":24288815,
        "postId":16840214,
        "creationDate":"2013-05-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":778262,
          "displayName":"Jeremy G",
          "reputation":144
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"The short answer is that using the fragment project functionality will allow testing of the host bundle, and we will be able to distribute the host bundle without including the tests."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16840214-cu24288815]-[-85590008]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"The short answer is that using the fragment project functionality will allow testing of the host bundle, and we will be able to distribute the host bundle without including the tests."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "test":2,
                      "project":1,
                      "host":2,
                      "fragment":1,
                      "bundl":2,
                      "includ":1,
                      "function":1,
                      "answer":1,
                      "distribut":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":24286562,
        "postId":16840214,
        "creationDate":"2013-05-30",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1993366,
          "displayName":"vikingsteve",
          "reputation":9398
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Just wondering why you are using 2 projects. Are you able to use just one project, with src/main/java and src/test/java ?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16840214-cu24286562]-[1295805225]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Just wondering why you are using 2 projects. Are you able to use just one project, with src/main/java and src/test/java ?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "test":1,
                      "project":2,
                      "main":1,
                      "wonder":1,
                      "src":2
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":24291328,
        "postId":16840214,
        "creationDate":"2013-05-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":416104,
          "displayName":"Cristiano",
          "reputation":459
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"have you added Junit bundle as Require-Bundle in the test manifest? Are you using the Junit-Plugin launcher ?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16840214-cu24291328]-[-711398266]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"have you added Junit bundle as Require-Bundle in the test manifest? Are you using the Junit-Plugin launcher ?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "plugin":1,
                      "test":1,
                      "junit":2,
                      "requir":1,
                      "bundl":2,
                      "ad":1,
                      "manifest":1,
                      "launcher":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "unit-testing",
      "maven",
      "osgi"
    ],
    "creationDate":"2013-05-30",
    "lastActivityDate":"2013-05-31",
    "score":0,
    "viewCount":149,
    "owner":{
      "type":"StackOverflowUser",
      "id":778262,
      "displayName":"Jeremy G",
      "reputation":144
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am attempting to get my fragment project to execute unit tests for code in a host project. I am using eclipse, maven, and osgi.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[-449922087]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am attempting to get my fragment project to execute unit tests for code in a host project. I am using eclipse, maven, and osgi.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":1,
                  "project":2,
                  "host":1,
                  "fragment":1,
                  "code":1,
                  "eclips":1,
                  "maven":1,
                  "unit":1,
                  "attempt":1,
                  "execut":1,
                  "osgi":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Let's say I have two projects: PluginProject and PluginProject.tests. I am encountering strange behavior in PluginProject.tests.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[1771530886]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Let's say I have two projects: PluginProject and PluginProject.tests. I am encountering strange behavior in PluginProject.tests.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PluginProject",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":3,
                  "test":2,
                  "project":4,
                  "encount":1,
                  "behavior":1,
                  "strang":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PluginProject",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>If I put my unit tests in <code>test/&lt;package-name&gt;</code>, everything builds fine, but the tests are not executed.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[-1256078840]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>If I put my unit tests in <code>test/&lt;package-name&gt;</code>, everything builds fine, but the tests are not executed.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"package-name"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "test":3,
                  "build":1,
                  "code":2,
                  "put":1,
                  "unit":1,
                  "fine":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>If, however, I put my unit tests in <code>src/test/java/&lt;package-name&gt;</code>, then any classes from PlugingProject that I reference (i.e. any of the classes that I am attempting to test) cannot be found. I always get a 'cannot find symbol' error.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[1910875524]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>If, however, I put my unit tests in <code>src/test/java/&lt;package-name&gt;</code>, then any classes from PlugingProject that I reference (i.e. any of the classes that I am attempting to test) cannot be found. I always get a 'cannot find symbol' error.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"XmlNode",
                  "name":{
                    "type":"XmlNameNode",
                    "value":"package-name"
                  },
                  "attributes":[
                    
                  ],
                  "elements":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PlugingProject",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "find":1,
                  "test":3,
                  "pluge":1,
                  "project":1,
                  "code":2,
                  "symbol":1,
                  "found":1,
                  "error":1,
                  "src":1,
                  "refer":1,
                  "put":1,
                  "class":2,
                  "unit":1,
                  "attempt":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PlugingProject",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Note: my Manifest.MF in PluginProject.test has the following line (among others): <code>Fragment-Host: PluginProjectr;bundle-version=&quot;0.0.1&quot;</code></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[368086398]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Note: my Manifest.MF in PluginProject.test has the following line (among others): <code>Fragment-Host: PluginProjectr;bundle-version=&quot;0.0.1&quot;</code></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"PluginProjectr",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    {
                      "type":"LabelNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Host",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "plugin":2,
                  "projectr":1,
                  "test":1,
                  "line":1,
                  "project":1,
                  "host":1,
                  "fragment":1,
                  "bundl":1,
                  "code":2,
                  "version":1,
                  "note":1,
                  "quot":2,
                  "manifest":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Has anybody else experience this? I can post more detailed information if necessary. Thanks!</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16840214]-[-464251815]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Has anybody else experience this? I can post more detailed information if necessary. Thanks!</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "experi":1,
                  "inform":1,
                  "post":1,
                  "detail":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":16844231,
      "questionId":16840214,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":24292404,
          "postId":16844231,
          "creationDate":"2013-05-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1086540,
            "displayName":"Hilikus",
            "reputation":1866
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"This is what I do with my bundles. I test them as Java applications and not in an OSGi container. I see how it might not fit every use-case, but IMO, if they are really **unit** tests, they should be able to run in isolation without all the OSGi wiring. I will reword the answer though so that it sounds less official since I don't know the official way. Thank you"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24292404]-[-336618697]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"This is what I do with my bundles. I test them as Java applications and not in an OSGi container. I see how it might not fit every use-case, but IMO, if they are really **unit** tests, they should be able to run in isolation without all the OSGi wiring. I will reword the answer though so that it sounds less official since I don't know the official way. Thank you"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":2,
                        "reword":1,
                        "imo":1,
                        "offici":2,
                        "fit":1,
                        "run":1,
                        "contain":1,
                        "wire":1,
                        "bundl":1,
                        "isol":1,
                        "sound":1,
                        "applic":1,
                        "answer":1,
                        "unit":1,
                        "osgi":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24292827,
          "postId":16844231,
          "creationDate":"2013-05-30",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1993366,
            "displayName":"vikingsteve",
            "reputation":9398
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"If you're testing inside an OSGi container then this sounds more like an integration test... which, yes, would warrant another module. But for unit tests I agree with Hilikus - best to test the code in isolation without OSGi."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24292827]-[-1705987897]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"If you're testing inside an OSGi container then this sounds more like an integration test... which, yes, would warrant another module. But for unit tests I agree with Hilikus - best to test the code in isolation without OSGi."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":4,
                        "warrant":1,
                        "contain":1,
                        "integr":1,
                        "code":1,
                        "isol":1,
                        "insid":1,
                        "modul":1,
                        "sound":1,
                        "agre":1,
                        "hilikus":1,
                        "unit":1,
                        "osgi":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24291283,
          "postId":16844231,
          "creationDate":"2013-05-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":416104,
            "displayName":"Cristiano",
            "reputation":459
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Don't think it is a valid recommendation if you are working with OSGi"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24291283]-[-993496378]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Don't think it is a valid recommendation if you are working with OSGi"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "work":1,
                        "recommend":1,
                        "valid":1,
                        "osgi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24324809,
          "postId":16844231,
          "creationDate":"2013-05-31",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":778262,
            "displayName":"Jeremy G",
            "reputation":144
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Hilikus While the test classes are not packaged with the resulting artifact, I would imagine that the dependencies that only the tests depend on will still be part of that bundle? Or will declaring those dependencies as test-scope ensure that they are not bundled?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24324809]-[-1065699194]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Hilikus While the test classes are not packaged with the resulting artifact, I would imagine that the dependencies that only the tests depend on will still be part of that bundle? Or will declaring those dependencies as test-scope ensure that they are not bundled?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Hilikus",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":3,
                        "depend":3,
                        "scope":1,
                        "result":1,
                        "declar":1,
                        "bundl":2,
                        "hilikus":1,
                        "class":1,
                        "imagin":1,
                        "packag":1,
                        "part":1,
                        "artifact":1,
                        "ensur":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24325878,
          "postId":16844231,
          "creationDate":"2013-05-31",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1086540,
            "displayName":"Hilikus",
            "reputation":1866
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"when you say part of the bundle you mean as _import-package_ statements in the manifest? or maven dependencies? you should declare them as maven dependencies with the test scope. and in the manifest, they will not generate _import-package_ since that comes from analyzing the bytecode in the artifact, and the tests are not part of the generated artifact"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24325878]-[-1185756811]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"when you say part of the bundle you mean as _import-package_ statements in the manifest? or maven dependencies? you should declare them as maven dependencies with the test scope. and in the manifest, they will not generate _import-package_ since that comes from analyzing the bytecode in the artifact, and the tests are not part of the generated artifact"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_import",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"package_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_import",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"package_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":2,
                        "depend":2,
                        "analyz":1,
                        "bytecod":1,
                        "scope":1,
                        "statement":1,
                        "declar":1,
                        "bundl":1,
                        "maven":2,
                        "generat":2,
                        "manifest":2,
                        "part":2,
                        "artifact":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":24462520,
          "postId":16844231,
          "creationDate":"2013-06-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":778262,
            "displayName":"Jeremy G",
            "reputation":144
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for the assistance, Hilikus. I've decided to take your recommended route rather than using the project fragments."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16844231-cu24462520]-[-69885954]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for the assistance, Hilikus. I've decided to take your recommended route rather than using the project fragments."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "decid":1,
                        "recommend":1,
                        "project":1,
                        "fragment":1,
                        "rout":1,
                        "hilikus":1,
                        "assist":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-05-30",
      "lastActivityDate":"2013-05-31",
      "lastEditDate":"2013-05-31",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":1086540,
        "displayName":"Hilikus",
        "reputation":1866
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>My recommended way, like @vikingsteve mentioned, is to have a single project with both your code and your unit tests.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16844231]-[361447779]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>My recommended way, like @vikingsteve mentioned, is to have a single project with both your code and your unit tests.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "recommend":1,
                    "singl":1,
                    "test":1,
                    "project":1,
                    "code":1,
                    "mention":1,
                    "unit":1,
                    "vikingstev":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Don't worry, if you follow the standard way (src/main/java and src/test/java) and do a normal <em>mvn package</em> or <em>mvn deploy</em> the test classes will NOT be packaged in the resulting artifact</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16844231]-[350205749]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Don't worry, if you follow the standard way (src/main/java and src/test/java) and do a normal <em>mvn package</em> or <em>mvn deploy</em> the test classes will NOT be packaged in the resulting artifact</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "test":2,
                    "standard":1,
                    "normal":1,
                    "result":1,
                    "main":1,
                    "src":2,
                    "deploy":1,
                    "class":1,
                    "packag":1,
                    "worri":1,
                    "mvn":2,
                    "artifact":1,
                    "follow":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}