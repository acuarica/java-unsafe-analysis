{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":1004327,
    "title":"Getting rid of derby.log",
    "comments":[
      
    ],
    "tags":[
      "java",
      "maven-2",
      "derby"
    ],
    "creationDate":"2009-06-16",
    "lastActivityDate":"2014-05-25",
    "score":17,
    "viewCount":9108,
    "owner":{
      "type":"StackOverflowUser",
      "id":417328,
      "displayName":"Allan Lykke Christensen",
      "reputation":898
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm using the Apache Derby embedded database for unit testing in a Maven project. Unfortunately whenever I run the test I end up with the <code>derby.log</code> file in the root of the project. The database itself is created in the <code>target</code> directory (<code>jdbc:derby:target/unittest-db;create=true</code>) so that is not a problem. After consulting the <a href=\"http://db.apache.org/derby/docs/10.2/ref/rrefattrib24612.html#rrefattrib24612\">reference guide</a> I tried setting the <code>logDevice</code> parameter on the JDBC url (<code>jdbc:derby:target/unittest-db;create=true;logDevice=/mylogs</code>) but that seems to be for a different log, hence <code>derby.log</code> still appears.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[1004327]-[-2015563345]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm using the Apache Derby embedded database for unit testing in a Maven project. Unfortunately whenever I run the test I end up with the <code>derby.log</code> file in the root of the project. The database itself is created in the <code>target</code> directory (<code>jdbc:derby:target/unittest-db;create=true</code>) so that is not a problem. After consulting the <a href=\"http://db.apache.org/derby/docs/10.2/ref/rrefattrib24612.html#rrefattrib24612\">reference guide</a> I tried setting the <code>logDevice</code> parameter on the JDBC url (<code>jdbc:derby:target/unittest-db;create=true;logDevice=/mylogs</code>) but that seems to be for a different log, hence <code>derby.log</code> still appears.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"-",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"/",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"target",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"unittest",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"db",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    {
                      "type":"LabelNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"jdbc",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"LabelNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"derby",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"logDevice",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"-",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":"/",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"target",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"unittest",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"db",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    {
                      "type":"LabelNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"jdbc",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"LabelNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"derby",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"ExpressionStatement",
                  "expression":{
                    "type":"BinaryExpressionNode",
                    "operator":{
                      "type":"OperatorNode",
                      "symbol":"=",
                      "comments":[
                        
                      ]
                    },
                    "left":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"create",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "right":{
                      "type":"LiteralNode",
                      "node":{
                        "type":"BooleanLiteralNode",
                        "valueRep":"true"
                      },
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ]
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"logDevice",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "consult":1,
                  "test":2,
                  "apach":2,
                  "root":1,
                  "url":1,
                  "mylog":1,
                  "guid":1,
                  "project":2,
                  "problem":1,
                  "jdbc":3,
                  "appear":1,
                  "derbi":6,
                  "run":1,
                  "set":1,
                  "ref":1,
                  "embed":1,
                  "doc":1,
                  "code":12,
                  "maven":1,
                  "paramet":1,
                  "unittest":2,
                  "refer":1,
                  "devic":2,
                  "true":2,
                  "directori":1,
                  "end":1,
                  "file":1,
                  "target":3,
                  "databas":2,
                  "unit":1,
                  "org":1,
                  "html":1,
                  "href":1,
                  "http":1,
                  "creat":3,
                  "rrefattrib":2,
                  "log":5
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Any help is much appreciated.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[1004327]-[1781558977]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Any help is much appreciated.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "appreci":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":1004686,
      "questionId":1004327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":1241898,
          "postId":1004686,
          "creationDate":"2009-09-09",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2644,
            "displayName":"pek",
            "reputation":6947
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"What if I'm using Derby through Hibernate? Where to I put the line &quot;derby.stream.error.field&quot;?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1004686-cu1241898]-[-655745786]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"What if I'm using Derby through Hibernate? Where to I put the line &quot;derby.stream.error.field&quot;?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "field":1,
                        "line":1,
                        "hibern":1,
                        "derbi":2,
                        "error":1,
                        "stream":1,
                        "put":1,
                        "quot":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1608923,
          "postId":1004686,
          "creationDate":"2009-11-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":131433,
            "displayName":"bmargulies",
            "reputation":53866
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"In a webapp it's a pain to set system props. Any way around it?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1004686-cu1608923]-[1943429183]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"In a webapp it's a pain to set system props. Any way around it?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "system":1,
                        "set":1,
                        "webapp":1,
                        "pain":1,
                        "prop":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":1610145,
          "postId":1004686,
          "creationDate":"2009-11-13",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":116880,
            "displayName":"stevedbrown",
            "reputation":4869
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I don't think so, but you can set things up in your web.xml or spring config to run at startup and do it there."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1004686-cu1610145]-[-305657089]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I don't think so, but you can set things up in your web.xml or spring config to run at startup and do it there."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "startup":1,
                        "run":1,
                        "set":1,
                        "spring":1,
                        "thing":1,
                        "config":1,
                        "web":1,
                        "xml":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9720868,
          "postId":1004686,
          "creationDate":"2011-10-31",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":16152,
            "displayName":"homaxto",
            "reputation":1035
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Place the above in derby.properties eg. in the root of your project and remeber to use fully qualified name for the class."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1004686-cu9720868]-[-1022779288]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Place the above in derby.properties eg. in the root of your project and remeber to use fully qualified name for the class."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "properti":1,
                        "root":1,
                        "project":1,
                        "derbi":1,
                        "qualifi":1,
                        "remeb":1,
                        "fulli":1,
                        "place":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2009-06-17",
      "lastActivityDate":"2012-04-26",
      "lastEditDate":"2012-04-26",
      "score":17,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":116880,
        "displayName":"stevedbrown",
        "reputation":4869
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can get rid of <a href=\"http://db.apache.org/derby/docs/dev/devguide/cdevdvlp25889.html\"><code>derby.log</code></a> file by creating the following class</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1004686]-[864062841]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can get rid of <a href=\"http://db.apache.org/derby/docs/dev/devguide/cdevdvlp25889.html\"><code>derby.log</code></a> file by creating the following class</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "rid":1,
                    "apach":1,
                    "derbi":2,
                    "doc":1,
                    "code":2,
                    "cdevdvlp":1,
                    "dev":1,
                    "file":1,
                    "org":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "creat":1,
                    "log":1,
                    "devguid":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"public class DerbyUtil { public static final OutputStream DEV_NULL = new OutputStream() { public void write(int b) {} }; } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[1004686]-[-566238208]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"CompilationUnitNode",
                    "imports":[
                      
                    ],
                    "typeDeclarations":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DerbyUtil",
                          "comments":[
                            
                          ]
                        },
                        "body":{
                          "type":"ClassBodyNode",
                          "declarations":[
                            {
                              "type":"FieldDeclaratorNode",
                              "modifiers":[
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"public",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"static",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"final",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "variables":{
                                "type":"VariableDeclaratorsNode",
                                "declarators":[
                                  {
                                    "type":"VariableDeclaratorNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"DEV_NULL",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "arrayDepth":[
                                      
                                    ],
                                    "assignment":{
                                      "type":"VariableAssignmentNode",
                                      "variableAssignment":{
                                        "type":"VariableExpressionInitNode",
                                        "expression":{
                                          "type":"ConstructorCreatorNode",
                                          "creatorType":{
                                            "type":"ReferenceTypeNode",
                                            "ids":[
                                              {
                                                "type":"ParameterizedTypeNode",
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"OutputStream",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "expressionArgs":{
                                            "type":"ExpressionListNode",
                                            "arguments":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "classBody":{
                                            "type":"ClassBodyNode",
                                            "declarations":[
                                              {
                                                "type":"MethodDeclaratorNode",
                                                "modifiers":[
                                                  {
                                                    "type":"KeywordModifierNode",
                                                    "value":"public",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "returnType":{
                                                  "type":"PrimitiveTypeNode",
                                                  "name":"void",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"write",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "parameters":{
                                                  "type":"FormalParametersNode",
                                                  "parameters":{
                                                    "type":"FormalParameterDeclsNode",
                                                    "modifiers":[
                                                      
                                                    ],
                                                    "parameterType":{
                                                      "type":"PrimitiveTypeNode",
                                                      "name":"int",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "nextDeclarator":{
                                                      "type":"AdditionalFormalParameterDeclNode",
                                                      "variableDeclarator":{
                                                        "type":"VariableDeclaratorNode",
                                                        "identifier":{
                                                          "type":"IdentifierNode",
                                                          "name":"b",
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "arrayDepth":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "arrayReturnType":[
                                                  
                                                ],
                                                "body":{
                                                  "type":"BlockNode",
                                                  "statements":[
                                                    
                                                  ],
                                                  "labels":[
                                                    
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "varType":{
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"OutputStream",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  }
                ]
              },
              "rawText":"public class DerbyUtil { public static final OutputStream DEV_NULL = new OutputStream() { public void write(int b) {} }; } ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "util":1,
                    "derbi":1,
                    "dev":1,
                    "stream":2,
                    "output":2,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"OutputStream",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"int",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"DEV_NULL",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"ConstructorCreatorNode",
                            "creatorType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"OutputStream",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "expressionArgs":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "classBody":{
                              "type":"ClassBodyNode",
                              "declarations":[
                                {
                                  "type":"MethodDeclaratorNode",
                                  "modifiers":[
                                    {
                                      "type":"KeywordModifierNode",
                                      "value":"public",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "returnType":{
                                    "type":"PrimitiveTypeNode",
                                    "name":"void",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"write",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "parameters":{
                                    "type":"FormalParametersNode",
                                    "parameters":{
                                      "type":"FormalParameterDeclsNode",
                                      "modifiers":[
                                        
                                      ],
                                      "parameterType":{
                                        "type":"PrimitiveTypeNode",
                                        "name":"int",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "nextDeclarator":{
                                        "type":"AdditionalFormalParameterDeclNode",
                                        "variableDeclarator":{
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"b",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayReturnType":[
                                    
                                  ],
                                  "body":{
                                    "type":"BlockNode",
                                    "statements":[
                                      
                                    ],
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"OutputStream",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"b",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>and setting the JVM system property <a href=\"http://db.apache.org/derby/docs/10.8/ref/rrefproper33027.html\"><code>derby.stream.error.field</code></a>, for example, using the following JVM command-line argument:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1004686]-[1823747686]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>and setting the JVM system property <a href=\"http://db.apache.org/derby/docs/10.8/ref/rrefproper33027.html\"><code>derby.stream.error.field</code></a>, for example, using the following JVM command-line argument:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":2,
                    "properti":1,
                    "apach":1,
                    "system":1,
                    "field":1,
                    "line":1,
                    "derbi":2,
                    "set":1,
                    "ref":1,
                    "command":1,
                    "doc":1,
                    "code":2,
                    "error":1,
                    "stream":1,
                    "rrefprop":1,
                    "org":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "argument":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"-Dderby.stream.error.field=DerbyUtil.DEV_NULL "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[1004686]-[-342601871]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"-Dderby.stream.error.field=DerbyUtil.DEV"
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"_NULL",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"-Dderby.stream.error.field=DerbyUtil.DEV_NULL ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "util":1,
                    "field":1,
                    "derbi":1,
                    "error":1,
                    "dev":1,
                    "dderbi":1,
                    "stream":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><a href=\"http://davidvancouvering.blogspot.com/2007/10/quiet-time-and-how-to-suppress-derbylog.html\">Credit to whom it is due.</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1004686]-[-1130051986]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><a href=\"http://davidvancouvering.blogspot.com/2007/10/quiet-time-and-how-to-suppress-derbylog.html\">Credit to whom it is due.</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "due":1,
                    "credit":1,
                    "quiet":1,
                    "suppress":1,
                    "blogspot":1,
                    "davidvancouv":1,
                    "derbylog":1,
                    "time":1,
                    "html":1,
                    "href":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":3186341,
      "questionId":1004327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22613799,
          "postId":3186341,
          "creationDate":"2013-04-08",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":774183,
            "displayName":"carlspring",
            "reputation":9241
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"+1 for the bad-ass Spring hack! :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[3186341-cu22613799]-[-1743206117]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"+1 for the bad-ass Spring hack! :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "hack":1,
                        "ass":1,
                        "spring":1,
                        "bad":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2010-07-06",
      "lastActivityDate":"2010-07-06",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":384563,
        "displayName":"yuvraj",
        "reputation":21
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I have came up with another solution. Try this out it worked for me. What I am doing here is I have changed the System.stream.error.file path and set it to one of the properties present under my property file. just adding the below given code to your applicationContext.xml file will work.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[3186341]-[-3302250]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I have came up with another solution. Try this out it worked for me. What I am doing here is I have changed the System.stream.error.file path and set it to one of the properties present under my property file. just adding the below given code to your applicationContext.xml file will work.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"IdentifierNode",
                    "name":"applicationContext",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "properti":2,
                    "path":1,
                    "system":1,
                    "context":1,
                    "present":1,
                    "set":1,
                    "work":2,
                    "code":1,
                    "error":1,
                    "xml":1,
                    "stream":1,
                    "applic":1,
                    "ad":1,
                    "file":3,
                    "solut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;bean id=&quot;setDerbyLog&quot; class=&quot;org.springframework.beans.factory.config.MethodInvokingFactoryBean&quot;&gt; &lt;property name=&quot;targetClass&quot;&gt;&lt;value&gt;java.lang.System&lt;/value&gt;&lt;/property&gt; &lt;property name=&quot;targetMethod&quot;&gt;&lt;value&gt;setProperty&lt;/value&gt;&lt;/property&gt; &lt;property name=&quot;arguments&quot;&gt; &lt;list&gt; &lt;value&gt;derby.stream.error.file&lt;/value&gt; &lt;value&gt;${derby.stream.error.file}&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;/bean&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[3186341]-[453479079]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"bean"
                    },
                    "attributes":[
                      {
                        "type":"XmlAttributeNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"id"
                        },
                        "value":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"setDerbyLog\""
                        }
                      },
                      {
                        "type":"XmlAttributeNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"class"
                        },
                        "value":{
                          "type":"StringLiteralNode",
                          "valueRep":"\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\""
                        }
                      }
                    ],
                    "elements":[
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"property"
                        },
                        "attributes":[
                          {
                            "type":"XmlAttributeNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"name"
                            },
                            "value":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"targetClass\""
                            }
                          }
                        ],
                        "elements":[
                          {
                            "type":"XmlNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"value"
                            },
                            "attributes":[
                              
                            ],
                            "elements":[
                              {
                                "type":"XmlTextNode",
                                "contents":"java.lang.System"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"property"
                        },
                        "attributes":[
                          {
                            "type":"XmlAttributeNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"name"
                            },
                            "value":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"targetMethod\""
                            }
                          }
                        ],
                        "elements":[
                          {
                            "type":"XmlNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"value"
                            },
                            "attributes":[
                              
                            ],
                            "elements":[
                              {
                                "type":"XmlTextNode",
                                "contents":"setProperty"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"property"
                        },
                        "attributes":[
                          {
                            "type":"XmlAttributeNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"name"
                            },
                            "value":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"arguments\""
                            }
                          }
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          },
                          {
                            "type":"XmlNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"list"
                            },
                            "attributes":[
                              
                            ],
                            "elements":[
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              },
                              {
                                "type":"XmlNode",
                                "name":{
                                  "type":"XmlNameNode",
                                  "value":"value"
                                },
                                "attributes":[
                                  
                                ],
                                "elements":[
                                  {
                                    "type":"XmlTextNode",
                                    "contents":"derby.stream.error.file"
                                  }
                                ]
                              },
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              },
                              {
                                "type":"XmlNode",
                                "name":{
                                  "type":"XmlNameNode",
                                  "value":"value"
                                },
                                "attributes":[
                                  
                                ],
                                "elements":[
                                  {
                                    "type":"XmlTextNode",
                                    "contents":"${derby.stream.error.file}"
                                  }
                                ]
                              },
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              }
                            ]
                          },
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      }
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<bean id=\"setDerbyLog\"class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\"> <property name=\"targetClass\"><value>java.lang.System</value></property> <property name=\"targetMethod\"><value>setProperty</value></property> <property name=\"arguments\"> <list> <value>derby.stream.error.file</value> <value>${derby.stream.error.file}</value> </list> </property> </bean> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "properti":7,
                    "method":2,
                    "system":1,
                    "derbi":3,
                    "set":2,
                    "invok":1,
                    "config":1,
                    "springframework":1,
                    "factori":2,
                    "bean":4,
                    "error":2,
                    "stream":2,
                    "file":2,
                    "target":2,
                    "lang":1,
                    "org":1,
                    "argument":1,
                    "log":1,
                    "list":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>-Yuvraj</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[3186341]-[522160069]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>-Yuvraj</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "yuvraj":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":23858256,
      "questionId":1004327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":39107230,
          "postId":23858256,
          "creationDate":"2014-08-04",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":339219,
            "displayName":"RockyMM",
            "reputation":471
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Sorry, this is exactly what I needed, THIS should be the accepted answer :)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23858256-cu39107230]-[1679421558]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Sorry, this is exactly what I needed, THIS should be the accepted answer :)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "need":1,
                        "accept":1,
                        "answer":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-05-25",
      "lastActivityDate":"2014-05-25",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":3537255,
        "displayName":"Fabian",
        "reputation":308
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>For integration tests the situation might be a bit more tricky than the simple <a href=\"http://stackoverflow.com/a/1933310/3537255\">surefire</a> property. Specifying the property <code>derby.stream.error.file</code> in the <code>maven-failsafe-plugin</code> will not work as the server environment does not inherit from that plugin (obviously using <code>maven-surefire-plugin</code> makes no differences).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[23858256]-[300775042]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>For integration tests the situation might be a bit more tricky than the simple <a href=\"http://stackoverflow.com/a/1933310/3537255\">surefire</a> property. Specifying the property <code>derby.stream.error.file</code> in the <code>maven-failsafe-plugin</code> will not work as the server environment does not inherit from that plugin (obviously using <code>maven-surefire-plugin</code> makes no differences).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "plugin":3,
                    "properti":2,
                    "test":1,
                    "server":1,
                    "bit":1,
                    "simpl":1,
                    "tricki":1,
                    "differ":1,
                    "derbi":1,
                    "integr":1,
                    "work":1,
                    "code":6,
                    "situat":1,
                    "stackoverflow":1,
                    "maven":2,
                    "inherit":1,
                    "failsaf":1,
                    "error":1,
                    "stream":1,
                    "make":1,
                    "file":1,
                    "href":1,
                    "environ":1,
                    "http":1,
                    "surefir":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Instead you need to modify the actual server start plugin. The following example is for the <code>maven-jetty-plugin</code>:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[23858256]-[-1724282817]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Instead you need to modify the actual server start plugin. The following example is for the <code>maven-jetty-plugin</code>:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "plugin":2,
                    "server":1,
                    "code":2,
                    "maven":1,
                    "jetti":1,
                    "modifi":1,
                    "start":1,
                    "actual":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;plugin&gt; &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;systemProperties&gt; &lt;!-- Get rid of that missplaced derby.log. --&gt; &lt;systemProperty&gt; &lt;name&gt;derby.stream.error.file&lt;/name&gt; &lt;value&gt;${project.build.directory}/derby.log&lt;/value&gt; &lt;/systemProperty&gt; &lt;/systemProperties&gt; &lt;/configuration&gt; &lt;/plugin&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[23858256]-[755714202]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"plugin"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"groupId"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":"org.mortbay.jetty"
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"artifactId"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":"jetty-maven-plugin"
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"configuration"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          },
                          {
                            "type":"XmlNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"systemProperties"
                            },
                            "attributes":[
                              
                            ],
                            "elements":[
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              },
                              {
                                "type":"XmlCommentNode",
                                "contents":" Get rid of that missplaced derby.log. "
                              },
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              },
                              {
                                "type":"XmlNode",
                                "name":{
                                  "type":"XmlNameNode",
                                  "value":"systemProperty"
                                },
                                "attributes":[
                                  
                                ],
                                "elements":[
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  },
                                  {
                                    "type":"XmlNode",
                                    "name":{
                                      "type":"XmlNameNode",
                                      "value":"name"
                                    },
                                    "attributes":[
                                      
                                    ],
                                    "elements":[
                                      {
                                        "type":"XmlTextNode",
                                        "contents":"derby.stream.error.file"
                                      }
                                    ]
                                  },
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  },
                                  {
                                    "type":"XmlNode",
                                    "name":{
                                      "type":"XmlNameNode",
                                      "value":"value"
                                    },
                                    "attributes":[
                                      
                                    ],
                                    "elements":[
                                      {
                                        "type":"XmlTextNode",
                                        "contents":"${project.build.directory}/derby.log"
                                      }
                                    ]
                                  },
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  }
                                ]
                              },
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              }
                            ]
                          },
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      }
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<plugin> <groupId>org.mortbay.jetty</groupId> <artifactId>jetty-maven-plugin</artifactId> <configuration> <systemProperties> <!-- Get rid of that missplaced derby.log. --> <systemProperty> <name>derby.stream.error.file</name> <value>${project.build.directory}/derby.log</value> </systemProperty> </systemProperties> </configuration> </plugin> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "plugin":3,
                    "properti":4,
                    "rid":1,
                    "missplac":1,
                    "system":4,
                    "project":1,
                    "derbi":3,
                    "build":1,
                    "configur":2,
                    "maven":1,
                    "mortbay":1,
                    "error":1,
                    "jetti":2,
                    "stream":1,
                    "directori":1,
                    "file":1,
                    "org":1,
                    "group":2,
                    "log":2,
                    "artifact":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Note that for some reason we use <code>systemProperty</code> and not just <code>property</code> as in the surefire solution.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[23858256]-[613436925]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Note that for some reason we use <code>systemProperty</code> and not just <code>property</code> as in the surefire solution.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"systemProperty",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "properti":2,
                    "system":1,
                    "reason":1,
                    "code":4,
                    "note":1,
                    "solut":1,
                    "surefir":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":11779219,
      "questionId":1004327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":36741415,
          "postId":11779219,
          "creationDate":"2014-05-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":248656,
            "displayName":"Oded Peer",
            "reputation":947
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"\\\\Device\\\\Null threw a FileNotFoundException, however using NUL instead did the trick. Thanks."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[11779219-cu36741415]-[1200971197]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"\\\\Device\\\\Null threw a FileNotFoundException, however using NUL instead did the trick. Thanks."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"FileNotFoundException",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "trick":1,
                        "nul":1,
                        "found":1,
                        "devic":1,
                        "file":1,
                        "threw":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"FileNotFoundException",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2012-08-02",
      "lastActivityDate":"2012-09-27",
      "lastEditDate":"2012-09-27",
      "score":3,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1571632,
        "displayName":"SteveR",
        "reputation":31
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Include the following in your derby.properties file:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11779219]-[-232706806]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Include the following in your derby.properties file:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "includ":1,
                    "file":1,
                    "derbi":1,
                    "properti":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"derby.stream.error.file=/dev/null "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[11779219]-[-1147774237]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"derby.stream.error.file=/dev/null "
                  }
                ]
              },
              "rawText":"derby.stream.error.file=/dev/null ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "derbi":1,
                    "error":1,
                    "dev":1,
                    "stream":1,
                    "file":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>( or</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11779219]-[1242634470]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>( or</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"derby.stream.error.file=\\\\Device\\\\Null "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[11779219]-[53013456]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"derby.stream.error.file=\\\\Device\\\\Null "
                  }
                ]
              },
              "rawText":"derby.stream.error.file=\\\\Device\\\\Null ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "derbi":1,
                    "error":1,
                    "stream":1,
                    "devic":1,
                    "file":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>on Windows)</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11779219]-[-882904066]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>on Windows)</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "window":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":1933310,
      "questionId":1004327,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21566297,
          "postId":1933310,
          "creationDate":"2013-03-07",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1050755,
            "displayName":"user1050755",
            "reputation":1601
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"you shoudl prepend target/ with ${basedir} or else you cannot execute maven from a different dir."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1933310-cu21566297]-[407847401]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"you shoudl prepend target/ with ${basedir} or else you cannot execute maven from a different dir."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "basedir":1,
                        "prepend":1,
                        "maven":1,
                        "dir":1,
                        "shoudl":1,
                        "target":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":36719523,
          "postId":1933310,
          "creationDate":"2014-05-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":3537255,
            "displayName":"Fabian",
            "reputation":308
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"This works perfectly for unit tests but generally will not produce what you want for integration tests. The reason is that the database is usually in the server (e.g., jetty) which does not inherit the environment from surefire/failsafe."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[1933310-cu36719523]-[-1499081514]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"This works perfectly for unit tests but generally will not produce what you want for integration tests. The reason is that the database is usually in the server (e.g., jetty) which does not inherit the environment from surefire/failsafe."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "test":2,
                        "server":1,
                        "produc":1,
                        "perfect":1,
                        "integr":1,
                        "reason":1,
                        "work":1,
                        "inherit":1,
                        "general":1,
                        "failsaf":1,
                        "jetti":1,
                        "databas":1,
                        "unit":1,
                        "environ":1,
                        "surefir":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2009-12-19",
      "lastActivityDate":"2012-04-26",
      "lastEditDate":"2012-04-26",
      "score":30,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":80861,
        "displayName":"Laurent Fournié",
        "reputation":331
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Derby lets you specify the name of the file to which the error log messages are written using the Java system property <a href=\"http://db.apache.org/derby/docs/10.8/ref/rrefproper33027.html\"><code>derby.stream.error.file</code></a>. The default value is 'derby.log'.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1933310]-[993571842]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Derby lets you specify the name of the file to which the error log messages are written using the Java system property <a href=\"http://db.apache.org/derby/docs/10.8/ref/rrefproper33027.html\"><code>derby.stream.error.file</code></a>. The default value is 'derby.log'.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "properti":1,
                    "apach":1,
                    "system":1,
                    "derbi":4,
                    "ref":1,
                    "doc":1,
                    "code":2,
                    "error":2,
                    "stream":1,
                    "written":1,
                    "rrefprop":1,
                    "file":2,
                    "messag":1,
                    "org":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "let":1,
                    "log":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To get rid of <code>derby.log</code> during the Maven surefire testing phase, I just add the property definition in the plugin configuration as follows:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[1933310]-[1484883072]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To get rid of <code>derby.log</code> during the Maven surefire testing phase, I just add the property definition in the plugin configuration as follows:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "plugin":1,
                    "properti":1,
                    "test":1,
                    "rid":1,
                    "phase":1,
                    "derbi":1,
                    "configur":1,
                    "code":2,
                    "maven":1,
                    "definit":1,
                    "add":1,
                    "surefir":1,
                    "log":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;systemProperties&gt; &lt;property&gt; &lt;name&gt;derby.stream.error.file&lt;/name&gt; &lt;value&gt;target/derby.log&lt;/value&gt; &lt;/property&gt; &lt;/systemProperties&gt; &lt;/configuration&gt; &lt;/plugin&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[1933310]-[310875934]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"plugin"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"groupId"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":"org.apache.maven.plugins"
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"artifactId"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":"maven-surefire-plugin"
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      },
                      {
                        "type":"XmlNode",
                        "name":{
                          "type":"XmlNameNode",
                          "value":"configuration"
                        },
                        "attributes":[
                          
                        ],
                        "elements":[
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          },
                          {
                            "type":"XmlNode",
                            "name":{
                              "type":"XmlNameNode",
                              "value":"systemProperties"
                            },
                            "attributes":[
                              
                            ],
                            "elements":[
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              },
                              {
                                "type":"XmlNode",
                                "name":{
                                  "type":"XmlNameNode",
                                  "value":"property"
                                },
                                "attributes":[
                                  
                                ],
                                "elements":[
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  },
                                  {
                                    "type":"XmlNode",
                                    "name":{
                                      "type":"XmlNameNode",
                                      "value":"name"
                                    },
                                    "attributes":[
                                      
                                    ],
                                    "elements":[
                                      {
                                        "type":"XmlTextNode",
                                        "contents":"derby.stream.error.file"
                                      }
                                    ]
                                  },
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  },
                                  {
                                    "type":"XmlNode",
                                    "name":{
                                      "type":"XmlNameNode",
                                      "value":"value"
                                    },
                                    "attributes":[
                                      
                                    ],
                                    "elements":[
                                      {
                                        "type":"XmlTextNode",
                                        "contents":"target/derby.log"
                                      }
                                    ]
                                  },
                                  {
                                    "type":"XmlTextNode",
                                    "contents":" "
                                  }
                                ]
                              },
                              {
                                "type":"XmlTextNode",
                                "contents":" "
                              }
                            ]
                          },
                          {
                            "type":"XmlTextNode",
                            "contents":" "
                          }
                        ]
                      },
                      {
                        "type":"XmlTextNode",
                        "contents":" "
                      }
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <configuration> <systemProperties> <property> <name>derby.stream.error.file</name> <value>target/derby.log</value> </property> </systemProperties> </configuration> </plugin> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "plugin":4,
                    "properti":4,
                    "apach":1,
                    "system":2,
                    "derbi":2,
                    "configur":2,
                    "maven":2,
                    "error":1,
                    "stream":1,
                    "file":1,
                    "target":1,
                    "org":1,
                    "group":2,
                    "surefir":1,
                    "log":1,
                    "artifact":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}