{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":5721492,
    "title":"For what specific reason does the Java language initialize the fields of objects automatically?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":6542513,
        "postId":5721492,
        "creationDate":"2011-04-19",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":265530,
          "displayName":"Jonathan Grynspan",
          "reputation":33907
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"So you want us to answer your homework question for you, then?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5721492-cu6542513]-[-1087955415]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"So you want us to answer your homework question for you, then?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "homework":1,
                      "answer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6542633,
        "postId":5721492,
        "creationDate":"2011-04-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":654482,
          "displayName":"VitaminYes",
          "reputation":38
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Haha, yeah. Shame on me? Sorry if I just deliberately abused this web site."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5721492-cu6542633]-[-465963047]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Haha, yeah. Shame on me? Sorry if I just deliberately abused this web site."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "abus":1,
                      "site":1,
                      "deliber":1,
                      "web":1,
                      "yeah":1,
                      "shame":1,
                      "haha":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6542639,
        "postId":5721492,
        "creationDate":"2011-04-19",
        "score":3,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":15055,
          "displayName":"Claudiu",
          "reputation":65774
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"luckily the question is interesting so nobody cares =P"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5721492-cu6542639]-[-1120392520]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"luckily the question is interesting so nobody cares =P"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "interest":1,
                      "care":1,
                      "question":1,
                      "luckili":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6542667,
        "postId":5721492,
        "creationDate":"2011-04-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":654482,
          "displayName":"VitaminYes",
          "reputation":38
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Claudiu Thanks for backing me up on this one, hahaha. This website is addicting. I'll definitely have to contribute in return for the help."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5721492-cu6542667]-[1121052134]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Claudiu Thanks for backing me up on this one, hahaha. This website is addicting. I'll definitely have to contribute in return for the help."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Claudiu",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "claudiu":1,
                      "websit":1,
                      "contribut":1,
                      "addict":1,
                      "hahaha":1,
                      "back":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "programming-languages",
      "semantics"
    ],
    "creationDate":"2011-04-19",
    "lastActivityDate":"2012-09-19",
    "lastEditDate":"2012-09-19",
    "score":7,
    "viewCount":119,
    "owner":{
      "type":"StackOverflowUser",
      "id":654482,
      "displayName":"VitaminYes",
      "reputation":38
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>&quot;The Java language automatically initializes fields of objects, in contrast to local variables of methods that the programmers are responsible for initializing. Given what you know of intra- and inter-procedural data flow analysis, explain why the language designers may have made these design choices.&quot;</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5721492]-[2087793631]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>&quot;The Java language automatically initializes fields of objects, in contrast to local variables of methods that the programmers are responsible for initializing. Given what you know of intra- and inter-procedural data flow analysis, explain why the language designers may have made these design choices.&quot;</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "languag":2,
                  "design":2,
                  "field":1,
                  "explain":1,
                  "data":1,
                  "inter":1,
                  "procedur":1,
                  "local":1,
                  "object":1,
                  "automat":1,
                  "flow":1,
                  "programm":1,
                  "choic":1,
                  "intra":1,
                  "quot":2,
                  "initi":2,
                  "contrast":1,
                  "variabl":1,
                  "analysi":1,
                  "respons":1,
                  "made":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Its obvious to me that its to prevent a bug. However, what exactly is that bug? Would it be to condense the possible control flow of some given method?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5721492]-[-25873150]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Its obvious to me that its to prevent a bug. However, what exactly is that bug? Would it be to condense the possible control flow of some given method?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "prevent":1,
                  "obvious":1,
                  "condens":1,
                  "bug":2,
                  "flow":1,
                  "control":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Could someone go into greater detail on this? I'd really appreciate the help.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5721492]-[1734263868]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Could someone go into greater detail on this? I'd really appreciate the help.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "greater":1,
                  "detail":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":5721597,
      "questionId":5721492,
      "comments":[
        
      ],
      "creationDate":"2011-04-19",
      "lastActivityDate":"2011-04-19",
      "score":3,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":15055,
        "displayName":"Claudiu",
        "reputation":65774
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It's really easy to do intra-procedural data flow, so it's really easy to check whether a field has been initialized and give warnings if it hasn't (one can write a simplistic decidable algorithm, e.g. make sure all branches of an <code>if</code> initialize a variable, and if one branch doesn't, fail, even if the branch is unreachable). </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5721597]-[-902319205]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It's really easy to do intra-procedural data flow, so it's really easy to check whether a field has been initialized and give warnings if it hasn't (one can write a simplistic decidable algorithm, e.g. make sure all branches of an <code>if</code> initialize a variable, and if one branch doesn't, fail, even if the branch is unreachable). </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "decid":1,
                    "fail":1,
                    "easi":2,
                    "warn":1,
                    "field":1,
                    "unreach":1,
                    "simplist":1,
                    "data":1,
                    "branch":3,
                    "procedur":1,
                    "code":2,
                    "algorithm":1,
                    "check":1,
                    "flow":1,
                    "give":1,
                    "intra":1,
                    "make":1,
                    "initi":2,
                    "variabl":1,
                    "write":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It's really hard to do inter-procedural data flow, so it's really hard to check whether a field of an object has <em>ever</em> been initialized <strong>anywhere</strong> in the code (you quickly get into undecidable territory for any reasonable approximation). </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5721597]-[-678004719]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It's really hard to do inter-procedural data flow, so it's really hard to check whether a field of an object has <em>ever</em> been initialized <strong>anywhere</strong> in the code (you quickly get into undecidable territory for any reasonable approximation). </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "hard":2,
                    "field":1,
                    "data":1,
                    "undecid":1,
                    "inter":1,
                    "procedur":1,
                    "territori":1,
                    "strong":2,
                    "reason":1,
                    "object":1,
                    "code":1,
                    "check":1,
                    "flow":1,
                    "initi":1,
                    "quick":1,
                    "approxim":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Thus Java does the former and gives compile-time errors when it detects uninitialized local variables, but doesn't do the latter and initializes an object's fields to their defaults.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5721597]-[-267348674]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Thus Java does the former and gives compile-time errors when it detects uninitialized local variables, but doesn't do the latter and initializes an object's fields to their defaults.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "field":1,
                    "detect":1,
                    "local":1,
                    "object":1,
                    "error":1,
                    "uniniti":1,
                    "default":1,
                    "initi":1,
                    "compil":1,
                    "time":1,
                    "variabl":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":5721646,
      "questionId":5721492,
      "comments":[
        
      ],
      "creationDate":"2011-04-19",
      "lastActivityDate":"2011-04-19",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":545199,
        "displayName":"S E",
        "reputation":1142
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It is not always the case that they are initialized. Objects can be instantiated without invoking any constructor by using reflections in combination with the class sun.misc.Unsafe or ObjectInputStream to access these classes private native methods or directly through JNI. These are intended for the purpose of object serialization/deserialization, and expect the fields to be populated by the deserializer. As for why the designers would have chosen to eliminate direct access to these methods(ie. without reflections) it stands to reason that pointers still left in memory could be used for stack-smashing or return-to-lib-c attacks. Clearing memory allocated for these &quot;automatically&quot; for most programs reduces the security risk as well as reducing the chance for errors. Also note that an attempt to read a local variable that has not been initialized results in a compile error for much the same reason</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5721646]-[-1349115749]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It is not always the case that they are initialized. Objects can be instantiated without invoking any constructor by using reflections in combination with the class sun.misc.Unsafe or ObjectInputStream to access these classes private native methods or directly through JNI. These are intended for the purpose of object serialization/deserialization, and expect the fields to be populated by the deserializer. As for why the designers would have chosen to eliminate direct access to these methods(ie. without reflections) it stands to reason that pointers still left in memory could be used for stack-smashing or return-to-lib-c attacks. Clearing memory allocated for these &quot;automatically&quot; for most programs reduces the security risk as well as reducing the chance for errors. Also note that an attempt to read a local variable that has not been initialized results in a compile error for much the same reason</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ClassDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"sun",
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ObjectInputStream",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "serial":1,
                    "read":1,
                    "program":1,
                    "method":2,
                    "design":1,
                    "alloc":1,
                    "reduc":2,
                    "instanti":1,
                    "pointer":1,
                    "field":1,
                    "clear":1,
                    "result":1,
                    "left":1,
                    "sun":1,
                    "local":1,
                    "invok":1,
                    "constructor":1,
                    "risk":1,
                    "secur":1,
                    "stand":1,
                    "reason":2,
                    "object":3,
                    "chosen":1,
                    "direct":2,
                    "jni":1,
                    "intend":1,
                    "automat":1,
                    "lib":1,
                    "error":2,
                    "combin":1,
                    "note":1,
                    "stream":1,
                    "expect":1,
                    "popul":1,
                    "stack":1,
                    "smash":1,
                    "misc":1,
                    "elimin":1,
                    "class":1,
                    "quot":2,
                    "initi":2,
                    "attack":1,
                    "compil":1,
                    "unsaf":1,
                    "deseri":2,
                    "attempt":1,
                    "variabl":1,
                    "reflect":2,
                    "purpos":1,
                    "input":1,
                    "chanc":1,
                    "access":2,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ObjectInputStream",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}