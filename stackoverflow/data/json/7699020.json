{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":7699020,
    "title":"What makes JNI calls slow?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":9361225,
        "postId":7699020,
        "creationDate":"2011-10-08",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":367273,
          "displayName":"NPE",
          "reputation":198024
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"(+1) Nice question. While we're on the subject, I would like to encourage anyone who has done actual benchmarks to post their findings."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7699020-cu9361225]-[894094401]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"(+1) Nice question. While we're on the subject, I would like to encourage anyone who has done actual benchmarks to post their findings."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "find":1,
                      "question":1,
                      "post":1,
                      "subject":1,
                      "encourag":1,
                      "nice":1,
                      "actual":1,
                      "benchmark":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9361359,
        "postId":7699020,
        "creationDate":"2011-10-08",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":438992,
          "displayName":"Dave Newton",
          "reputation":98426
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"A JNI call needs to convert the Java objects passed in to something C (for example) can understand; same with the return value. Type conversion and call stack marshalling are a good chunk of it."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7699020-cu9361359]-[-2117975188]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"A JNI call needs to convert the Java objects passed in to something C (for example) can understand; same with the return value. Type conversion and call stack marshalling are a good chunk of it."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "chunk":1,
                      "good":1,
                      "understand":1,
                      "object":1,
                      "jni":1,
                      "convers":1,
                      "stack":1,
                      "pass":1,
                      "type":1,
                      "marshal":1,
                      "call":2,
                      "convert":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9361420,
        "postId":7699020,
        "creationDate":"2011-10-08",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":14316,
          "displayName":"pdeva",
          "reputation":5138
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Dave, I understand and have heard about that before. But what *exactly* is the conversion like? what is that 'something'? I am looking for details."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7699020-cu9361420]-[1900582206]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Dave, I understand and have heard about that before. But what *exactly* is the conversion like? what is that 'something'? I am looking for details."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "heard":1,
                      "dave":1,
                      "understand":1,
                      "convers":1,
                      "detail":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9361442,
        "postId":7699020,
        "creationDate":"2011-10-08",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":57695,
          "displayName":"Peter Lawrey",
          "reputation":257803
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Using direct ByteBuffers to pass data between Java and C can result in relatively low overhead."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7699020-cu9361442]-[-1691493057]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Using direct ByteBuffers to pass data between Java and C can result in relatively low overhead."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ByteBuffers",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "data":1,
                      "result":1,
                      "buffer":1,
                      "direct":1,
                      "overhead":1,
                      "low":1,
                      "pass":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ByteBuffers",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9361893,
        "postId":7699020,
        "creationDate":"2011-10-08",
        "score":5,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":554431,
          "displayName":"bestsss",
          "reputation":6866
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"the call needs a proper C stack frame, pushing all useful CPU registers (and popping them back), the call needs fencing and also it prevents a lot of optimizations like inline. Also the threads has to leave the execution stack lock (for instance to allow biased locks to work while in native code) and then obtain it back."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[7699020-cu9361893]-[-392234850]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"the call needs a proper C stack frame, pushing all useful CPU registers (and popping them back), the call needs fencing and also it prevents a lot of optimizations like inline. Also the threads has to leave the execution stack lock (for instance to allow biased locks to work while in native code) and then obtain it back."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "pop":1,
                      "proper":1,
                      "fenc":1,
                      "prevent":1,
                      "push":1,
                      "regist":1,
                      "lock":2,
                      "work":1,
                      "leav":1,
                      "frame":1,
                      "code":1,
                      "optim":1,
                      "thread":1,
                      "back":2,
                      "cpu":1,
                      "stack":2,
                      "bias":1,
                      "lot":1,
                      "inlin":1,
                      "call":2,
                      "execut":1,
                      "instanc":1,
                      "obtain":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "performance",
      "jni"
    ],
    "creationDate":"2011-10-08",
    "lastActivityDate":"2014-11-24",
    "score":112,
    "viewCount":14287,
    "owner":{
      "type":"StackOverflowUser",
      "id":14316,
      "displayName":"pdeva",
      "reputation":5138
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I know that 'crossing boundaries' when making a JNI call in Java is slow.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[7699020]-[2122820439]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I know that 'crossing boundaries' when making a JNI call in Java is slow.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "slow":1,
                  "jni":1,
                  "boundari":1,
                  "cross":1,
                  "make":1,
                  "call":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>However I want to know <em>what</em> is it that makes it slow? What does the underlying jvm implementation do when making a JNI call that makes it so slow?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[7699020]-[1641400528]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>However I want to know <em>what</em> is it that makes it slow? What does the underlying jvm implementation do when making a JNI call that makes it so slow?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "slow":2,
                  "jni":1,
                  "implement":1,
                  "make":3,
                  "under":1,
                  "call":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":7699115,
      "questionId":7699020,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":9361388,
          "postId":7699115,
          "creationDate":"2011-10-08",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":14316,
            "displayName":"pdeva",
            "reputation":5138
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"the paper you linked to seems more like a performance benchmark paper than one that describes how JNI internally works."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7699115-cu9361388]-[-1575704078]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"the paper you linked to seems more like a performance benchmark paper than one that describes how JNI internally works."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "work":1,
                        "jni":1,
                        "link":1,
                        "paper":2,
                        "perform":1,
                        "describ":1,
                        "intern":1,
                        "benchmark":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9361427,
          "postId":7699115,
          "creationDate":"2011-10-08",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":488004,
            "displayName":"dmck",
            "reputation":4029
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@pdeva Unfortunately the other resources I found were linked to java.sun.com and the links have not been updated since the Oracle acquisition. I am looking for more details on the JNI internals."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7699115-cu9361427]-[178024133]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@pdeva Unfortunately the other resources I found were linked to java.sun.com and the links have not been updated since the Oracle acquisition. I am looking for more details on the JNI internals."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "updat":1,
                        "sun":1,
                        "resourc":1,
                        "oracl":1,
                        "jni":1,
                        "pdeva":1,
                        "found":1,
                        "link":2,
                        "acquisit":1,
                        "detail":1,
                        "intern":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9361470,
          "postId":7699115,
          "creationDate":"2011-10-08",
          "score":4,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":947357,
            "displayName":"A.H.",
            "reputation":26599
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The paper is about Java 1.3 - quite a long time ago. Do the issues of that time still apply to Java 7?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7699115-cu9361470]-[-121735490]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The paper is about Java 1.3 - quite a long time ago. Do the issues of that time still apply to Java 7?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "issu":1,
                        "ago":1,
                        "paper":1,
                        "time":2,
                        "appli":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-10-08",
      "lastActivityDate":"2011-10-08",
      "score":16,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":488004,
        "displayName":"dmck",
        "reputation":4029
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Basically the JVM interpretively constructs the C parameters for each JNI call and the code is not optimized.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7699115]-[973048907]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Basically the JVM interpretively constructs the C parameters for each JNI call and the code is not optimized.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "code":1,
                    "jni":1,
                    "optim":1,
                    "paramet":1,
                    "basic":1,
                    "call":1,
                    "construct":1,
                    "interpret":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are many more details outlined in <a href=\"http://janet-project.sourceforge.net/papers/jnibench.pdf\">this paper</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7699115]-[720626784]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are many more details outlined in <a href=\"http://janet-project.sourceforge.net/papers/jnibench.pdf\">this paper</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "sourceforg":1,
                    "project":1,
                    "pdf":1,
                    "jnibench":1,
                    "outlin":1,
                    "net":1,
                    "paper":2,
                    "janet":1,
                    "detail":1,
                    "href":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you are interested in benchmarking JNI vs native code <a href=\"https://github.com/aclindsa/jnioverhead\">this project</a> has code for running benchmarks.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7699115]-[-273941340]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you are interested in benchmarking JNI vs native code <a href=\"https://github.com/aclindsa/jnioverhead\">this project</a> has code for running benchmarks.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":1,
                    "aclindsa":1,
                    "project":1,
                    "run":1,
                    "jnioverhead":1,
                    "https":1,
                    "code":2,
                    "jni":1,
                    "interest":1,
                    "href":1,
                    "benchmark":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":7809300,
      "questionId":7699020,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":9539044,
          "postId":7809300,
          "creationDate":"2011-10-19",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":947357,
            "displayName":"A.H.",
            "reputation":26599
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I didn't want to claim, that this approach can be used for every JNI call. But it won't hurt to know that there _is_ some middle ground between pure bytecode and pure JNI code. Perhaps this will affect some design decisions. Perhaps this mechanism is generalized in the future."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu9539044]-[1318356957]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I didn't want to claim, that this approach can be used for every JNI call. But it won't hurt to know that there _is_ some middle ground between pure bytecode and pure JNI code. Perhaps this will affect some design decisions. Perhaps this mechanism is generalized in the future."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_is_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "hurt":1,
                        "design":1,
                        "claim":1,
                        "middl":1,
                        "bytecod":1,
                        "pure":2,
                        "affect":1,
                        "decis":1,
                        "code":1,
                        "jni":2,
                        "general":1,
                        "ground":1,
                        "futur":1,
                        "mechan":1,
                        "approach":1,
                        "call":1,
                        "won":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9538156,
          "postId":7809300,
          "creationDate":"2011-10-19",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":947357,
            "displayName":"A.H.",
            "reputation":26599
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"[This answer](http://stackoverflow.com/questions/7823665/why-jni-call-to-native-method-is-slower-than-similar-in-sun-misc-unsafe/7825191#7825191) claims, that some native code _can_ be inlined by the JVM."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu9538156]-[-858751692]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"[This answer](http://stackoverflow.com/questions/7823665/why-jni-call-to-native-method-is-slower-than-similar-in-sun-misc-unsafe/7825191#7825191) claims, that some native code _can_ be inlined by the JVM."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_can_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "question":1,
                        "method":1,
                        "claim":1,
                        "similar":1,
                        "sun":1,
                        "code":1,
                        "jni":1,
                        "stackoverflow":1,
                        "slower":1,
                        "misc":1,
                        "answer":1,
                        "unsaf":1,
                        "inlin":1,
                        "http":1,
                        "call":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9538709,
          "postId":7809300,
          "creationDate":"2011-10-19",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":202009,
            "displayName":"Andy Thomas",
            "reputation":35376
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"That answer notes that some standard native code is inlined in the JVM rather than using JNI. Above, &quot;native methods&quot; refers to the general case of user-defined native methods implemented via JNI. Thanks for the pointer to sun.misc.Unsafe."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu9538709]-[280351860]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"That answer notes that some standard native code is inlined in the JVM rather than using JNI. Above, &quot;native methods&quot; refers to the general case of user-defined native methods implemented via JNI. Thanks for the pointer to sun.misc.Unsafe."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"sun",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"misc",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Unsafe",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "method":2,
                        "pointer":1,
                        "standard":1,
                        "sun":1,
                        "code":1,
                        "jni":2,
                        "general":1,
                        "note":1,
                        "refer":1,
                        "implement":1,
                        "misc":1,
                        "answer":1,
                        "quot":2,
                        "unsaf":1,
                        "inlin":1,
                        "defin":1,
                        "user":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"sun",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"misc",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Unsafe",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9551491,
          "postId":7809300,
          "creationDate":"2011-10-20",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":14316,
            "displayName":"pdeva",
            "reputation":5138
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I am awarding the bounty to this answer, yet I am keeping the question 'open' to attract anyone who wants to provide an even more detailed answer."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu9551491]-[334655109]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I am awarding the bounty to this answer, yet I am keeping the question 'open' to attract anyone who wants to provide an even more detailed answer."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "provid":1,
                        "question":1,
                        "keep":1,
                        "award":1,
                        "bounti":1,
                        "open":1,
                        "answer":2,
                        "detail":1,
                        "attract":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":11141744,
          "postId":7809300,
          "creationDate":"2012-01-18",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":554431,
            "displayName":"bestsss",
            "reputation":6866
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@A.H, you mistake intrinsic w/ JNI. They are quite different. `sun.misc.Unsafe` and quite a lot of other stuff like `System.currentTimeMillis/nanoTime` are handled via 'magic' by the JVM. They are not JNI and they do not have proper .c/.h files at all, baring the JVM impl, itself. The approach can not be followed unless you are writing/hacking the JVM."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu11141744]-[1007554363]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@A.H, you mistake intrinsic w/ JNI. They are quite different. `sun.misc.Unsafe` and quite a lot of other stuff like `System.currentTimeMillis/nanoTime` are handled via 'magic' by the JVM. They are not JNI and they do not have proper .c/.h files at all, baring the JVM impl, itself. The approach can not be followed unless you are writing/hacking the JVM."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"A",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"H",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"sun",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"misc",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Unsafe",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"currentTimeMillis",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"nanoTime",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":3,
                        "system":1,
                        "proper":1,
                        "milli":1,
                        "sun":1,
                        "nano":1,
                        "impl":1,
                        "jni":2,
                        "mistak":1,
                        "stuff":1,
                        "bare":1,
                        "misc":1,
                        "lot":1,
                        "approach":1,
                        "file":1,
                        "intrins":1,
                        "hack":1,
                        "magic":1,
                        "unsaf":1,
                        "time":2,
                        "current":1,
                        "handl":1,
                        "write":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"sun",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"misc",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"Unsafe",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":31426227,
          "postId":7809300,
          "creationDate":"2014-01-05",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":610966,
            "displayName":"Philip",
            "reputation":757
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"&quot;[this java.sun.com document](http://java.sun.com/docs/books/performance/1st_edition/html/JPNativeCode.fm.html)&quot; is currently broken-- [here](http://www.mastercorp.free.fr/Ing1/Cours/Java/java_lesson1/doc/Tutorial/performance/JPNativeCode_fm.htm)'s a working link."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu31426227]-[608461406]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"&quot;[this java.sun.com document](http://java.sun.com/docs/books/performance/1st_edition/html/JPNativeCode.fm.html)&quot; is currently broken-- [here](http://www.mastercorp.free.fr/Ing1/Cours/Java/java_lesson1/doc/Tutorial/performance/JPNativeCode_fm.htm)'s a working link."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"_edition",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java_lesson1",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "htm":1,
                        "document":1,
                        "book":1,
                        "cour":1,
                        "sun":2,
                        "mastercorp":1,
                        "lesson":1,
                        "ing":1,
                        "jpnativ":2,
                        "doc":2,
                        "work":1,
                        "code":2,
                        "edit":1,
                        "link":1,
                        "perform":2,
                        "quot":2,
                        "html":2,
                        "http":2,
                        "tutori":1,
                        "free":1,
                        "www":1,
                        "broken":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":38909146,
          "postId":7809300,
          "creationDate":"2014-07-29",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":202009,
            "displayName":"Andy Thomas",
            "reputation":35376
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Philip - Thanks, updated the text above with your link."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[7809300-cu38909146]-[-1580100115]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Philip - Thanks, updated the text above with your link."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Philip",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "text":1,
                        "philip":1,
                        "link":1,
                        "updat":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-10-18",
      "lastActivityDate":"2014-07-29",
      "lastEditDate":"2014-07-29",
      "score":100,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":202009,
        "displayName":"Andy Thomas",
        "reputation":35376
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>First, it's worth noting that by &quot;slow,&quot; we're talking about something that can take tens of nanoseconds. For trivial native methods, in 2010 I measured calls at an average 40 ns on my Windows desktop, and 11 ns on my Mac desktop. Unless you're making <em>many</em> calls, you're not going to notice.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7809300]-[-1805676746]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>First, it's worth noting that by &quot;slow,&quot; we're talking about something that can take tens of nanoseconds. For trivial native methods, in 2010 I measured calls at an average 40 ns on my Windows desktop, and 11 ns on my Mac desktop. Unless you're making <em>many</em> calls, you're not going to notice.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "desktop":2,
                    "method":1,
                    "mac":1,
                    "window":1,
                    "slow":1,
                    "averag":1,
                    "talk":1,
                    "measur":1,
                    "worth":1,
                    "note":1,
                    "nanosecond":1,
                    "make":1,
                    "ten":1,
                    "quot":2,
                    "notic":1,
                    "call":2,
                    "trivial":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>That said, calling a native method can be <em>slower</em> than making a normal Java method call. Causes include:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7809300]-[1803716201]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>That said, calling a native method can be <em>slower</em> than making a normal Java method call. Causes include:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":2,
                    "normal":1,
                    "includ":1,
                    "slower":1,
                    "make":1,
                    "call":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li>Native methods will not be inlined by the JVM. Nor will they be just-in-time compiled for this specific machine -- they're already compiled.</li> \n <li>A Java array may be copied for access in native code, and later copied back. The cost can be linear in the size of the array. I measured JNI <em>copying</em> of a 100,000 array to average about 75 microseconds on my Windows desktop, and 82 microseconds on Mac. Fortunately, direct access may be obtained via <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#GetPrimitiveArrayCritical_ReleasePrimitiveArrayCritical\">GetPrimitiveArrayCritical</a> or <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#NewDirectByteBuffer\">NewDirectByteBuffer</a>.</li> \n <li>If the method is passed an object, or needs to make a callback, then the native method will likely be making its own calls to the JVM. Accessing Java fields, methods and types from the native code requires something similar to reflection. Signatures are specified in strings and queried from the JVM. This is both slow <em>and</em> error-prone.</li> \n <li>Java Strings are objects, have length and are encoded. Accessing or creating a string may require an O(n) copy.</li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7809300]-[1846481765]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li>Native methods will not be inlined by the JVM. Nor will they be just-in-time compiled for this specific machine -- they're already compiled.</li> \n <li>A Java array may be copied for access in native code, and later copied back. The cost can be linear in the size of the array. I measured JNI <em>copying</em> of a 100,000 array to average about 75 microseconds on my Windows desktop, and 82 microseconds on Mac. Fortunately, direct access may be obtained via <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#GetPrimitiveArrayCritical_ReleasePrimitiveArrayCritical\">GetPrimitiveArrayCritical</a> or <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#NewDirectByteBuffer\">NewDirectByteBuffer</a>.</li> \n <li>If the method is passed an object, or needs to make a callback, then the native method will likely be making its own calls to the JVM. Accessing Java fields, methods and types from the native code requires something similar to reflection. Signatures are specified in strings and queried from the JVM. This is both slow <em>and</em> error-prone.</li> \n <li>Java Strings are objects, have length and are encoded. Accessing or creating a string may require an O(n) copy.</li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"GetPrimitiveArrayCritical",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "fortun":1,
                    "desktop":1,
                    "jvm":3,
                    "method":4,
                    "mac":1,
                    "window":1,
                    "critic":3,
                    "slow":1,
                    "size":1,
                    "field":1,
                    "signatur":1,
                    "similar":1,
                    "guid":2,
                    "requir":2,
                    "averag":1,
                    "oracl":2,
                    "prone":1,
                    "buffer":2,
                    "string":2,
                    "callback":1,
                    "doc":4,
                    "measur":1,
                    "object":2,
                    "direct":3,
                    "technot":2,
                    "code":2,
                    "jni":3,
                    "array":6,
                    "encod":1,
                    "releas":1,
                    "queri":1,
                    "error":1,
                    "cost":1,
                    "linear":1,
                    "machin":1,
                    "function":2,
                    "specif":1,
                    "back":1,
                    "spec":2,
                    "javas":2,
                    "pass":1,
                    "make":2,
                    "length":1,
                    "compil":2,
                    "inlin":1,
                    "time":1,
                    "type":1,
                    "html":2,
                    "href":2,
                    "primit":3,
                    "http":2,
                    "creat":1,
                    "call":1,
                    "reflect":1,
                    "copi":4,
                    "obtain":1,
                    "access":4,
                    "microsecond":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"GetPrimitiveArrayCritical",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Some additional discussion, possibly dated, can be found in &quot;Java&iquest; Platform Performance: Strategies and Tactics&quot;, 2000, by Steve Wilson and Jeff Kesselman, in section &quot;9.2: Examining JNI costs&quot;. It's about a third of the way down <a href=\"http://www.mastercorp.free.fr/Ing1/Cours/Java/java_lesson1/doc/Tutorial/performance/JPNativeCode_fm.htm\">this page</a>, provided in the comment by @Philip below.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7809300]-[-955060766]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Some additional discussion, possibly dated, can be found in &quot;Java&iquest; Platform Performance: Strategies and Tactics&quot;, 2000, by Steve Wilson and Jeff Kesselman, in section &quot;9.2: Examining JNI costs&quot;. It's about a third of the way down <a href=\"http://www.mastercorp.free.fr/Ing1/Cours/Java/java_lesson1/doc/Tutorial/performance/JPNativeCode_fm.htm\">this page</a>, provided in the comment by @Philip below.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"AnnotationNode",
                    "identifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"Philip",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "htm":1,
                    "examin":1,
                    "provid":1,
                    "addit":1,
                    "kesselman":1,
                    "cour":1,
                    "page":1,
                    "mastercorp":1,
                    "steve":1,
                    "lesson":1,
                    "wilson":1,
                    "ing":1,
                    "strategi":1,
                    "jpnativ":1,
                    "possibl":1,
                    "section":1,
                    "doc":1,
                    "code":1,
                    "jni":1,
                    "found":1,
                    "discuss":1,
                    "jeff":1,
                    "cost":1,
                    "date":1,
                    "philip":1,
                    "comment":1,
                    "perform":2,
                    "quot":4,
                    "href":1,
                    "platform":1,
                    "iquest":1,
                    "http":1,
                    "tutori":1,
                    "free":1,
                    "tactic":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The 2009 IBM developerWorks paper <a href=\"http://www.ibm.com/developerworks/java/library/j-jni/\">&quot;Best practices for using the Java Native Interface&quot;</a> provides some suggestions on avoiding performance pitfalls with JNI.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[7809300]-[1288482201]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The 2009 IBM developerWorks paper <a href=\"http://www.ibm.com/developerworks/java/library/j-jni/\">&quot;Best practices for using the Java Native Interface&quot;</a> provides some suggestions on avoiding performance pitfalls with JNI.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"developerWorks",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "developerwork":1,
                    "suggest":1,
                    "librari":1,
                    "avoid":1,
                    "work":1,
                    "jni":2,
                    "pitfal":1,
                    "paper":1,
                    "perform":1,
                    "quot":2,
                    "ibm":2,
                    "practic":1,
                    "href":1,
                    "develop":1,
                    "http":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":11491199,
      "questionId":7699020,
      "comments":[
        
      ],
      "creationDate":"2012-07-15",
      "lastActivityDate":"2014-11-24",
      "lastEditDate":"2014-11-24",
      "score":12,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":970531,
        "displayName":"Tema",
        "reputation":1374
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It is worth mentioning that not all Java methods marked with <code>native</code> are &quot;slow&quot;. Some of them are <a href=\"http://en.wikipedia.org/wiki/Intrinsic_function\"rel=\"nofollow\">intrinsics</a> that makes them extremely fast. To check which ones are intrinsic and which ones are not, you can look for <code>do_intrinsic</code> at <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/hotspot/file/tip/src/share/vm/classfile/vmSymbols.hpp\"rel=\"nofollow\">vmSymbols.hpp</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[11491199]-[46573255]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It is worth mentioning that not all Java methods marked with <code>native</code> are &quot;slow&quot;. Some of them are <a href=\"http://en.wikipedia.org/wiki/Intrinsic_function\"rel=\"nofollow\">intrinsics</a> that makes them extremely fast. To check which ones are intrinsic and which ones are not, you can look for <code>do_intrinsic</code> at <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/hotspot/file/tip/src/share/vm/classfile/vmSymbols.hpp\"rel=\"nofollow\">vmSymbols.hpp</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"do_intrinsic",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"IdentifierNode",
                    "name":"vmSymbols",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "openjdk":1,
                    "method":1,
                    "slow":1,
                    "classfil":1,
                    "rel":2,
                    "hpp":2,
                    "net":1,
                    "hotspot":1,
                    "code":4,
                    "share":1,
                    "symbol":2,
                    "mention":1,
                    "wikipedia":1,
                    "nofollow":2,
                    "check":1,
                    "worth":1,
                    "function":1,
                    "src":1,
                    "extrem":1,
                    "make":1,
                    "tip":1,
                    "file":1,
                    "quot":2,
                    "fast":1,
                    "intrins":4,
                    "wiki":1,
                    "org":1,
                    "mark":1,
                    "href":2,
                    "http":2,
                    "jdk":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}