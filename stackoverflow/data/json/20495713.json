{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":20495713,
    "title":"Are there ready made Java classes for the MtGox/PubNub JSON API?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":30724197,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1228,
          "displayName":"Will",
          "reputation":82375
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Makoto yeah, this is OT as it stands originally. However, the answer is worth tweaking the question to remove the outright request for links/libs. I've edited to do so, hopefully successfully."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30724197]-[2132896902]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Makoto yeah, this is OT as it stands originally. However, the answer is worth tweaking the question to remove the outright request for links/libs. I've edited to do so, hopefully successfully."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Makoto",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "remov":1,
                      "success":1,
                      "request":1,
                      "outright":1,
                      "stand":1,
                      "edit":1,
                      "makoto":1,
                      "lib":1,
                      "tweak":1,
                      "worth":1,
                      "yeah":1,
                      "origin":1,
                      "link":1,
                      "answer":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30726747,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1838726,
          "displayName":"Daniel S.",
          "reputation":3135
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Editors, I appreciate your efforts to enhance this question and I like my question to be edited. But please be aware that 1. there is a meta discussion about this question, which might become more difficult if this question is edited, and 2. Now the final question in the end does not anymore reflect my original problem. I do know a way how to access the information in the JSON object. I just don't know a convenient way. Moreover, the final question does not anymore line up with the description near the beginning."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30726747]-[-1415166498]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Editors, I appreciate your efforts to enhance this question and I like my question to be edited. But please be aware that 1. there is a meta discussion about this question, which might become more difficult if this question is edited, and 2. Now the final question in the end does not anymore reflect my original problem. I do know a way how to access the information in the JSON object. I just don't know a convenient way. Moreover, the final question does not anymore line up with the description near the beginning."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":6,
                      "descript":1,
                      "begin":1,
                      "effort":1,
                      "json":1,
                      "line":1,
                      "problem":1,
                      "object":1,
                      "edit":2,
                      "anymor":2,
                      "awar":1,
                      "conveni":1,
                      "editor":1,
                      "discuss":1,
                      "meta":1,
                      "difficult":1,
                      "inform":1,
                      "enhanc":1,
                      "origin":1,
                      "end":1,
                      "reflect":1,
                      "access":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30727005,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1838726,
          "displayName":"Daniel S.",
          "reputation":3135
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I've opened a new question which is compliant with SO's requirements here: http://stackoverflow.com/questions/20547815/java-is-there-a-convenient-way-to-extract-data-from-the-mtgox-pubnub-json-api . I think we should revert the old question here to the state before the edits, for reference for the meta-question, and lock it or close it, and continue commenting and answering the original topic in the new question."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30727005]-[-845865887]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I've opened a new question which is compliant with SO's requirements here: http://stackoverflow.com/questions/20547815/java-is-there-a-convenient-way-to-extract-data-from-the-mtgox-pubnub-json-api . I think we should revert the old question here to the state before the edits, for reference for the meta-question, and lock it or close it, and continue commenting and answering the original topic in the new question."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":5,
                      "state":1,
                      "json":1,
                      "compliant":1,
                      "requir":1,
                      "data":1,
                      "pubnub":1,
                      "mtgox":1,
                      "lock":1,
                      "open":1,
                      "edit":1,
                      "conveni":1,
                      "stackoverflow":1,
                      "meta":1,
                      "origin":1,
                      "comment":1,
                      "refer":1,
                      "answer":1,
                      "topic":1,
                      "api":1,
                      "close":1,
                      "http":1,
                      "revert":1,
                      "extract":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30705365,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":524733,
          "displayName":"PubNub",
          "reputation":2841
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"We are building a response to this answer and will provide a full SDK that will be hosted here on the answer forum with the API."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30705365]-[-71276]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"We are building a response to this answer and will provide a full SDK that will be hosted here on the answer forum with the API."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "provid":1,
                      "host":1,
                      "full":1,
                      "sdk":1,
                      "build":1,
                      "forum":1,
                      "answer":2,
                      "api":1,
                      "respons":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30705585,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":524733,
          "displayName":"PubNub",
          "reputation":2841
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Do you have specific requirements for this Ready-Made Java Class as we put one together?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30705585]-[-1507666934]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Do you have specific requirements for this Ready-Made Java Class as we put one together?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "readi":1,
                      "requir":1,
                      "specif":1,
                      "put":1,
                      "made":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30705898,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1838726,
          "displayName":"Daniel S.",
          "reputation":3135
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@PubNub, please cf. http://stackoverflow.com/questions/20534862/how-to-efficiently-map-a-org-json-jsonobject-to-a-pojo about a closely related topic."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30705898]-[1796916]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@PubNub, please cf. http://stackoverflow.com/questions/20534862/how-to-efficiently-map-a-org-json-jsonobject-to-a-pojo about a closely related topic."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"PubNub",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "nub":1,
                      "relat":1,
                      "map":1,
                      "json":1,
                      "pojo":1,
                      "effici":1,
                      "pub":1,
                      "stackoverflow":1,
                      "jsonobject":1,
                      "topic":1,
                      "org":1,
                      "close":1,
                      "http":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":30706343,
        "postId":20495713,
        "creationDate":"2013-12-12",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1079354,
          "displayName":"Makoto",
          "reputation":30504
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Something about this question-and-answer tandem feels kind of off, so I've [opened a Meta discussion about it](http://meta.stackexchange.com/q/211204/175248). Gut feeling: close as asking for third-party resources, but I'm not 100% sure."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[20495713-cu30706343]-[1644683102]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Something about this question-and-answer tandem feels kind of off, so I've [opened a Meta discussion about it](http://meta.stackexchange.com/q/211204/175248). Gut feeling: close as asking for third-party resources, but I'm not 100% sure."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "feel":2,
                      "resourc":1,
                      "open":1,
                      "discuss":1,
                      "meta":2,
                      "stackexchang":1,
                      "answer":1,
                      "tandem":1,
                      "kind":1,
                      "parti":1,
                      "close":1,
                      "http":1,
                      "gut":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "json",
      "pubnub",
      "mtgox"
    ],
    "creationDate":"2013-12-10",
    "lastActivityDate":"2013-12-16",
    "lastEditDate":"2013-12-12",
    "closedDate":"2013-12-16",
    "score":2,
    "viewCount":278,
    "owner":{
      "type":"StackOverflowUser",
      "id":1838726,
      "displayName":"Daniel S.",
      "reputation":3135
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm using the Pubnub API with Java for pulling data from MtGox. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20495713]-[-130413700]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm using the Pubnub API with Java for pulling data from MtGox. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"MtGox",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "gox":1,
                  "data":1,
                  "pubnub":1,
                  "pull":1,
                  "api":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MtGox",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I would like to do the following, where <code>Message</code> is the 3rd party class that I'm looking for:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20495713]-[723131689]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I would like to do the following, where <code>Message</code> is the 3rd party class that I'm looking for:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ClassDeclarationNode",
                  "modifiers":[
                    
                  ],
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"that",
                    "comments":[
                      
                    ]
                  },
                  "labels":[
                    
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "messag":1,
                  "code":2,
                  "parti":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"public void successCallback(String channel, Object message) { JSONObject messageJson = (JSONObject) message; // This next line is where I'm stuck ObjectMapper mapper = new ObjectMapper(); Message myMessage = mapper.readValue(messageJson.toString(), Message.class); // do stuff with myMessage here } "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[20495713]-[748315371]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"MethodDeclaratorNode",
                  "modifiers":[
                    {
                      "type":"KeywordModifierNode",
                      "value":"public",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "returnType":{
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  },
                  "identifier":{
                    "type":"IdentifierNode",
                    "name":"successCallback",
                    "comments":[
                      
                    ]
                  },
                  "parameters":{
                    "type":"FormalParametersNode",
                    "parameters":{
                      "type":"FormalParameterDeclsNode",
                      "modifiers":[
                        
                      ],
                      "parameterType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"String",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "nextDeclarator":{
                        "type":"AdditionalFormalParameterDeclNode",
                        "variableDeclarator":{
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"channel",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ]
                        },
                        "formalParameterDeclarator":{
                          "type":"FormalParameterDeclsNode",
                          "modifiers":[
                            
                          ],
                          "parameterType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Object",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "nextDeclarator":{
                            "type":"AdditionalFormalParameterDeclNode",
                            "variableDeclarator":{
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"message",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      }
                    },
                    "comments":[
                      
                    ]
                  },
                  "arrayReturnType":[
                    
                  ],
                  "body":{
                    "type":"BlockNode",
                    "statements":[
                      {
                        "type":"LocalVariableDeclarationStatementNode",
                        "modifiers":[
                          
                        ],
                        "declarators":{
                          "type":"VariableDeclaratorsNode",
                          "declarators":[
                            {
                              "type":"VariableDeclaratorNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"messageJson",
                                "comments":[
                                  
                                ]
                              },
                              "arrayDepth":[
                                
                              ],
                              "assignment":{
                                "type":"VariableAssignmentNode",
                                "variableAssignment":{
                                  "type":"VariableExpressionInitNode",
                                  "expression":{
                                    "type":"CastExpressionNode",
                                    "aType":{
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"JSONObject",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "argument":{
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"message",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                },
                                "comments":[
                                  
                                ]
                              },
                              "varType":{
                                "type":"ReferenceTypeNode",
                                "ids":[
                                  {
                                    "type":"ParameterizedTypeNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"JSONObject",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              }
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          {
                            "text":"// This next line is where I'm stuck ObjectMapper mapper = new ObjectMapper(); Message myMessage = mapper.readValue(messageJson.toString(), Message.class); // do stuff with myMessage here } \n"
                          }
                        ]
                      }
                    ],
                    "labels":[
                      
                    ],
                    "comments":[
                      
                    ]
                  },
                  "comments":[
                    
                  ]
                }
              ]
            },
            "rawText":"public void successCallback(String channel, Object message) { JSONObject messageJson = (JSONObject) message; // This next line is where I'm stuck ObjectMapper mapper = new ObjectMapper(); Message myMessage = mapper.readValue(messageJson.toString(), Message.class); // do stuff with myMessage here } \n...\n}",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "read":1,
                  "channel":1,
                  "success":1,
                  "mapper":4,
                  "json":2,
                  "line":1,
                  "callback":1,
                  "object":3,
                  "stuck":1,
                  "jsonobject":2,
                  "stuff":1,
                  "messag":8
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Object",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"JSONObject",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  {
                    "type":"PrimitiveTypeNode",
                    "name":"void",
                    "comments":[
                      
                    ]
                  }
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"channel",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"message",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ]
                  },
                  {
                    "type":"VariableDeclaratorNode",
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"messageJson",
                      "comments":[
                        
                      ]
                    },
                    "arrayDepth":[
                      
                    ],
                    "assignment":{
                      "type":"VariableAssignmentNode",
                      "variableAssignment":{
                        "type":"VariableExpressionInitNode",
                        "expression":{
                          "type":"CastExpressionNode",
                          "aType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"JSONObject",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "argument":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"message",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "varType":{
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JSONObject",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>How to read out the result of the JSON response in a way I can use in my code?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[20495713]-[-1790398677]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>How to read out the result of the JSON response in a way I can use in my code?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "read":1,
                  "json":1,
                  "result":1,
                  "code":1,
                  "respons":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":20500700,
      "questionId":20495713,
      "comments":[
        
      ],
      "creationDate":"2013-12-10",
      "lastActivityDate":"2013-12-12",
      "lastEditDate":"2013-12-12",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":524733,
        "displayName":"PubNub",
        "reputation":2841
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<h1>PubNub Java Class for MtGox JSON API</h1>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[1908288373]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<h1>PubNub Java Class for MtGox JSON API</h1>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubNub",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MtGox",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "nub":1,
                    "gox":1,
                    "json":1,
                    "pub":1,
                    "api":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PubNub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>It's easy to create a ready made Java Class for ingesting the live feed provided by Mt.Gox This is a work-in-progress post to show you how to access the PubNub Data Feed from Mt.Gox as shown in the Dev Console live feed!</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[1597375103]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>It's easy to create a ready made Java Class for ingesting the live feed provided by Mt.Gox This is a work-in-progress post to show you how to access the PubNub Data Feed from Mt.Gox as shown in the Dev Console live feed!</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubNub",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "readi":1,
                    "provid":1,
                    "post":1,
                    "nub":1,
                    "gox":2,
                    "show":1,
                    "easi":1,
                    "data":1,
                    "consol":1,
                    "pub":1,
                    "work":1,
                    "ingest":1,
                    "shown":1,
                    "dev":1,
                    "live":2,
                    "progress":1,
                    "feed":3,
                    "creat":1,
                    "made":1,
                    "access":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PubNub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<h3>Official Bitcoin Wiki JSON Streaming API</h3>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-1764504340]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<h3>Official Bitcoin Wiki JSON Streaming API</h3>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "bitcoin":1,
                    "offici":1,
                    "json":1,
                    "stream":1,
                    "wiki":1,
                    "api":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>We will be working from the Bitcoin wiki feed instructions provided by Bitcoin official Wiki: <a href=\"https://en.bitcoin.it/wiki/MtGox/API/Pubnub\"rel=\"nofollow\">https://en.bitcoin.it/wiki/MtGox/API/Pubnub</a> - continue reading below the screenshot to continue.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-631102903]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>We will be working from the Bitcoin wiki feed instructions provided by Bitcoin official Wiki: <a href=\"https://en.bitcoin.it/wiki/MtGox/API/Pubnub\"rel=\"nofollow\">https://en.bitcoin.it/wiki/MtGox/API/Pubnub</a> - continue reading below the screenshot to continue.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MtGox",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "read":1,
                    "provid":1,
                    "bitcoin":4,
                    "gox":2,
                    "offici":1,
                    "pubnub":2,
                    "rel":1,
                    "https":2,
                    "work":1,
                    "nofollow":1,
                    "screenshot":1,
                    "feed":1,
                    "wiki":4,
                    "api":2,
                    "href":1,
                    "instruct":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><img src=\"http://i.stack.imgur.com/ZZWZw.png\"alt=\"PubNub Developer Console\"/></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-1170538633]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><img src=\"http://i.stack.imgur.com/ZZWZw.png\"alt=\"PubNub Developer Console\"/></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "imgur":1,
                    "nub":1,
                    "png":1,
                    "img":1,
                    "consol":1,
                    "pub":1,
                    "zzwzw":1,
                    "alt":1,
                    "src":1,
                    "stack":1,
                    "develop":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To see the live real-time data feed we will be using, please checkout the following two links:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[505026940]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To see the live real-time data feed we will be using, please checkout the following two links:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "real":1,
                    "data":1,
                    "checkout":1,
                    "live":1,
                    "link":1,
                    "feed":1,
                    "time":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ol> \n <li>Live Feed Trade Events (Buy/Sell Feed): <a href=\"https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=dbf1dee9-4f2e-4a08-8cb7-748919a71b21&amp;origin=pubsub.pubnub.com&amp;ssl=true\"rel=\"nofollow\">https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=dbf1dee9-4f2e-4a08-8cb7-748919a71b21&amp;origin=pubsub.pubnub.com&amp;ssl=true</a></li> \n <li>Live Feed Ticker Updates (Price Changes): <a href=\"https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=d5f06780-30a8-4a48-a2f8-7ed181b4a13f&amp;origin=pubsub.pubnub.com&amp;ssl=true\"rel=\"nofollow\">https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=d5f06780-30a8-4a48-a2f8-7ed181b4a13f&amp;origin=pubsub.pubnub.com&amp;ssl=true</a></li> \n <li>Trade Lag Example: <a href=\"https://www.mtgox.com/lag.html\"rel=\"nofollow\">https://www.mtgox.com/lag.html</a></li> \n</ol>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[308609781]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ol> \n <li>Live Feed Trade Events (Buy/Sell Feed): <a href=\"https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=dbf1dee9-4f2e-4a08-8cb7-748919a71b21&amp;origin=pubsub.pubnub.com&amp;ssl=true\"rel=\"nofollow\">https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=dbf1dee9-4f2e-4a08-8cb7-748919a71b21&amp;origin=pubsub.pubnub.com&amp;ssl=true</a></li> \n <li>Live Feed Ticker Updates (Price Changes): <a href=\"https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=d5f06780-30a8-4a48-a2f8-7ed181b4a13f&amp;origin=pubsub.pubnub.com&amp;ssl=true\"rel=\"nofollow\">https://www.pubnub.com/console?sub=sub-c-50d56e1e-2fd9-11e3-a041-02ee2ddab7fe&amp;pub=demo&amp;channel=d5f06780-30a8-4a48-a2f8-7ed181b4a13f&amp;origin=pubsub.pubnub.com&amp;ssl=true</a></li> \n <li>Trade Lag Example: <a href=\"https://www.mtgox.com/lag.html\"rel=\"nofollow\">https://www.mtgox.com/lag.html</a></li> \n</ol>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "demo":4,
                    "channel":4,
                    "dee":2,
                    "event":1,
                    "ssl":4,
                    "price":1,
                    "pubnub":8,
                    "lag":3,
                    "updat":1,
                    "rel":3,
                    "mtgox":2,
                    "trade":2,
                    "https":6,
                    "consol":4,
                    "amp":16,
                    "pubsub":4,
                    "dbf":2,
                    "pub":4,
                    "buy":1,
                    "nofollow":3,
                    "live":2,
                    "origin":4,
                    "feed":3,
                    "true":4,
                    "html":2,
                    "ticker":1,
                    "href":3,
                    "ddab":4,
                    "www":6,
                    "sell":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<h2>PubNub Java SDK Docs</h2>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-3953396]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<h2>PubNub Java SDK Docs</h2>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubNub",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "nub":1,
                    "doc":1,
                    "pub":1,
                    "sdk":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PubNub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>We will be using the PubNub Java SDK Docs <a href=\"http://www.pubnub.com/docs/java/javase/overview/data-push.html\"rel=\"nofollow\">http://www.pubnub.com/docs/java/javase/overview/data-push.html</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-1083659217]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>We will be using the PubNub Java SDK Docs <a href=\"http://www.pubnub.com/docs/java/javase/overview/data-push.html\"rel=\"nofollow\">http://www.pubnub.com/docs/java/javase/overview/data-push.html</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubNub",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "nub":1,
                    "data":2,
                    "pubnub":2,
                    "push":2,
                    "rel":1,
                    "sdk":1,
                    "pub":1,
                    "doc":3,
                    "nofollow":1,
                    "overview":2,
                    "javas":2,
                    "html":2,
                    "href":1,
                    "http":2,
                    "www":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PubNub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Specifically we'll be using the <code>mtgox.subcribe(...)</code> instance method to focus our efforts which looks like the following:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-577980794]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Specifically we'll be using the <code>mtgox.subcribe(...)</code> instance method to focus our efforts which looks like the following:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "effort":1,
                    "subcrib":1,
                    "mtgox":1,
                    "code":2,
                    "focus":1,
                    "specif":1,
                    "instanc":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>Download JAR or Source: <a href=\"https://github.com/pubnub/mtgox\"rel=\"nofollow\">https://github.com/pubnub/mtgox</a></p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[1967113768]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>Download JAR or Source: <a href=\"https://github.com/pubnub/mtgox\"rel=\"nofollow\">https://github.com/pubnub/mtgox</a></p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":2,
                    "pubnub":2,
                    "rel":1,
                    "mtgox":2,
                    "https":2,
                    "blockquot":2,
                    "nofollow":1,
                    "href":1,
                    "sourc":1,
                    "jar":1,
                    "download":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"import org.json.JSONObject; import com.pubnub.mtgox.MtGox; import com.pubnub.mtgox.MtGoxCallback; public class PubnubMtGoxSample { public static void main(String[] args) { MtGox mtgx = new MtGox(); mtgx.subscribe(&quot;ticker.BTCUSD&quot;, new MtGoxCallback(){ @Override public void callback(JSONObject data) { try { String channel_name = data.getString(&quot;channel_name&quot;); String avg_value = data.getJSONObject(&quot;ticker&quot;).getJSONObject(&quot;avg&quot;).getString(&quot;value&quot;); System.out.println(channel_name + &quot; : &quot; + avg_value); } catch (Exception e) {} }}); } } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[20500700]-[1310170635]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"CompilationUnitNode",
                    "imports":[
                      {
                        "type":"ImportDeclarationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"org",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"json",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"JSONObject",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "isStatic":false,
                        "isOnDemand":false,
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ImportDeclarationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"com",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"pubnub",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"mtgox",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"MtGox",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "isStatic":false,
                        "isOnDemand":false,
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ImportDeclarationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"com",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"pubnub",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"mtgox",
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"IdentifierNode",
                              "name":"MtGoxCallback",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "isStatic":false,
                        "isOnDemand":false,
                        "comments":[
                          
                        ]
                      }
                    ],
                    "typeDeclarations":[
                      {
                        "type":"ClassDeclarationNode",
                        "modifiers":[
                          {
                            "type":"KeywordModifierNode",
                            "value":"public",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubnubMtGoxSample",
                          "comments":[
                            
                          ]
                        },
                        "body":{
                          "type":"ClassBodyNode",
                          "declarations":[
                            {
                              "type":"MethodDeclaratorNode",
                              "modifiers":[
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"public",
                                  "comments":[
                                    
                                  ]
                                },
                                {
                                  "type":"KeywordModifierNode",
                                  "value":"static",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "returnType":{
                                "type":"PrimitiveTypeNode",
                                "name":"void",
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"main",
                                "comments":[
                                  
                                ]
                              },
                              "parameters":{
                                "type":"FormalParametersNode",
                                "parameters":{
                                  "type":"FormalParameterDeclsNode",
                                  "modifiers":[
                                    
                                  ],
                                  "parameterType":{
                                    "type":"ArrayTypeNode",
                                    "typeNode":{
                                      "type":"ReferenceTypeNode",
                                      "ids":[
                                        {
                                          "type":"ParameterizedTypeNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"String",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "depth":[
                                      {
                                        "type":"ArrayDimensionNode",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ]
                                  },
                                  "nextDeclarator":{
                                    "type":"AdditionalFormalParameterDeclNode",
                                    "variableDeclarator":{
                                      "type":"VariableDeclaratorNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"args",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "arrayDepth":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                },
                                "comments":[
                                  
                                ]
                              },
                              "arrayReturnType":[
                                
                              ],
                              "body":{
                                "type":"BlockNode",
                                "statements":[
                                  {
                                    "type":"LocalVariableDeclarationStatementNode",
                                    "modifiers":[
                                      
                                    ],
                                    "declarators":{
                                      "type":"VariableDeclaratorsNode",
                                      "declarators":[
                                        {
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"mtgx",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ],
                                          "assignment":{
                                            "type":"VariableAssignmentNode",
                                            "variableAssignment":{
                                              "type":"VariableExpressionInitNode",
                                              "expression":{
                                                "type":"ConstructorCreatorNode",
                                                "creatorType":{
                                                  "type":"ReferenceTypeNode",
                                                  "ids":[
                                                    {
                                                      "type":"ParameterizedTypeNode",
                                                      "identifier":{
                                                        "type":"IdentifierNode",
                                                        "name":"MtGox",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "expressionArgs":{
                                                  "type":"ExpressionListNode",
                                                  "arguments":[
                                                    
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "varType":{
                                            "type":"ReferenceTypeNode",
                                            "ids":[
                                              {
                                                "type":"ParameterizedTypeNode",
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"MtGox",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          }
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "qualifiedIdentifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"mtgx",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"subscribe",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          {
                                            "type":"LiteralNode",
                                            "node":{
                                              "type":"StringLiteralNode",
                                              "valueRep":"\"ticker.BTCUSD\""
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"ConstructorCreatorNode",
                                            "creatorType":{
                                              "type":"ReferenceTypeNode",
                                              "ids":[
                                                {
                                                  "type":"ParameterizedTypeNode",
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"MtGoxCallback",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "expressionArgs":{
                                              "type":"ExpressionListNode",
                                              "arguments":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "classBody":{
                                              "type":"ClassBodyNode",
                                              "declarations":[
                                                {
                                                  "type":"MethodDeclaratorNode",
                                                  "modifiers":[
                                                    {
                                                      "type":"AnnotationNode",
                                                      "identifier":{
                                                        "type":"QualifiedIdentifierNode",
                                                        "identifiers":[
                                                          {
                                                            "type":"IdentifierNode",
                                                            "name":"Override",
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    {
                                                      "type":"KeywordModifierNode",
                                                      "value":"public",
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "returnType":{
                                                    "type":"PrimitiveTypeNode",
                                                    "name":"void",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"callback",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "parameters":{
                                                    "type":"FormalParametersNode",
                                                    "parameters":{
                                                      "type":"FormalParameterDeclsNode",
                                                      "modifiers":[
                                                        
                                                      ],
                                                      "parameterType":{
                                                        "type":"ReferenceTypeNode",
                                                        "ids":[
                                                          {
                                                            "type":"ParameterizedTypeNode",
                                                            "identifier":{
                                                              "type":"IdentifierNode",
                                                              "name":"JSONObject",
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "nextDeclarator":{
                                                        "type":"AdditionalFormalParameterDeclNode",
                                                        "variableDeclarator":{
                                                          "type":"VariableDeclaratorNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"data",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "arrayDepth":[
                                                            
                                                          ]
                                                        },
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "arrayReturnType":[
                                                    
                                                  ],
                                                  "body":{
                                                    "type":"BlockNode",
                                                    "statements":[
                                                      {
                                                        "type":"TryCatchStatementNode",
                                                        "block":{
                                                          "type":"BlockNode",
                                                          "statements":[
                                                            {
                                                              "type":"LocalVariableDeclarationStatementNode",
                                                              "modifiers":[
                                                                
                                                              ],
                                                              "declarators":{
                                                                "type":"VariableDeclaratorsNode",
                                                                "declarators":[
                                                                  {
                                                                    "type":"VariableDeclaratorNode",
                                                                    "identifier":{
                                                                      "type":"IdentifierNode",
                                                                      "name":"channel_name",
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    },
                                                                    "arrayDepth":[
                                                                      
                                                                    ],
                                                                    "assignment":{
                                                                      "type":"VariableAssignmentNode",
                                                                      "variableAssignment":{
                                                                        "type":"VariableExpressionInitNode",
                                                                        "expression":{
                                                                          "type":"MethodInvocationNode",
                                                                          "qualifiedIdentifier":{
                                                                            "type":"QualifiedIdentifierNode",
                                                                            "identifiers":[
                                                                              {
                                                                                "type":"IdentifierNode",
                                                                                "name":"data",
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "identifier":{
                                                                            "type":"IdentifierNode",
                                                                            "name":"getString",
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "args":{
                                                                            "type":"ExpressionListNode",
                                                                            "arguments":[
                                                                              {
                                                                                "type":"LiteralNode",
                                                                                "node":{
                                                                                  "type":"StringLiteralNode",
                                                                                  "valueRep":"\"channel_name\""
                                                                                },
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        }
                                                                      },
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    },
                                                                    "varType":{
                                                                      "type":"ReferenceTypeNode",
                                                                      "ids":[
                                                                        {
                                                                          "type":"ParameterizedTypeNode",
                                                                          "identifier":{
                                                                            "type":"IdentifierNode",
                                                                            "name":"String",
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    }
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "labels":[
                                                                
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            {
                                                              "type":"LocalVariableDeclarationStatementNode",
                                                              "modifiers":[
                                                                
                                                              ],
                                                              "declarators":{
                                                                "type":"VariableDeclaratorsNode",
                                                                "declarators":[
                                                                  {
                                                                    "type":"VariableDeclaratorNode",
                                                                    "identifier":{
                                                                      "type":"IdentifierNode",
                                                                      "name":"avg_value",
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    },
                                                                    "arrayDepth":[
                                                                      
                                                                    ],
                                                                    "assignment":{
                                                                      "type":"VariableAssignmentNode",
                                                                      "variableAssignment":{
                                                                        "type":"VariableExpressionInitNode",
                                                                        "expression":{
                                                                          "type":"BinaryExpressionNode",
                                                                          "operator":{
                                                                            "type":"OperatorNode",
                                                                            "symbol":".",
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "left":{
                                                                            "type":"BinaryExpressionNode",
                                                                            "operator":{
                                                                              "type":"OperatorNode",
                                                                              "symbol":".",
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            },
                                                                            "left":{
                                                                              "type":"MethodInvocationNode",
                                                                              "qualifiedIdentifier":{
                                                                                "type":"QualifiedIdentifierNode",
                                                                                "identifiers":[
                                                                                  {
                                                                                    "type":"IdentifierNode",
                                                                                    "name":"data",
                                                                                    "comments":[
                                                                                      
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "identifier":{
                                                                                "type":"IdentifierNode",
                                                                                "name":"getJSONObject",
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "args":{
                                                                                "type":"ExpressionListNode",
                                                                                "arguments":[
                                                                                  {
                                                                                    "type":"LiteralNode",
                                                                                    "node":{
                                                                                      "type":"StringLiteralNode",
                                                                                      "valueRep":"\"ticker\""
                                                                                    },
                                                                                    "comments":[
                                                                                      
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            },
                                                                            "right":{
                                                                              "type":"MethodInvocationNode",
                                                                              "identifier":{
                                                                                "type":"IdentifierNode",
                                                                                "name":"getJSONObject",
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "args":{
                                                                                "type":"ExpressionListNode",
                                                                                "arguments":[
                                                                                  {
                                                                                    "type":"LiteralNode",
                                                                                    "node":{
                                                                                      "type":"StringLiteralNode",
                                                                                      "valueRep":"\"avg\""
                                                                                    },
                                                                                    "comments":[
                                                                                      
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "comments":[
                                                                                  
                                                                                ]
                                                                              },
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            },
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "right":{
                                                                            "type":"MethodInvocationNode",
                                                                            "identifier":{
                                                                              "type":"IdentifierNode",
                                                                              "name":"getString",
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            },
                                                                            "args":{
                                                                              "type":"ExpressionListNode",
                                                                              "arguments":[
                                                                                {
                                                                                  "type":"LiteralNode",
                                                                                  "node":{
                                                                                    "type":"StringLiteralNode",
                                                                                    "valueRep":"\"value\""
                                                                                  },
                                                                                  "comments":[
                                                                                    
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            },
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        }
                                                                      },
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    },
                                                                    "varType":{
                                                                      "type":"ReferenceTypeNode",
                                                                      "ids":[
                                                                        {
                                                                          "type":"ParameterizedTypeNode",
                                                                          "identifier":{
                                                                            "type":"IdentifierNode",
                                                                            "name":"String",
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          },
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    }
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "labels":[
                                                                
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            {
                                                              "type":"ExpressionStatement",
                                                              "expression":{
                                                                "type":"MethodInvocationNode",
                                                                "qualifiedIdentifier":{
                                                                  "type":"QualifiedIdentifierNode",
                                                                  "identifiers":[
                                                                    {
                                                                      "type":"IdentifierNode",
                                                                      "name":"System",
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type":"IdentifierNode",
                                                                      "name":"out",
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "identifier":{
                                                                  "type":"IdentifierNode",
                                                                  "name":"println",
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "args":{
                                                                  "type":"ExpressionListNode",
                                                                  "arguments":[
                                                                    {
                                                                      "type":"BinaryExpressionNode",
                                                                      "operator":{
                                                                        "type":"OperatorNode",
                                                                        "symbol":"+",
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      },
                                                                      "left":{
                                                                        "type":"BinaryExpressionNode",
                                                                        "operator":{
                                                                          "type":"OperatorNode",
                                                                          "symbol":"+",
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "left":{
                                                                          "type":"QualifiedIdentifierNode",
                                                                          "identifiers":[
                                                                            {
                                                                              "type":"IdentifierNode",
                                                                              "name":"channel_name",
                                                                              "comments":[
                                                                                
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "right":{
                                                                          "type":"LiteralNode",
                                                                          "node":{
                                                                            "type":"StringLiteralNode",
                                                                            "valueRep":"\" : \""
                                                                          },
                                                                          "comments":[
                                                                            
                                                                          ]
                                                                        },
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      },
                                                                      "right":{
                                                                        "type":"QualifiedIdentifierNode",
                                                                        "identifiers":[
                                                                          {
                                                                            "type":"IdentifierNode",
                                                                            "name":"avg_value",
                                                                            "comments":[
                                                                              
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "comments":[
                                                                          
                                                                        ]
                                                                      },
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "labels":[
                                                                
                                                              ]
                                                            }
                                                          ],
                                                          "labels":[
                                                            
                                                          ],
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "catches":[
                                                          {
                                                            "type":"CatchClauseNode",
                                                            "modifiers":[
                                                              
                                                            ],
                                                            "catchType":{
                                                              "type":"CatchTypeNode",
                                                              "identifiers":[
                                                                {
                                                                  "type":"QualifiedIdentifierNode",
                                                                  "identifiers":[
                                                                    {
                                                                      "type":"IdentifierNode",
                                                                      "name":"Exception",
                                                                      "comments":[
                                                                        
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                }
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "identifier":{
                                                              "type":"IdentifierNode",
                                                              "name":"e",
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "block":{
                                                              "type":"BlockNode",
                                                              "statements":[
                                                                
                                                              ],
                                                              "labels":[
                                                                
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "labels":[
                                                          
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    ],
                                                    "labels":[
                                                      
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "labels":[
                          
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  }
                ]
              },
              "rawText":"import org.json.JSONObject; import com.pubnub.mtgox.MtGox; import com.pubnub.mtgox.MtGoxCallback; public class PubnubMtGoxSample { public static void main(String[] args) { MtGox mtgx = new MtGox(); mtgx.subscribe(\"ticker.BTCUSD\", new MtGoxCallback(){ @Override public void callback(JSONObject data) { try { String channel_name = data.getString(\"channel_name\"); String avg_value = data.getJSONObject(\"ticker\").getJSONObject(\"avg\").getString(\"value\"); System.out.println(channel_name + \" : \"+ avg_value); } catch (Exception e) {} }}); } } ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "gox":6,
                    "channel":3,
                    "system":1,
                    "subscrib":1,
                    "json":1,
                    "sampl":1,
                    "mtgx":2,
                    "data":3,
                    "pubnub":3,
                    "avg":3,
                    "overrid":1,
                    "mtgox":2,
                    "main":1,
                    "callback":3,
                    "println":1,
                    "jsonobject":4,
                    "org":1,
                    "ticker":2,
                    "arg":1,
                    "btcusd":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"org",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"json",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JSONObject",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"com",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"pubnub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"mtgox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"com",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"pubnub",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"mtgox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGoxCallback",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGoxCallback",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"JSONObject",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"data",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getString",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"channel_name\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getString",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"value\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"data",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getJSONObject",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"ticker\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getJSONObject",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"avg\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"mtgx",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"subscribe",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"ticker.BTCUSD\""
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"ConstructorCreatorNode",
                            "creatorType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"MtGoxCallback",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "expressionArgs":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "classBody":{
                              "type":"ClassBodyNode",
                              "declarations":[
                                {
                                  "type":"MethodDeclaratorNode",
                                  "modifiers":[
                                    {
                                      "type":"AnnotationNode",
                                      "identifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"Override",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"KeywordModifierNode",
                                      "value":"public",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "returnType":{
                                    "type":"PrimitiveTypeNode",
                                    "name":"void",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"callback",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "parameters":{
                                    "type":"FormalParametersNode",
                                    "parameters":{
                                      "type":"FormalParameterDeclsNode",
                                      "modifiers":[
                                        
                                      ],
                                      "parameterType":{
                                        "type":"ReferenceTypeNode",
                                        "ids":[
                                          {
                                            "type":"ParameterizedTypeNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"JSONObject",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "nextDeclarator":{
                                        "type":"AdditionalFormalParameterDeclNode",
                                        "variableDeclarator":{
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"data",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "arrayReturnType":[
                                    
                                  ],
                                  "body":{
                                    "type":"BlockNode",
                                    "statements":[
                                      {
                                        "type":"TryCatchStatementNode",
                                        "block":{
                                          "type":"BlockNode",
                                          "statements":[
                                            {
                                              "type":"LocalVariableDeclarationStatementNode",
                                              "modifiers":[
                                                
                                              ],
                                              "declarators":{
                                                "type":"VariableDeclaratorsNode",
                                                "declarators":[
                                                  {
                                                    "type":"VariableDeclaratorNode",
                                                    "identifier":{
                                                      "type":"IdentifierNode",
                                                      "name":"channel_name",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "arrayDepth":[
                                                      
                                                    ],
                                                    "assignment":{
                                                      "type":"VariableAssignmentNode",
                                                      "variableAssignment":{
                                                        "type":"VariableExpressionInitNode",
                                                        "expression":{
                                                          "type":"MethodInvocationNode",
                                                          "qualifiedIdentifier":{
                                                            "type":"QualifiedIdentifierNode",
                                                            "identifiers":[
                                                              {
                                                                "type":"IdentifierNode",
                                                                "name":"data",
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"getString",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "args":{
                                                            "type":"ExpressionListNode",
                                                            "arguments":[
                                                              {
                                                                "type":"LiteralNode",
                                                                "node":{
                                                                  "type":"StringLiteralNode",
                                                                  "valueRep":"\"channel_name\""
                                                                },
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "varType":{
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "labels":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            {
                                              "type":"LocalVariableDeclarationStatementNode",
                                              "modifiers":[
                                                
                                              ],
                                              "declarators":{
                                                "type":"VariableDeclaratorsNode",
                                                "declarators":[
                                                  {
                                                    "type":"VariableDeclaratorNode",
                                                    "identifier":{
                                                      "type":"IdentifierNode",
                                                      "name":"avg_value",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "arrayDepth":[
                                                      
                                                    ],
                                                    "assignment":{
                                                      "type":"VariableAssignmentNode",
                                                      "variableAssignment":{
                                                        "type":"VariableExpressionInitNode",
                                                        "expression":{
                                                          "type":"BinaryExpressionNode",
                                                          "operator":{
                                                            "type":"OperatorNode",
                                                            "symbol":".",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "left":{
                                                            "type":"BinaryExpressionNode",
                                                            "operator":{
                                                              "type":"OperatorNode",
                                                              "symbol":".",
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "left":{
                                                              "type":"MethodInvocationNode",
                                                              "qualifiedIdentifier":{
                                                                "type":"QualifiedIdentifierNode",
                                                                "identifiers":[
                                                                  {
                                                                    "type":"IdentifierNode",
                                                                    "name":"data",
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "identifier":{
                                                                "type":"IdentifierNode",
                                                                "name":"getJSONObject",
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "args":{
                                                                "type":"ExpressionListNode",
                                                                "arguments":[
                                                                  {
                                                                    "type":"LiteralNode",
                                                                    "node":{
                                                                      "type":"StringLiteralNode",
                                                                      "valueRep":"\"ticker\""
                                                                    },
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "right":{
                                                              "type":"MethodInvocationNode",
                                                              "identifier":{
                                                                "type":"IdentifierNode",
                                                                "name":"getJSONObject",
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "args":{
                                                                "type":"ExpressionListNode",
                                                                "arguments":[
                                                                  {
                                                                    "type":"LiteralNode",
                                                                    "node":{
                                                                      "type":"StringLiteralNode",
                                                                      "valueRep":"\"avg\""
                                                                    },
                                                                    "comments":[
                                                                      
                                                                    ]
                                                                  }
                                                                ],
                                                                "comments":[
                                                                  
                                                                ]
                                                              },
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "right":{
                                                            "type":"MethodInvocationNode",
                                                            "identifier":{
                                                              "type":"IdentifierNode",
                                                              "name":"getString",
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "args":{
                                                              "type":"ExpressionListNode",
                                                              "arguments":[
                                                                {
                                                                  "type":"LiteralNode",
                                                                  "node":{
                                                                    "type":"StringLiteralNode",
                                                                    "valueRep":"\"value\""
                                                                  },
                                                                  "comments":[
                                                                    
                                                                  ]
                                                                }
                                                              ],
                                                              "comments":[
                                                                
                                                              ]
                                                            },
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "varType":{
                                                      "type":"ReferenceTypeNode",
                                                      "ids":[
                                                        {
                                                          "type":"ParameterizedTypeNode",
                                                          "identifier":{
                                                            "type":"IdentifierNode",
                                                            "name":"String",
                                                            "comments":[
                                                              
                                                            ]
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "labels":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            {
                                              "type":"ExpressionStatement",
                                              "expression":{
                                                "type":"MethodInvocationNode",
                                                "qualifiedIdentifier":{
                                                  "type":"QualifiedIdentifierNode",
                                                  "identifiers":[
                                                    {
                                                      "type":"IdentifierNode",
                                                      "name":"System",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    {
                                                      "type":"IdentifierNode",
                                                      "name":"out",
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"println",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "args":{
                                                  "type":"ExpressionListNode",
                                                  "arguments":[
                                                    {
                                                      "type":"BinaryExpressionNode",
                                                      "operator":{
                                                        "type":"OperatorNode",
                                                        "symbol":"+",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "left":{
                                                        "type":"BinaryExpressionNode",
                                                        "operator":{
                                                          "type":"OperatorNode",
                                                          "symbol":"+",
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "left":{
                                                          "type":"QualifiedIdentifierNode",
                                                          "identifiers":[
                                                            {
                                                              "type":"IdentifierNode",
                                                              "name":"channel_name",
                                                              "comments":[
                                                                
                                                              ]
                                                            }
                                                          ],
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "right":{
                                                          "type":"LiteralNode",
                                                          "node":{
                                                            "type":"StringLiteralNode",
                                                            "valueRep":"\" : \""
                                                          },
                                                          "comments":[
                                                            
                                                          ]
                                                        },
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "right":{
                                                        "type":"QualifiedIdentifierNode",
                                                        "identifiers":[
                                                          {
                                                            "type":"IdentifierNode",
                                                            "name":"avg_value",
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "labels":[
                                                
                                              ]
                                            }
                                          ],
                                          "labels":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "catches":[
                                          {
                                            "type":"CatchClauseNode",
                                            "modifiers":[
                                              
                                            ],
                                            "catchType":{
                                              "type":"CatchTypeNode",
                                              "identifiers":[
                                                {
                                                  "type":"QualifiedIdentifierNode",
                                                  "identifiers":[
                                                    {
                                                      "type":"IdentifierNode",
                                                      "name":"Exception",
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"e",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "block":{
                                              "type":"BlockNode",
                                              "statements":[
                                                
                                              ],
                                              "labels":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "labels":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"out",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"println",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"BinaryExpressionNode",
                              "operator":{
                                "type":"OperatorNode",
                                "symbol":"+",
                                "comments":[
                                  
                                ]
                              },
                              "left":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"channel_name",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "right":{
                                "type":"LiteralNode",
                                "node":{
                                  "type":"StringLiteralNode",
                                  "valueRep":"\" : \""
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"avg_value",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"mtgx",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"ConstructorCreatorNode",
                            "creatorType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"MtGox",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "expressionArgs":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"MtGox",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"channel_name",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"data",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"getString",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"StringLiteralNode",
                                    "valueRep":"\"channel_name\""
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"String",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"args",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"avg_value",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":".",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"BinaryExpressionNode",
                              "operator":{
                                "type":"OperatorNode",
                                "symbol":".",
                                "comments":[
                                  
                                ]
                              },
                              "left":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"data",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"getJSONObject",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"LiteralNode",
                                      "node":{
                                        "type":"StringLiteralNode",
                                        "valueRep":"\"ticker\""
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "right":{
                                "type":"MethodInvocationNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"getJSONObject",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"LiteralNode",
                                      "node":{
                                        "type":"StringLiteralNode",
                                        "valueRep":"\"avg\""
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"getString",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  {
                                    "type":"LiteralNode",
                                    "node":{
                                      "type":"StringLiteralNode",
                                      "valueRep":"\"value\""
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"String",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"data",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<blockquote> \n <p>See Full MtGox Example with Java Source Code - <a href=\"https://github.com/pubnub/mtgox/blob/master/java/examples/PubnubMtGoxSample.java\"rel=\"nofollow\">https://github.com/pubnub/mtgox/blob/master/java/examples/PubnubMtGoxSample.java</a></p> \n</blockquote>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-162472477]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<blockquote> \n <p>See Full MtGox Example with Java Source Code - <a href=\"https://github.com/pubnub/mtgox/blob/master/java/examples/PubnubMtGoxSample.java\"rel=\"nofollow\">https://github.com/pubnub/mtgox/blob/master/java/examples/PubnubMtGoxSample.java</a></p> \n</blockquote>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MtGox",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":2,
                    "gox":3,
                    "master":2,
                    "sampl":2,
                    "exampl":2,
                    "pubnub":4,
                    "full":1,
                    "rel":1,
                    "mtgox":2,
                    "https":2,
                    "blockquot":2,
                    "code":1,
                    "nofollow":1,
                    "href":1,
                    "sourc":1,
                    "blob":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MtGox",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To compile the example got to <a href=\"https://github.com/pubnub/mtgox/tree/master/java\"rel=\"nofollow\">https://github.com/pubnub/mtgox/tree/master/java</a> and run</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[353955098]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To compile the example got to <a href=\"https://github.com/pubnub/mtgox/tree/master/java\"rel=\"nofollow\">https://github.com/pubnub/mtgox/tree/master/java</a> and run</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "github":2,
                    "master":2,
                    "run":1,
                    "pubnub":2,
                    "rel":1,
                    "mtgox":2,
                    "https":2,
                    "nofollow":1,
                    "tree":2,
                    "compil":1,
                    "href":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"javac -cp Pubnub-MtGox.jar:libs/json-20090211.jar examples/PubnubMtGoxSample.java "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[20500700]-[-189500713]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"javac -cp Pubnub-MtGox.jar:libs/json-20090211.jar examples/PubnubMtGoxSample.java "
                  }
                ]
              },
              "rawText":"javac -cp Pubnub-MtGox.jar:libs/json-20090211.jar examples/PubnubMtGoxSample.java ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "gox":2,
                    "json":1,
                    "sampl":1,
                    "exampl":1,
                    "pubnub":2,
                    "lib":1,
                    "jar":2,
                    "javac":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>And then to RUN:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[20500700]-[-370110459]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>And then to RUN:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "run":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"java -cp .:examples/:Pubnub-MtGox.jar:Pubnub-StandardEdition-3.5.6.jar:libs/json-20090211.jar:libs/bcprov-jdk15on-1.47.jar:libs/slf4j-api-1.7.5.jar:libs/slf4j-nop-1.7.5.jar PubnubMtGoxSample "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[20500700]-[-1300018555]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"java -cp .:examples/:Pubnub-MtGox.jar:Pubnub-"
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"StandardEdition",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":"-3.5.6.jar:libs/json-20090211.jar:libs/bcprov-jdk15on-1.47.jar:libs/slf4j-api-1.7.5.jar:libs/slf4j-nop-1.7.5.jar "
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PubnubMtGoxSample",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"java -cp .:examples/:Pubnub-MtGox.jar:Pubnub-StandardEdition-3.5.6.jar:libs/json-20090211.jar:libs/bcprov-jdk15on-1.47.jar:libs/slf4j-api-1.7.5.jar:libs/slf4j-nop-1.7.5.jar PubnubMtGoxSample ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "gox":2,
                    "standard":1,
                    "json":1,
                    "sampl":1,
                    "nop":1,
                    "exampl":1,
                    "slf":2,
                    "pubnub":3,
                    "edit":1,
                    "bcprov":1,
                    "lib":4,
                    "api":1,
                    "jar":6,
                    "jdk":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"StandardEdition",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PubnubMtGoxSample",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}