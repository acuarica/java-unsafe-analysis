{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":16014799,
    "title":"How to create array of size greater than integer max",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":22840998,
        "postId":16014799,
        "creationDate":"2013-04-15",
        "score":16,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1011995,
          "displayName":"Daniel Fischer",
          "reputation":118999
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"&quot;I was trying to get all primes before 600851475143.&quot; That's totally the wrong approach for that Project Euler problem."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22840998]-[-1851401969]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"&quot;I was trying to get all primes before 600851475143.&quot; That's totally the wrong approach for that Project Euler problem."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "wrong":1,
                      "project":1,
                      "problem":1,
                      "total":1,
                      "euler":1,
                      "approach":1,
                      "quot":2,
                      "prime":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22841007,
        "postId":16014799,
        "creationDate":"2013-04-15",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2161955,
          "displayName":"Black Cloud",
          "reputation":244
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"you can use vector."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22841007]-[-1596483743]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"you can use vector."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "vector":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22841046,
        "postId":16014799,
        "creationDate":"2013-04-15",
        "score":7,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":497106,
          "displayName":"Patashu",
          "reputation":14293
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I would suggest that if your solution requires you to make 600 BILLION array entries, then you need to take a new approach."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22841046]-[1443920215]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I would suggest that if your solution requires you to make 600 BILLION array entries, then you need to take a new approach."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "requir":1,
                      "suggest":1,
                      "array":1,
                      "entri":1,
                      "billion":1,
                      "make":1,
                      "approach":1,
                      "solut":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22841061,
        "postId":16014799,
        "creationDate":"2013-04-15",
        "score":5,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":829571,
          "displayName":"assylias",
          "reputation":118960
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Ashok Vector being backed by an array, I don't see how that will make a difference."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22841061]-[-971331086]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Ashok Vector being backed by an array, I don't see how that will make a difference."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Ashok",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "differ":1,
                      "vector":1,
                      "array":1,
                      "back":1,
                      "make":1,
                      "ashok":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22841103,
        "postId":16014799,
        "creationDate":"2013-04-15",
        "score":2,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":830964,
          "displayName":"Deepak Bala",
          "reputation":6731
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Ashok Vectors are backed by arrays and are synchronized. Wont help."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22841103]-[812617907]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Ashok Vectors are backed by arrays and are synchronized. Wont help."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Ashok",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "vector":1,
                      "array":1,
                      "back":1,
                      "wont":1,
                      "ashok":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22870094,
        "postId":16014799,
        "creationDate":"2013-04-16",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1405433,
          "displayName":"S Kr",
          "reputation":588
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"+1 : vectors can't be used."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22870094]-[623171687]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"+1 : vectors can't be used."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "vector":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":22987663,
        "postId":16014799,
        "creationDate":"2013-04-19",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2210309,
          "displayName":"Seb",
          "reputation":399
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"If this is to solve the euler problem, it might be easier to just find the factors first and THEN figure out the primes rather than vice versa. You only have to find the factors between 2 and sqrt(600851475143), which makes this much more doable"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[16014799-cu22987663]-[-698162746]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"If this is to solve the euler problem, it might be easier to just find the factors first and THEN figure out the primes rather than vice versa. You only have to find the factors between 2 and sqrt(600851475143), which makes this much more doable"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "solv":1,
                      "find":2,
                      "problem":1,
                      "vice":1,
                      "doabl":1,
                      "factor":2,
                      "euler":1,
                      "easier":1,
                      "sqrt":1,
                      "versa":1,
                      "figur":1,
                      "make":1,
                      "prime":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "algorithm",
      "data-structures"
    ],
    "creationDate":"2013-04-15",
    "lastActivityDate":"2013-09-26",
    "lastEditDate":"2013-04-15",
    "closedDate":"2015-02-07",
    "score":7,
    "viewCount":2562,
    "owner":{
      "type":"StackOverflowUser",
      "id":1405433,
      "displayName":"S Kr",
      "reputation":588
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I was trying to get all primes before 600851475143. I was using Sieve of Eratosthenes for this. This requires me to create a boolean array of that huge size. Bad idea, you can run out of memory. Any other way. I tried using a string, using each index with values 0 &amp; 1 to represent true or false. but indexOf method too returns int.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16014799]-[-1224921112]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I was trying to get all primes before 600851475143. I was using Sieve of Eratosthenes for this. This requires me to create a boolean array of that huge size. Bad idea, you can run out of memory. Any other way. I tried using a string, using each index with values 0 &amp; 1 to represent true or false. but indexOf method too returns int.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"indexOf",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "huge":1,
                  "eratosthen":1,
                  "size":1,
                  "return":1,
                  "requir":1,
                  "run":1,
                  "idea":1,
                  "bad":1,
                  "amp":1,
                  "array":1,
                  "valu":1,
                  "true":1,
                  "fals":1,
                  "creat":1,
                  "siev":1,
                  "repres":1,
                  "prime":1,
                  "index":2,
                  "memori":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Next i am using 2d array for my problem. Any other better way to store such a huge array?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[16014799]-[-2097880450]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Next i am using 2d array for my problem. Any other better way to store such a huge array?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "store":1,
                  "huge":1,
                  "problem":1,
                  "array":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":16014906,
      "questionId":16014799,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22841221,
          "postId":16014906,
          "creationDate":"2013-04-15",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":829571,
            "displayName":"assylias",
            "reputation":118960
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"He would need 2^39 bits, not 39."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014906-cu22841221]-[1297463151]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"He would need 2^39 bits, not 39."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "bit":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22841222,
          "postId":16014906,
          "creationDate":"2013-04-15",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1011995,
            "displayName":"Daniel Fischer",
            "reputation":118999
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The OP needs 600851475143 bit flags (or half that many if skipping even numbers, a third if also skipping multiples of 3, a few less if multiples of more small primes are skipped). That would still be more entries than can be indexed in a `BitSet`."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014906-cu22841222]-[-1028395283]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The OP needs 600851475143 bit flags (or half that many if skipping even numbers, a third if also skipping multiples of 3, a few less if multiples of more small primes are skipped). That would still be more entries than can be indexed in a `BitSet`."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"BitSet",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "number":1,
                        "bit":2,
                        "set":1,
                        "skip":3,
                        "half":1,
                        "small":1,
                        "entri":1,
                        "flag":1,
                        "multipl":2,
                        "prime":1,
                        "index":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"BitSet",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22841376,
          "postId":16014906,
          "creationDate":"2013-04-15",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":207652,
            "displayName":"Stephan",
            "reputation":5476
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@assylias yeah ur right"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014906-cu22841376]-[-1050877811]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@assylias yeah ur right"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "assylia":1,
                        "yeah":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-04-15",
      "lastActivityDate":"2013-04-15",
      "lastEditDate":"2013-04-15",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":894565,
        "displayName":"Jatin",
        "reputation":10274
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Use <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/BitSet.html\"rel=\"nofollow\">BitSet</a>. You can then set bit any index element. 600851475143 is <code>2^39</code> thus taking only 39 bits internally (actually in reality it will occupy 64 bits as it uses long).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014906]-[1426159486]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Use <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/BitSet.html\"rel=\"nofollow\">BitSet</a>. You can then set bit any index element. 600851475143 is <code>2^39</code> thus taking only 39 bits internally (actually in reality it will occupy 64 bits as it uses long).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "bit":5,
                    "util":1,
                    "set":3,
                    "rel":1,
                    "oracl":1,
                    "realiti":1,
                    "doc":2,
                    "element":1,
                    "code":2,
                    "nofollow":1,
                    "take":1,
                    "javas":1,
                    "api":1,
                    "html":1,
                    "href":1,
                    "http":1,
                    "occupi":1,
                    "intern":1,
                    "index":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You can infact move upto <code>2^63</code> which is massive for most purposes</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014906]-[-1067793348]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You can infact move upto <code>2^63</code> which is massive for most purposes</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "move":1,
                    "massiv":1,
                    "code":2,
                    "upto":1,
                    "infact":1,
                    "purpos":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":16017377,
      "questionId":16014799,
      "comments":[
        
      ],
      "creationDate":"2013-04-15",
      "lastActivityDate":"2013-04-15",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":352131,
        "displayName":"Durandal",
        "reputation":10490
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Its not really practical to remember for each number if it was a prime or not for such a large amount (the sieve is a very slow approach for large numbers in general).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16017377]-[19355127]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Its not really practical to remember for each number if it was a prime or not for such a large amount (the sieve is a very slow approach for large numbers in general).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "number":2,
                    "slow":1,
                    "amount":1,
                    "rememb":1,
                    "larg":2,
                    "general":1,
                    "approach":1,
                    "practic":1,
                    "siev":1,
                    "prime":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>From this <a href=\"http://primes.utm.edu/howmany.shtml\"rel=\"nofollow\">link</a> you get an idea how many primes there are to be expected smaller than X. For your 600 billion range you can expect roughly 20 billion primes to exist within that range. Storing them as long[] would require about 160GB of memory... that notably more than the suggested 70GB for storing a single bit for each number, half if you exclude even numbers (2 is the only even prime).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16017377]-[332444628]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>From this <a href=\"http://primes.utm.edu/howmany.shtml\"rel=\"nofollow\">link</a> you get an idea how many primes there are to be expected smaller than X. For your 600 billion range you can expect roughly 20 billion primes to exist within that range. Storing them as long[] would require about 160GB of memory... that notably more than the suggested 70GB for storing a single bit for each number, half if you exclude even numbers (2 is the only even prime).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "number":2,
                    "singl":1,
                    "bit":1,
                    "exist":1,
                    "rang":2,
                    "requir":1,
                    "suggest":1,
                    "idea":1,
                    "rel":1,
                    "store":2,
                    "half":1,
                    "shtml":1,
                    "nofollow":1,
                    "billion":2,
                    "utm":1,
                    "howmani":1,
                    "expect":2,
                    "link":1,
                    "rough":1,
                    "smaller":1,
                    "href":1,
                    "notabl":1,
                    "http":1,
                    "prime":4,
                    "exclud":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>For a desktop computer 35GB in memory may be a bit much, but a good workstation can have that much RAM. I would try a two-dimensional array with bit shifting/masking. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16017377]-[1868010249]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>For a desktop computer 35GB in memory may be a bit much, but a good workstation can have that much RAM. I would try a two-dimensional array with bit shifting/masking. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "desktop":1,
                    "workstat":1,
                    "bit":2,
                    "mask":1,
                    "ram":1,
                    "good":1,
                    "shift":1,
                    "array":1,
                    "comput":1,
                    "dimension":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I still would expect your sieve code to run a <em>considerable</em> amount of time (something from days to years). I suggest you investigate more advanced prime detection methods than sieve.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16017377]-[401759743]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I still would expect your sieve code to run a <em>considerable</em> amount of time (something from days to years). I suggest you investigate more advanced prime detection methods than sieve.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "advanc":1,
                    "consider":1,
                    "detect":1,
                    "suggest":1,
                    "run":1,
                    "year":1,
                    "investig":1,
                    "amount":1,
                    "code":1,
                    "expect":1,
                    "time":1,
                    "siev":2,
                    "day":1,
                    "prime":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":19039532,
      "questionId":16014799,
      "comments":[
        
      ],
      "creationDate":"2013-09-26",
      "lastActivityDate":"2013-09-26",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2555491,
        "displayName":"Korbi",
        "reputation":768
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>You could use HotSpot's internal sun.misc.Unsafe API to allocate a bigger array. <a href=\"http://www.omsn.de/blog/big-arrays-in-java\"rel=\"nofollow\">I wrote a blogpost how to simulate an array with it</a> However, it's not an official Java API, so it qualifies as a hack.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[19039532]-[-1226838037]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>You could use HotSpot's internal sun.misc.Unsafe API to allocate a bigger array. <a href=\"http://www.omsn.de/blog/big-arrays-in-java\"rel=\"nofollow\">I wrote a blogpost how to simulate an array with it</a> However, it's not an official Java API, so it qualifies as a hack.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"HotSpot",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "omsn":1,
                    "alloc":1,
                    "offici":1,
                    "big":1,
                    "sun":1,
                    "rel":1,
                    "wrote":1,
                    "simul":1,
                    "array":3,
                    "qualifi":1,
                    "blogpost":1,
                    "blog":1,
                    "nofollow":1,
                    "misc":1,
                    "spot":1,
                    "hack":1,
                    "hot":1,
                    "api":2,
                    "unsaf":1,
                    "bigger":1,
                    "href":1,
                    "http":1,
                    "intern":1,
                    "www":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"HotSpot",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":16014953,
      "questionId":16014799,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22841277,
          "postId":16014953,
          "creationDate":"2013-04-15",
          "score":6,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":829571,
            "displayName":"assylias",
            "reputation":118960
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It is feasible, but probably not realistic!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014953-cu22841277]-[-1520006258]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It is feasible, but probably not realistic!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "feasibl":1,
                        "realist":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22841339,
          "postId":16014953,
          "creationDate":"2013-04-15",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2216369,
            "displayName":"Alan",
            "reputation":2324
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Well, I should probably have clarify that while possible, it is not feasible (aka practical) with anything less than a seriously highend computer (or possibly supercomputer)."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014953-cu22841339]-[-855166305]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Well, I should probably have clarify that while possible, it is not feasible (aka practical) with anything less than a seriously highend computer (or possibly supercomputer)."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "supercomput":1,
                        "highend":1,
                        "feasibl":1,
                        "possibl":1,
                        "aka":1,
                        "comput":1,
                        "practic":1,
                        "clarifi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22873423,
          "postId":16014953,
          "creationDate":"2013-04-16",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1405433,
            "displayName":"S Kr",
            "reputation":588
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I don't want to use a library, so even though EWAHCompressedBitmap is very promising, i will use BitSets of size 32 mb each. And add lazy loading to it. Looking for better option. The tradition way for this problem is too slow, but does the job."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[16014953-cu22873423]-[-2114736788]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I don't want to use a library, so even though EWAHCompressedBitmap is very promising, i will use BitSets of size 32 mb each. And add lazy loading to it. Looking for better option. The tradition way for this problem is too slow, but does the job."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"EWAHCompressedBitmap",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"BitSets",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "slow":1,
                        "bit":1,
                        "size":1,
                        "tradit":1,
                        "problem":1,
                        "promis":1,
                        "set":1,
                        "option":1,
                        "job":1,
                        "lazi":1,
                        "load":1,
                        "librari":1,
                        "bitmap":1,
                        "ewahcompress":1,
                        "add":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"EWAHCompressedBitmap",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"BitSets",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-04-15",
      "lastActivityDate":"2013-04-15",
      "score":7,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2216369,
        "displayName":"Alan",
        "reputation":2324
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The memory requirement for 600851475143 booleans is at best 70Gb. This isn't feasible. You need to either use compression as suggested by Stephan, or find a different algorithm for calculating the primes.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014953]-[-400843388]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The memory requirement for 600851475143 booleans is at best 70Gb. This isn't feasible. You need to either use compression as suggested by Stephan, or find a different algorithm for calculating the primes.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "requir":1,
                    "suggest":1,
                    "calcul":1,
                    "feasibl":1,
                    "stephan":1,
                    "boolean":1,
                    "algorithm":1,
                    "compress":1,
                    "isn":1,
                    "prime":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":16014915,
      "questionId":16014799,
      "comments":[
        
      ],
      "creationDate":"2013-04-15",
      "lastActivityDate":"2013-04-19",
      "lastEditDate":"2013-04-19",
      "score":6,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":207652,
        "displayName":"Stephan",
        "reputation":5476
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I had a similar problem and i used a bit set (basically set 1 or 0 for the desired offset in order) and i recomend using <a href=\"https://code.google.com/p/javaewah/\"rel=\"nofollow\">EWAHCompressedBitmap</a> it will also compress your bit set</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014915]-[-1110019877]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I had a similar problem and i used a bit set (basically set 1 or 0 for the desired offset in order) and i recomend using <a href=\"https://code.google.com/p/javaewah/\"rel=\"nofollow\">EWAHCompressedBitmap</a> it will also compress your bit set</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"EWAHCompressedBitmap",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "bit":2,
                    "googl":1,
                    "similar":1,
                    "recomend":1,
                    "problem":1,
                    "set":3,
                    "rel":1,
                    "https":1,
                    "bitmap":1,
                    "ewahcompress":1,
                    "code":1,
                    "offset":1,
                    "nofollow":1,
                    "order":1,
                    "compress":1,
                    "desir":1,
                    "href":1,
                    "basic":1,
                    "javaewah":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"EWAHCompressedBitmap",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><strong>EDIT</strong> </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014915]-[-46068084]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><strong>EDIT</strong> </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "strong":2,
                    "edit":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>As Alan said the BitSet will occupy 70GB of memory but you can do another thing : to have multiple BitSets (consecutive ones so that you can calculate the absolute position) and load in memory just the BitSet that you need in that moment something like a lazy load, in this case you will have control of the memory used.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[16014915]-[-690661641]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>As Alan said the BitSet will occupy 70GB of memory but you can do another thing : to have multiple BitSets (consecutive ones so that you can calculate the absolute position) and load in memory just the BitSet that you need in that moment something like a lazy load, in this case you will have control of the memory used.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"BitSet",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"BitSets",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"BitSet",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "bit":3,
                    "set":3,
                    "lazi":1,
                    "thing":1,
                    "load":2,
                    "calcul":1,
                    "moment":1,
                    "posit":1,
                    "consecut":1,
                    "absolut":1,
                    "control":1,
                    "alan":1,
                    "occupi":1,
                    "multipl":1,
                    "memori":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"BitSet",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"BitSets",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}