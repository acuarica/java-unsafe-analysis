{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":2129762,
    "title":"How do I fix &quot;java.lang.OutOfMemoryError at sun.misc.Unsafe.allocateMemory(Native Method)&quot;?",
    "comments":[
      
    ],
    "tags":[
      "java",
      "image",
      "memory",
      "graphics"
    ],
    "creationDate":"2010-01-25",
    "lastActivityDate":"2012-10-22",
    "lastEditDate":"2010-01-25",
    "score":2,
    "viewCount":2866,
    "owner":{
      "type":"StackOverflowUser",
      "id":238687,
      "displayName":"Jephir",
      "reputation":283
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I'm making a Java application that uses the <a href=\"http://slick.cokeandcode.com/\"rel=\"nofollow\">Slick</a> library to load images. However, on some computers, I get this error when trying to run the program:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[2129762]-[-43033773]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I'm making a Java application that uses the <a href=\"http://slick.cokeandcode.com/\"rel=\"nofollow\">Slick</a> library to load images. However, on some computers, I get this error when trying to run the program:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "program":1,
                  "slick":2,
                  "run":1,
                  "rel":1,
                  "load":1,
                  "librari":1,
                  "cokeandcod":1,
                  "comput":1,
                  "nofollow":1,
                  "error":1,
                  "applic":1,
                  "make":1,
                  "href":1,
                  "http":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"Exception in thread &quot;main&quot; java.lang.OutOfMemoryError at sun.misc.Unsafe.allocateMemory(Native Method) at java.nio.DirectByteBuffer.&lt;init&gt;(DirectByteBuffer.java:99) at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:288) at org.lwjgl.BufferUtils.createByteBuffer(BufferUtils.java:60) at org.newdawn.slick.opengl.PNGImageData.loadImage(PNGImageData.java:692) at org.newdawn.slick.opengl.CompositeImageData.loadImage(CompositeImageData.java:62) at org.newdawn.slick.opengl.CompositeImageData.loadImage(CompositeImageData.java:43) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[2129762]-[-674092389]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"StackTraceNode",
                  "threadName":{
                    "type":"StackTraceThreadNameNode",
                    "threadName":"\"main\""
                  },
                  "exceptionName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"OutOfMemoryError",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "lines":[
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"allocateMemory",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"Native Method"
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"nio",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"DirectByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"<init>",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"DirectByteBuffer.java",
                        "lineNumber":99
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"nio",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"ByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"allocateDirect",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"ByteBuffer.java",
                        "lineNumber":288
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"org",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"lwjgl",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"BufferUtils",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"createByteBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"BufferUtils.java",
                        "lineNumber":60
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"org",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"newdawn",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"slick",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"opengl",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"PNGImageData",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"loadImage",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"PNGImageData.java",
                        "lineNumber":692
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"org",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"newdawn",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"slick",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"opengl",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"CompositeImageData",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"loadImage",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"CompositeImageData.java",
                        "lineNumber":62
                      }
                    },
                    {
                      "type":"StackTraceLineNode",
                      "methodName":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"org",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"newdawn",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"slick",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"opengl",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"CompositeImageData",
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"IdentifierNode",
                            "name":"loadImage",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "location":{
                        "type":"SourceLocationNode",
                        "fileName":"CompositeImageData.java",
                        "lineNumber":43
                      }
                    }
                  ],
                  "causedByTraces":[
                    
                  ]
                }
              ]
            },
            "rawText":"Exception in thread \"main\" java.lang.OutOfMemoryError at sun.misc.Unsafe.allocateMemory(Native Method)at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:99)at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:288)at org.lwjgl.BufferUtils.createByteBuffer(BufferUtils.java:60)at org.newdawn.slick.opengl.PNGImageData.loadImage(PNGImageData.java:692)at org.newdawn.slick.opengl.CompositeImageData.loadImage(CompositeImageData.java:62)at org.newdawn.slick.opengl.CompositeImageData.loadImage(CompositeImageData.java:43)",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "alloc":2,
                  "util":2,
                  "slick":3,
                  "opengl":3,
                  "data":6,
                  "sun":1,
                  "composit":4,
                  "load":3,
                  "nio":2,
                  "buffer":7,
                  "main":1,
                  "direct":3,
                  "thread":1,
                  "error":1,
                  "pngimag":2,
                  "misc":1,
                  "unsaf":1,
                  "lang":1,
                  "org":4,
                  "lwjgl":1,
                  "creat":1,
                  "init":1,
                  "imag":7,
                  "newdawn":3,
                  "memori":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>My VM options are:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[2129762]-[1508793000]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>My VM options are:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "option":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlTextNode",
              "contents":"-Djava.library.path=lib -Xms1024M -Xmx1024M -XX:PermSize=256M -XX:MaxPermSize=256M"
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[2129762]-[-1114144400]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"-Djava.library.path=lib -Xms1024M -Xmx1024M -XX:"
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PermSize",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"=256M -XX:"
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"MaxPermSize",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"=256M"
                }
              ]
            },
            "rawText":"-Djava.library.path=lib -Xms1024M -Xmx1024M -XX:PermSize=256M -XX:MaxPermSize=256M",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "path":1,
                  "xms":1,
                  "size":2,
                  "djava":1,
                  "xmx":1,
                  "librari":1,
                  "lib":1,
                  "max":1,
                  "perm":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MaxPermSize",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The program loads a few large images (1024 x 768 resolution) at the beginning.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[2129762]-[97591697]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The program loads a few large images (1024 x 768 resolution) at the beginning.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "program":1,
                  "begin":1,
                  "resolut":1,
                  "load":1,
                  "larg":1,
                  "imag":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Any help to solve this problem would be greatly appreciated.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[2129762]-[283739869]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Any help to solve this problem would be greatly appreciated.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "great":1,
                  "appreci":1,
                  "solv":1,
                  "problem":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":2129788,
      "questionId":2129762,
      "comments":[
        
      ],
      "creationDate":"2010-01-25",
      "lastActivityDate":"2010-01-25",
      "score":4,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":157882,
        "displayName":"BalusC",
        "reputation":548029
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The <a href=\"http://java.sun.com/javase/6/docs/api/java/lang/OutOfMemoryError.html\"rel=\"nofollow\"><code>OutOfMemoryError</code></a> simply indicates that JVM has run out of memory. The first line of the stacktrace isn't really relevant here as it's just &quot;by coincidence&quot; exactly <em>there</em> where JVM starts to run out of memory, with all Garbage Collecting in vain.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2129788]-[-631008693]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The <a href=\"http://java.sun.com/javase/6/docs/api/java/lang/OutOfMemoryError.html\"rel=\"nofollow\"><code>OutOfMemoryError</code></a> simply indicates that JVM has run out of memory. The first line of the stacktrace isn't really relevant here as it's just &quot;by coincidence&quot; exactly <em>there</em> where JVM starts to run out of memory, with all Garbage Collecting in vain.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"OutOfMemoryError",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":2,
                    "vain":1,
                    "line":1,
                    "run":2,
                    "sun":1,
                    "rel":1,
                    "relev":1,
                    "doc":1,
                    "code":2,
                    "nofollow":1,
                    "simpli":1,
                    "error":2,
                    "stacktrac":1,
                    "isn":1,
                    "javas":1,
                    "quot":2,
                    "api":1,
                    "collect":1,
                    "lang":1,
                    "html":1,
                    "href":1,
                    "start":1,
                    "http":1,
                    "coincid":1,
                    "garbag":1,
                    "memori":4
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"OutOfMemoryError",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are basically two solutions to this:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2129788]-[-1189367938]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are basically two solutions to this:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "basic":1,
                    "solut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ol> \n <li>Give the JVM more memory.</li> \n <li>Fix memory leaks and/or allocate less memory in the code (i.e. make code more memory efficient, don't get hold of memory expensive resources like large <code>byte[]</code> for too long and so on).</li> \n</ol>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2129788]-[-1474026209]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ol> \n <li>Give the JVM more memory.</li> \n <li>Fix memory leaks and/or allocate less memory in the code (i.e. make code more memory efficient, don't get hold of memory expensive resources like large <code>byte[]</code> for too long and so on).</li> \n</ol>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "alloc":1,
                    "fix":1,
                    "resourc":1,
                    "effici":1,
                    "leak":1,
                    "code":4,
                    "hold":1,
                    "larg":1,
                    "give":1,
                    "make":1,
                    "expens":1,
                    "memori":5
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Point 1 is easy to do, but not always the solution if there's apparently a memory leak in the code. Point 2 is best to be nailed down with help of a <a href=\"http://www.google.com/search?q=java+profiler\"rel=\"nofollow\">Java profiler</a>.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2129788]-[-1369851775]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Point 1 is easy to do, but not always the solution if there's apparently a memory leak in the code. Point 2 is best to be nailed down with help of a <a href=\"http://www.google.com/search?q=java+profiler\"rel=\"nofollow\">Java profiler</a>.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "point":2,
                    "profil":2,
                    "easi":1,
                    "googl":1,
                    "appar":1,
                    "rel":1,
                    "leak":1,
                    "code":1,
                    "nofollow":1,
                    "href":1,
                    "http":1,
                    "solut":1,
                    "nail":1,
                    "www":1,
                    "search":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":2130024,
      "questionId":2129762,
      "comments":[
        
      ],
      "creationDate":"2010-01-25",
      "lastActivityDate":"2010-01-25",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":139985,
        "displayName":"Stephen C",
        "reputation":291715
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>@BalusC is mostly correct about the cause and solutions.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2130024]-[310085433]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>@BalusC is mostly correct about the cause and solutions.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"AnnotationNode",
                    "identifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"BalusC",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "solut":1,
                    "correct":1,
                    "balus":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>However, it is possible that the immediate cause of the OOMEs is that on some computers the JVM is unable to expand the heap to the size specified by the -XX options. For instance, if the amount of memory requested exceeds the remaining available physical memory + swap space, the OS will refuse the JVM's request to expand the heap. This might explain why the application works on some machines and not others ... with the same VM options, and (I guess) processor architectures and JVM versions.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2130024]-[-386722092]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>However, it is possible that the immediate cause of the OOMEs is that on some computers the JVM is unable to expand the heap to the size specified by the -XX options. For instance, if the amount of memory requested exceeds the remaining available physical memory + swap space, the OS will refuse the JVM's request to expand the heap. This might explain why the application works on some machines and not others ... with the same VM options, and (I guess) processor architectures and JVM versions.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":3,
                    "request":2,
                    "size":1,
                    "explain":1,
                    "refus":1,
                    "exceed":1,
                    "option":2,
                    "work":1,
                    "amount":1,
                    "oom":1,
                    "expand":2,
                    "version":1,
                    "comput":1,
                    "remain":1,
                    "space":1,
                    "machin":1,
                    "processor":1,
                    "architectur":1,
                    "applic":1,
                    "swap":1,
                    "heap":2,
                    "guess":1,
                    "unabl":1,
                    "physic":1,
                    "instanc":1,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If this is the problem, the OP will need to add more physical memory or increase the system's swap space.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2130024]-[2042757171]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If this is the problem, the OP will need to add more physical memory or increase the system's swap space.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "system":1,
                    "problem":1,
                    "space":1,
                    "increas":1,
                    "swap":1,
                    "add":1,
                    "physic":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>To expand on @BalusC's second solution, the OP may need to change the application so that it does not eagerly load the images at startup. Rather, it could load them lazily, and use a cache with weak references to ensure that the GC can discard them if memory is tight. However, if it is critical that all images are preloaded, then the OP has no choice but figure out how to give the JVM a bigger heap; see above.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2130024]-[-129510275]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>To expand on @BalusC's second solution, the OP may need to change the application so that it does not eagerly load the images at startup. Rather, it could load them lazily, and use a cache with weak references to ensure that the GC can discard them if memory is tight. However, if it is critical that all images are preloaded, then the OP has no choice but figure out how to give the JVM a bigger heap; see above.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"AnnotationNode",
                    "identifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"BalusC",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "jvm":1,
                    "eager":1,
                    "critic":1,
                    "cach":1,
                    "startup":1,
                    "weak":1,
                    "lazili":1,
                    "discard":1,
                    "load":2,
                    "expand":1,
                    "refer":1,
                    "applic":1,
                    "choic":1,
                    "give":1,
                    "figur":1,
                    "tight":1,
                    "balus":1,
                    "bigger":1,
                    "heap":1,
                    "preload":1,
                    "solut":1,
                    "imag":2,
                    "ensur":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":2135552,
      "questionId":2129762,
      "comments":[
        
      ],
      "creationDate":"2010-01-25",
      "lastActivityDate":"2010-01-25",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":238687,
        "displayName":"Jephir",
        "reputation":283
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Found the problem, I was trying to load a 6144x6144 PNG into my program.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2135552]-[-1885953695]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Found the problem, I was trying to load a 6144x6144 PNG into my program.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "png":1,
                    "problem":1,
                    "load":1,
                    "found":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>After re-sizing the image to a 256x256 TGA the program loads fine without the error.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2135552]-[1196367928]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>After re-sizing the image to a 256x256 TGA the program loads fine without the error.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "size":1,
                    "load":1,
                    "error":1,
                    "tga":1,
                    "fine":1,
                    "imag":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":2791783,
      "questionId":2129762,
      "comments":[
        
      ],
      "creationDate":"2010-05-07",
      "lastActivityDate":"2010-05-07",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":99585,
        "displayName":"Martin",
        "reputation":91
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Depending on the exact scenario, it can be a manifestation of a JVM bug present since 2005.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2791783]-[683512736]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Depending on the exact scenario, it can be a manifestation of a JVM bug present since 2005.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "scenario":1,
                    "jvm":1,
                    "depend":1,
                    "present":1,
                    "exact":1,
                    "bug":1,
                    "manifest":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you look at the code in the java.nio.DirectByteBuffer class, you will see that it creates a thread to deallocate the requested memory. If you program use lots of instance of this class (indirectly via IOUtils for example), you might get OOME even if you have enough memory. It's just the the thread did not get the chance to free the memory.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2791783]-[-87755279]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you look at the code in the java.nio.DirectByteBuffer class, you will see that it creates a thread to deallocate the requested memory. If you program use lots of instance of this class (indirectly via IOUtils for example), you might get OOME even if you have enough memory. It's just the the thread did not get the chance to free the memory.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"nio",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"DirectByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "program":1,
                    "indirect":1,
                    "request":1,
                    "nio":1,
                    "buffer":1,
                    "oom":1,
                    "direct":1,
                    "code":1,
                    "thread":2,
                    "lot":1,
                    "dealloc":1,
                    "ioutil":1,
                    "creat":1,
                    "chanc":1,
                    "free":1,
                    "instanc":1,
                    "memori":3
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"nio",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"DirectByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This is a nasty one.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2791783]-[516281249]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This is a nasty one.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "nasti":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6296278\"rel=\"nofollow\">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6296278</a></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[2791783]-[-1027214500]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6296278\"rel=\"nofollow\">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6296278</a></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"view_bug",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"bug_id",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "sun":2,
                    "rel":1,
                    "nofollow":1,
                    "bugdatabas":2,
                    "bug":6,
                    "href":1,
                    "http":2,
                    "view":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}