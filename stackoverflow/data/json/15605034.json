{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":15605034,
    "title":"What are the advantages of using EJB compared to POJO?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":22131160,
        "postId":15605034,
        "creationDate":"2013-03-24",
        "score":5,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":571407,
          "displayName":"JB Nizet",
          "reputation":287730
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Declarative distributed transactions, declarative security, dependency injection, automatic thread-safety, stateful beans, passivation and activation, remoting, etc."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15605034-cu22131160]-[491190280]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Declarative distributed transactions, declarative security, dependency injection, automatic thread-safety, stateful beans, passivation and activation, remoting, etc."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "depend":1,
                      "state":1,
                      "passiv":1,
                      "secur":1,
                      "declar":2,
                      "transact":1,
                      "automat":1,
                      "thread":1,
                      "safeti":1,
                      "activ":1,
                      "bean":1,
                      "inject":1,
                      "distribut":1,
                      "remot":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "java-ee",
      "ejb",
      "pojo"
    ],
    "creationDate":"2013-03-24",
    "lastActivityDate":"2013-03-25",
    "closedDate":"2013-03-25",
    "score":0,
    "viewCount":3127,
    "owner":{
      "type":"StackOverflowUser",
      "id":1883212,
      "displayName":"user1883212",
      "reputation":919
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Why should I ever use EJB? What can I get from it that I can't get in other ways?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15605034]-[1361061479]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Why should I ever use EJB? What can I get from it that I can't get in other ways?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "ejb":1,
                  "way":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>What are the advantages of using EJB compared to POJO?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15605034]-[-1416580037]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>What are the advantages of using EJB compared to POJO?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "ejb":1,
                  "advantag":1,
                  "pojo":1,
                  "compar":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":15605560,
      "questionId":15605034,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":22145659,
          "postId":15605560,
          "creationDate":"2013-03-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1113392,
            "displayName":"A4L",
            "reputation":9555
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for your precision, this was based on some testings i did a couple of months earlier by using a servlet as client and `@LocalBean` for the Statefull session bean. I was only able to keep a state by putting it in the (web) session."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15605560-cu22145659]-[-1990953844]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for your precision, this was based on some testings i did a couple of months earlier by using a servlet as client and `@LocalBean` for the Statefull session bean. I was only able to keep a state by putting it in the (web) session."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"LocalBean",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "precis":1,
                        "test":1,
                        "state":1,
                        "stateful":1,
                        "local":1,
                        "earlier":1,
                        "servlet":1,
                        "base":1,
                        "web":1,
                        "bean":2,
                        "coupl":1,
                        "client":1,
                        "session":2,
                        "put":1,
                        "month":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22145887,
          "postId":15605560,
          "creationDate":"2013-03-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1113392,
            "displayName":"A4L",
            "reputation":9555
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"... witch led to the - still unanswered - question what is the `session` in `Session bean` ? I'll appreciate if you have some links for further readings on that!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15605560-cu22145887]-[886879585]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"... witch led to the - still unanswered - question what is the `session` in `Session bean` ? I'll appreciate if you have some links for further readings on that!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "read":1,
                        "question":1,
                        "led":1,
                        "unansw":1,
                        "bean":1,
                        "witch":1,
                        "link":1,
                        "session":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22138788,
          "postId":15605560,
          "creationDate":"2013-03-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":472792,
            "displayName":"Arjan Tijms",
            "reputation":24139
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"&gt;the client must hold a reference to it otherwise the app server may assign it to another client - This is not entirely true. The app server has no special interaction with the GC to see if the client indeed still has a reference. It can potentially be re-set and re-assigned after an `@Remove` method is called. More typically the other client will get a new bean though, as pooling is more common for `Stateless` beans."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15605560-cu22138788]-[-793246382]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"&gt;the client must hold a reference to it otherwise the app server may assign it to another client - This is not entirely true. The app server has no special interaction with the GC to see if the client indeed still has a reference. It can potentially be re-set and re-assigned after an `@Remove` method is called. More typically the other client will get a new bean though, as pooling is more common for `Stateless` beans."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Remove",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "remov":1,
                        "server":2,
                        "interact":1,
                        "potenti":1,
                        "set":1,
                        "assign":2,
                        "hold":1,
                        "common":1,
                        "bean":2,
                        "typic":1,
                        "stateless":1,
                        "client":4,
                        "pool":1,
                        "refer":2,
                        "true":1,
                        "app":2,
                        "special":1,
                        "call":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":22164144,
          "postId":15605560,
          "creationDate":"2013-03-25",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":472792,
            "displayName":"Arjan Tijms",
            "reputation":24139
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"`session` originates from a time when there were only stateful and entity beans (which were stateful as well). They were a kind of http session for RMI applications."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15605560-cu22164144]-[2135534159]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"`session` originates from a time when there were only stateful and entity beans (which were stateful as well). They were a kind of http session for RMI applications."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "state":2,
                        "bean":1,
                        "origin":1,
                        "applic":1,
                        "session":2,
                        "entiti":1,
                        "time":1,
                        "kind":1,
                        "http":1,
                        "rmi":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-03-24",
      "lastActivityDate":"2013-03-25",
      "lastEditDate":"2013-03-25",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1113392,
        "displayName":"A4L",
        "reputation":9555
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipmb.html\"rel=\"nofollow\">EJBs</a> are managed and monitored by the Java EE application server, it takes care of creating and providing them to the clients via dependency injection and managing their <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/giplj.html\"rel=\"nofollow\">lifecycles</a>. EJBs are kept by the app-server in pools. Each time a client acquires an EJB the app-server picks one from the pool and assign it to the client. After the client is done with it (there is no reference to it left on the client side) it is returned to the pool and is ready for assigning to other clients.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[241367816]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipmb.html\"rel=\"nofollow\">EJBs</a> are managed and monitored by the Java EE application server, it takes care of creating and providing them to the clients via dependency injection and managing their <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/giplj.html\"rel=\"nofollow\">lifecycles</a>. EJBs are kept by the app-server in pools. Each time a client acquires an EJB the app-server picks one from the pool and assign it to the client. After the client is done with it (there is no reference to it left on the client side) it is returned to the pool and is ready for assigning to other clients.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "readi":1,
                    "side":1,
                    "provid":1,
                    "monitor":1,
                    "javae":2,
                    "server":3,
                    "depend":1,
                    "return":1,
                    "left":1,
                    "rel":2,
                    "ejb":3,
                    "giplj":1,
                    "oracl":2,
                    "assign":2,
                    "care":1,
                    "lifecycl":1,
                    "doc":4,
                    "nofollow":2,
                    "take":1,
                    "pick":1,
                    "client":6,
                    "pool":3,
                    "refer":1,
                    "applic":1,
                    "inject":1,
                    "app":2,
                    "time":1,
                    "acquir":1,
                    "html":2,
                    "href":2,
                    "manag":2,
                    "http":2,
                    "tutori":2,
                    "creat":1,
                    "gipmb":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Pooling is very significant for scalability of the application. You do not have to change anything to a deployed application to handle growing load and your application will not take the app-server on the knees if gets too high load since the amount of resources is limited. Everything is done by configuring the app server.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[-1648912039]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Pooling is very significant for scalability of the application. You do not have to change anything to a deployed application to handle growing load and your application will not take the app-server on the knees if gets too high load since the amount of resources is limited. Everything is done by configuring the app server.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":1,
                    "knee":1,
                    "server":2,
                    "resourc":1,
                    "load":2,
                    "configur":1,
                    "amount":1,
                    "grow":1,
                    "scalabl":1,
                    "signific":1,
                    "pool":1,
                    "applic":3,
                    "deploy":1,
                    "app":2,
                    "limit":1,
                    "handl":1,
                    "high":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>EJBs can - if accordingly annotated - handle transactions and asynchronous execution and can be exposed to remote clients.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[-2110877688]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>EJBs can - if accordingly annotated - handle transactions and asynchronous execution and can be exposed to remote clients.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "asynchron":1,
                    "ejb":1,
                    "expos":1,
                    "transact":1,
                    "annot":1,
                    "client":1,
                    "handl":1,
                    "execut":1,
                    "remot":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>There are four types of EJBs:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[-2023039829]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>There are four types of EJBs:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "ejb":1,
                    "type":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><strong>Session beans</strong></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[1015193041]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><strong>Session beans</strong></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "session":1,
                    "strong":2,
                    "bean":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ol> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipin\"rel=\"nofollow\">Stateless EJBs</a>: Lets the client perform some operation and return, cannot be used to hold a state since the server my assign it to other clients (you may use this as kind of communication between client, for example if you have an instance variable there an set it to a value, then this value may be seen by other clients). You can think of using Stateless EJB method just as functional programing or static methods of a class.</li> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipnl\"rel=\"nofollow\">Statefull EJBs</a>: Lets the client maintain a state across multiple request (the client must hold a reference to it otherwise the app server may assign it to another client)</li> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipim\"rel=\"nofollow\">Singleton EJBs</a>: as the name says the server guaranties that this Instance is unique for the hole application.</li> \n</ol>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[-1726604773]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ol> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipin\"rel=\"nofollow\">Stateless EJBs</a>: Lets the client perform some operation and return, cannot be used to hold a state since the server my assign it to other clients (you may use this as kind of communication between client, for example if you have an instance variable there an set it to a value, then this value may be seen by other clients). You can think of using Stateless EJB method just as functional programing or static methods of a class.</li> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipnl\"rel=\"nofollow\">Statefull EJBs</a>: Lets the client maintain a state across multiple request (the client must hold a reference to it otherwise the app server may assign it to another client)</li> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipim\"rel=\"nofollow\">Singleton EJBs</a>: as the name says the server guaranties that this Instance is unique for the hole application.</li> \n</ol>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "gipnl":1,
                    "program":1,
                    "method":2,
                    "uniqu":1,
                    "javae":3,
                    "request":1,
                    "server":3,
                    "guaranti":1,
                    "state":2,
                    "set":1,
                    "stateful":1,
                    "rel":3,
                    "ejb":4,
                    "oracl":3,
                    "assign":2,
                    "doc":6,
                    "oper":1,
                    "hold":2,
                    "gipim":1,
                    "nofollow":3,
                    "gipjg":3,
                    "stateless":2,
                    "client":7,
                    "function":1,
                    "perform":1,
                    "refer":1,
                    "applic":1,
                    "communic":1,
                    "app":1,
                    "singleton":1,
                    "kind":1,
                    "gipin":1,
                    "html":3,
                    "variabl":1,
                    "href":3,
                    "hole":1,
                    "http":3,
                    "tutori":3,
                    "multipl":1,
                    "let":2,
                    "instanc":2,
                    "maintain":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p><strong>Message driven beans</strong></p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[513597856]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p><strong>Message driven beans</strong></p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "messag":1,
                    "driven":1,
                    "strong":2,
                    "bean":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ol> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipko.html\"rel=\"nofollow\">Message driven EJBs</a>: Is also stateless and is used to send and receive messages usually in combination with JMS. Message handler function is executes asynchronously.</li> \n</ol>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[473968917]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ol> \n <li><a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/gipko.html\"rel=\"nofollow\">Message driven EJBs</a>: Is also stateless and is used to send and receive messages usually in combination with JMS. Message handler function is executes asynchronously.</li> \n</ol>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "javae":1,
                    "receiv":1,
                    "asynchron":1,
                    "jms":1,
                    "rel":1,
                    "ejb":1,
                    "oracl":1,
                    "doc":2,
                    "driven":1,
                    "nofollow":1,
                    "combin":1,
                    "stateless":1,
                    "function":1,
                    "messag":3,
                    "html":1,
                    "href":1,
                    "http":1,
                    "tutori":1,
                    "handler":1,
                    "gipko":1,
                    "execut":1,
                    "send":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>While EBJs offer all that and may other things, POJOs are just POJOs nothing less and nothing more.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15605560]-[-1087292080]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>While EBJs offer all that and may other things, POJOs are just POJOs nothing less and nothing more.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "ebj":1,
                    "pojo":2,
                    "thing":1,
                    "offer":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}