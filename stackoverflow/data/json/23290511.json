{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":23290511,
    "title":"Is java.nio.file.PathMatcher thread safe?",
    "comments":[
      
    ],
    "tags":[
      "java",
      "nio"
    ],
    "creationDate":"2014-04-25",
    "lastActivityDate":"2014-04-25",
    "score":0,
    "viewCount":43,
    "owner":{
      "type":"StackOverflowUser",
      "id":239101,
      "displayName":"David Soroko",
      "reputation":1680
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>The actual implementation is file system specific and an instance of a PathMatcher is likely to have state, so not likely. </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[23290511]-[1845881942]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>The actual implementation is file system specific and an instance of a PathMatcher is likely to have state, so not likely. </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"PathMatcher",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "path":1,
                  "system":1,
                  "state":1,
                  "matcher":1,
                  "specif":1,
                  "implement":1,
                  "file":1,
                  "actual":1,
                  "instanc":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PathMatcher",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Does anyone know for sure? </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[23290511]-[1536115578]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Does anyone know for sure? </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":23290656,
      "questionId":23290511,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":35651935,
          "postId":23290656,
          "creationDate":"2014-04-25",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":733345,
            "displayName":"Joe",
            "reputation":6137
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Still not an answer, to this specific question, but [`FileSystem` hints that](http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html) &quot;File systems are safe for use by multiple concurrent threads,&quot; which would also make me expect exceptions to be noted."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23290656-cu35651935]-[-276235822]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Still not an answer, to this specific question, but [`FileSystem` hints that](http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html) &quot;File systems are safe for use by multiple concurrent threads,&quot; which would also make me expect exceptions to be noted."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"FileSystem",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "concurr":1,
                        "system":3,
                        "oracl":1,
                        "nio":1,
                        "safe":1,
                        "doc":2,
                        "thread":1,
                        "note":1,
                        "expect":1,
                        "specif":1,
                        "hint":1,
                        "javas":1,
                        "make":1,
                        "answer":1,
                        "file":4,
                        "quot":2,
                        "api":1,
                        "html":1,
                        "except":1,
                        "http":1,
                        "multipl":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"FileSystem",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":35692226,
          "postId":23290656,
          "creationDate":"2014-04-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":239101,
            "displayName":"David Soroko",
            "reputation":1680
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"_As such I'd expect it to be fully threadsafe unless explicitly indicated otherwise_ I use the opposite heuristic with Oracle javadocs"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23290656-cu35692226]-[-1409799601]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"_As such I'd expect it to be fully threadsafe unless explicitly indicated otherwise_ I use the opposite heuristic with Oracle javadocs"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"otherwise_",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "threadsaf":1,
                        "heurist":1,
                        "oracl":1,
                        "opposit":1,
                        "expect":1,
                        "fulli":1,
                        "explicit":1,
                        "javadoc":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":35692296,
          "postId":23290656,
          "creationDate":"2014-04-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":239101,
            "displayName":"David Soroko",
            "reputation":1680
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Two implementations I can see, are currently thread safe http://www.docjar.com/html/api/com/sun/nio/zipfs/ZipFileSystem.java.html http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/sun/nio/fs/WindowsFileSystem.java"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23290656-cu35692296]-[60098677]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Two implementations I can see, are currently thread safe http://www.docjar.com/html/api/com/sun/nio/zipfs/ZipFileSystem.java.html http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/sun/nio/fs/WindowsFileSystem.java"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "openjdk":1,
                        "window":1,
                        "system":2,
                        "zip":1,
                        "docjar":1,
                        "root":1,
                        "zipf":1,
                        "sun":2,
                        "nio":2,
                        "repositori":1,
                        "safe":1,
                        "grepcod":2,
                        "thread":1,
                        "implement":1,
                        "file":3,
                        "api":1,
                        "html":2,
                        "http":2,
                        "jdk":1,
                        "www":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":35693223,
          "postId":23290656,
          "creationDate":"2014-04-26",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":466862,
            "displayName":"Mark Rotteveel",
            "reputation":23379
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@DavidSoroko For classes that are stateful, I agree, but nothing about a `PathMatcher` suggests state."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23290656-cu35693223]-[1497271865]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@DavidSoroko For classes that are stateful, I agree, but nothing about a `PathMatcher` suggests state."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"DavidSoroko",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PathMatcher",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "path":1,
                        "david":1,
                        "state":2,
                        "suggest":1,
                        "matcher":1,
                        "soroko":1,
                        "agre":1,
                        "class":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"PathMatcher",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":35717478,
          "postId":23290656,
          "creationDate":"2014-04-27",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":239101,
            "displayName":"David Soroko",
            "reputation":1680
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"I understand why you say what you are saying. Ultimately, the question is, will you have a singleton PathMatcher (for a specific given pattern) in a production system."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[23290656-cu35717478]-[-1926810516]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"I understand why you say what you are saying. Ultimately, the question is, will you have a singleton PathMatcher (for a specific given pattern) in a production system."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"PathMatcher",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "question":1,
                        "path":1,
                        "system":1,
                        "pattern":1,
                        "understand":1,
                        "matcher":1,
                        "specif":1,
                        "singleton":1,
                        "ultim":1,
                        "product":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"PathMatcher",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2014-04-25",
      "lastActivityDate":"2014-04-25",
      "lastEditDate":"2014-04-25",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":466862,
        "displayName":"Mark Rotteveel",
        "reputation":23379
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>A <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/PathMatcher.html\"rel=\"nofollow\"><code>PathMatcher</code></a> seems to be a purely functional interface. The <code>PathMatcher</code> accepts a <code>Path</code> and returns <code>boolean</code>, I can't think of a reason why this processing would need any state that would make it unsafe. The only state it might need would be a fixed(!) pattern, like when created with <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher%28java.lang.String%29\"rel=\"nofollow\"><code>FileSystem.getPathMatcher(java.lang.String)</code></a>).</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[23290656]-[1256102437]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>A <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/PathMatcher.html\"rel=\"nofollow\"><code>PathMatcher</code></a> seems to be a purely functional interface. The <code>PathMatcher</code> accepts a <code>Path</code> and returns <code>boolean</code>, I can't think of a reason why this processing would need any state that would make it unsafe. The only state it might need would be a fixed(!) pattern, like when created with <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher%28java.lang.String%29\"rel=\"nofollow\"><code>FileSystem.getPathMatcher(java.lang.String)</code></a>).</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PathMatcher",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"PathMatcher",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"FileSystem",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getPathMatcher",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"java",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"lang",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"String",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "accept":1,
                    "path":6,
                    "system":2,
                    "pattern":1,
                    "state":2,
                    "return":1,
                    "process":1,
                    "fix":1,
                    "rel":2,
                    "oracl":2,
                    "nio":2,
                    "pure":1,
                    "reason":1,
                    "doc":4,
                    "code":10,
                    "matcher":5,
                    "nofollow":2,
                    "function":1,
                    "javas":2,
                    "make":1,
                    "file":4,
                    "api":2,
                    "unsaf":1,
                    "lang":2,
                    "html":2,
                    "href":2,
                    "http":2,
                    "creat":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"java",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"lang",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"String",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"PathMatcher",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>As such I'd expect it to be fully threadsafe unless explicitly indicated otherwise.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[23290656]-[-2085338785]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>As such I'd expect it to be fully threadsafe unless explicitly indicated otherwise.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "fulli":1,
                    "explicit":1,
                    "threadsaf":1,
                    "expect":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}