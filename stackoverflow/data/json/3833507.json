{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":3833507,
    "title":"CPU performance using ThreadPoolExecutor",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":4071688,
        "postId":3833507,
        "creationDate":"2010-09-30",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":57695,
          "displayName":"Peter Lawrey",
          "reputation":257803
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Idle threads don't do anything whether you have 5 or 5000. Creating threads has an overhead and consumes resources but once they are created they only waste memory not cpu. BTW: Are you sure you want more threads than you have cores? (or do you have 50 free cores)"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[3833507-cu4071688]-[1632751993]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Idle threads don't do anything whether you have 5 or 5000. Creating threads has an overhead and consumes resources but once they are created they only waste memory not cpu. BTW: Are you sure you want more threads than you have cores? (or do you have 50 free cores)"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "consum":1,
                      "wast":1,
                      "btw":1,
                      "resourc":1,
                      "overhead":1,
                      "idl":1,
                      "thread":3,
                      "cpu":1,
                      "core":2,
                      "creat":2,
                      "free":1,
                      "memori":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":35565741,
        "postId":3833507,
        "creationDate":"2014-04-23",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":685806,
          "displayName":"Pino",
          "reputation":2452
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Having more threads than cores makes sense if they are IO-bound, however having too many threads can waste CPU time with an excessive number of context switches. See http://blogs.mulesoft.org/chasing-the-bottleneck-true-story-about-fighting-thread-contention-in-your-code/ for a very interesting explanation."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[3833507-cu35565741]-[-955418282]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Having more threads than cores makes sense if they are IO-bound, however having too many threads can waste CPU time with an excessive number of context switches. See http://blogs.mulesoft.org/chasing-the-bottleneck-true-story-about-fighting-thread-contention-in-your-code/ for a very interesting explanation."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "sens":1,
                      "number":1,
                      "switch":1,
                      "wast":1,
                      "context":1,
                      "stori":1,
                      "code":1,
                      "thread":3,
                      "chase":1,
                      "explan":1,
                      "blog":1,
                      "bound":1,
                      "interest":1,
                      "cpu":1,
                      "content":1,
                      "true":1,
                      "fight":1,
                      "make":1,
                      "bottleneck":1,
                      "time":1,
                      "org":1,
                      "core":1,
                      "mulesoft":1,
                      "http":1,
                      "excess":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "multithreading"
    ],
    "creationDate":"2010-09-30",
    "lastActivityDate":"2010-09-30",
    "score":0,
    "viewCount":1566,
    "owner":{
      "type":"StackOverflowUser",
      "id":463134,
      "displayName":"user463134",
      "reputation":1
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I am using TheadPoolExecutor that executes on a PriorityQueue. I have set a minimum pool size of 5 and max of 50. When we ran the load test, we saw like 10% jump is CPU. The thread dump shows</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[3833507]-[1419473798]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I am using TheadPoolExecutor that executes on a PriorityQueue. I have set a minimum pool size of 5 and max of 50. When we ran the load test, we saw like 10% jump is CPU. The thread dump shows</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"TheadPoolExecutor",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "thead":1,
                  "test":1,
                  "show":1,
                  "size":1,
                  "jump":1,
                  "queue":1,
                  "ran":1,
                  "set":1,
                  "load":1,
                  "dump":1,
                  "thread":1,
                  "max":1,
                  "cpu":1,
                  "pool":2,
                  "minimum":1,
                  "prioriti":1,
                  "executor":1,
                  "execut":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"TheadPoolExecutor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>pool-1-thread-5&quot; prio=3 tid=0x020f69a0 nid=0xa3 waiting on condition [0xb517f000..0xb517f970] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841) at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:200) at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) at java.lang.Thread.run(Thread.java:595)</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[3833507]-[2021909970]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>pool-1-thread-5&quot; prio=3 tid=0x020f69a0 nid=0xa3 waiting on condition [0xb517f000..0xb517f970] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841) at java.util.concurrent.PriorityBlockingQueue.take(PriorityBlockingQueue.java:200) at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) at java.lang.Thread.run(Thread.java:595)</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"sun",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"misc",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Unsafe",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"park",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Native Method"
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"locks",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"LockSupport",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"park",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"LockSupport.java",
                    "lineNumber":118
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"locks",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"AbstractQueuedSynchronizer$ConditionObject",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"await",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"AbstractQueuedSynchronizer.java",
                    "lineNumber":1841
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"PriorityBlockingQueue",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"take",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"PriorityBlockingQueue.java",
                    "lineNumber":200
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ThreadPoolExecutor",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"getTask",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"ThreadPoolExecutor.java",
                    "lineNumber":470
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"util",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"concurrent",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"ThreadPoolExecutor$Worker",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"ThreadPoolExecutor.java",
                    "lineNumber":675
                  }
                },
                {
                  "type":"StackTraceLineNode",
                  "methodName":{
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"java",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"lang",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"run",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  "location":{
                    "type":"SourceLocationNode",
                    "fileName":"Thread.java",
                    "lineNumber":595
                  }
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "support":2,
                  "method":1,
                  "await":1,
                  "wait":1,
                  "task":1,
                  "concurr":5,
                  "util":5,
                  "queue":2,
                  "condit":2,
                  "run":2,
                  "sun":1,
                  "lock":4,
                  "object":1,
                  "block":2,
                  "thread":7,
                  "pool":5,
                  "queu":2,
                  "park":2,
                  "misc":1,
                  "quot":1,
                  "unsaf":1,
                  "lang":1,
                  "tid":1,
                  "prioriti":2,
                  "nid":1,
                  "executor":4,
                  "prio":1,
                  "synchron":2,
                  "worker":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Wondering the prestartAllCoreThreads() that I use in ThreadPoolExecutor will have any performance issue?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[3833507]-[-1868814267]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Wondering the prestartAllCoreThreads() that I use in ThreadPoolExecutor will have any performance issue?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"prestartAllCoreThreads",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ThreadPoolExecutor",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "prestart":1,
                  "issu":1,
                  "thread":2,
                  "wonder":1,
                  "pool":1,
                  "perform":1,
                  "core":1,
                  "executor":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ThreadPoolExecutor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>TIA</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[3833507]-[595403939]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>TIA</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "tia":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":3833626,
      "questionId":3833507,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":4073896,
          "postId":3833626,
          "creationDate":"2010-10-01",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":122207,
            "displayName":"Tim Bender",
            "reputation":12304
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Profiling typically shows CPU time...no? I mean, I agree, if you were to continuously poll the Thread's current stack, most of the real life time is likely spent waiting for new tasks in most systems."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[3833626-cu4073896]-[-479763126]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Profiling typically shows CPU time...no? I mean, I agree, if you were to continuously poll the Thread's current stack, most of the real life time is likely spent waiting for new tasks in most systems."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "poll":1,
                        "wait":1,
                        "task":1,
                        "show":1,
                        "profil":1,
                        "system":1,
                        "real":1,
                        "continu":1,
                        "thread":1,
                        "typic":1,
                        "cpu":1,
                        "stack":1,
                        "life":1,
                        "agre":1,
                        "time":2,
                        "current":1,
                        "spent":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2010-09-30",
      "lastActivityDate":"2010-09-30",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":6365,
        "displayName":"Michael Barker",
        "reputation":8907
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The <code>sun.misc.Unsafe.park</code> method is where the threads that are created by the ThreadPoolExecutor will wait until new messages are received. Internally the ThreadPoolExecutor has a queue of <code>Runnable</code>s that it will farm out to waiting threads. If your system is idle or reasonably quiet, expect to see quite a few threads waiting in this method.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[3833626]-[211252372]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The <code>sun.misc.Unsafe.park</code> method is where the threads that are created by the ThreadPoolExecutor will wait until new messages are received. Internally the ThreadPoolExecutor has a queue of <code>Runnable</code>s that it will farm out to waiting threads. If your system is idle or reasonably quiet, expect to see quite a few threads waiting in this method.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ThreadPoolExecutor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ThreadPoolExecutor",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":2,
                    "receiv":1,
                    "wait":3,
                    "system":1,
                    "queue":1,
                    "sun":1,
                    "quiet":1,
                    "code":4,
                    "idl":1,
                    "thread":5,
                    "expect":1,
                    "pool":2,
                    "park":1,
                    "runnabl":1,
                    "misc":1,
                    "unsaf":1,
                    "messag":1,
                    "farm":1,
                    "executor":2,
                    "creat":1,
                    "intern":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ThreadPoolExecutor",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>If you are profiling a system, this method will often crop up as a key consumer of time. This is expected if most of the time the threads is waiting for work to do.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[3833626]-[1506692015]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>If you are profiling a system, this method will often crop up as a key consumer of time. This is expected if most of the time the threads is waiting for work to do.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "consum":1,
                    "method":1,
                    "wait":1,
                    "profil":1,
                    "system":1,
                    "work":1,
                    "key":1,
                    "thread":1,
                    "expect":1,
                    "time":2,
                    "crop":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}