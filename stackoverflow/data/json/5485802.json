{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":5485802,
    "title":"Build a linux library for windows with MinGW",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":6222094,
        "postId":5485802,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":231717,
          "displayName":"smerlin",
          "reputation":3486
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"which mingw-g++ version are you using ?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5485802-cu6222094]-[-869481817]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"which mingw-g++ version are you using ?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "mingw":1,
                      "version":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6222165,
        "postId":5485802,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":57695,
          "displayName":"Peter Lawrey",
          "reputation":257803
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"How does this relate to Java?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5485802-cu6222165]-[-270844140]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"How does this relate to Java?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "relat":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6222211,
        "postId":5485802,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":516305,
          "displayName":"NullPointer",
          "reputation":233
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"it's a native lib with dll-wrapper for java - Java Native Interface. I can build it with cygwin for windows. But it doesn't work. causes the jvm crash."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5485802-cu6222211]-[1418863573]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"it's a native lib with dll-wrapper for java - Java Native Interface. I can build it with cygwin for windows. But it doesn't work. causes the jvm crash."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jvm":1,
                      "window":1,
                      "cygwin":1,
                      "crash":1,
                      "build":1,
                      "work":1,
                      "lib":1,
                      "wrapper":1,
                      "dll":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":6222270,
        "postId":5485802,
        "creationDate":"2011-03-30",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":516305,
          "displayName":"NullPointer",
          "reputation":233
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"how to find the mingw-g++ vesion? $ gcc --version gcc.exe (GCC) 4.5.2 Copyright (C) 2010 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[5485802-cu6222270]-[1196946632]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"how to find the mingw-g++ vesion? $ gcc --version gcc.exe (GCC) 4.5.2 Copyright (C) 2010 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"LocalVariableDeclarationStatementNode",
                      "modifiers":[
                        
                      ],
                      "declarators":{
                        "type":"VariableDeclaratorsNode",
                        "declarators":[
                          {
                            "type":"VariableDeclaratorNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"warranty",
                              "comments":[
                                
                              ]
                            },
                            "arrayDepth":[
                              
                            ],
                            "varType":{
                              "type":"ReferenceTypeNode",
                              "ids":[
                                {
                                  "type":"ParameterizedTypeNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"NO",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "copyright":1,
                      "warranti":1,
                      "find":1,
                      "vesion":1,
                      "fit":1,
                      "condit":1,
                      "softwar":2,
                      "foundat":1,
                      "gcc":3,
                      "version":1,
                      "mingw":1,
                      "merchant":1,
                      "sourc":1,
                      "purpos":1,
                      "copi":1,
                      "free":2,
                      "exe":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"NO",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      {
                        "type":"VariableDeclaratorNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"warranty",
                          "comments":[
                            
                          ]
                        },
                        "arrayDepth":[
                          
                        ],
                        "varType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"NO",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "c++",
      "linux",
      "jni",
      "mingw"
    ],
    "creationDate":"2011-03-30",
    "lastActivityDate":"2011-03-30",
    "score":3,
    "viewCount":565,
    "owner":{
      "type":"StackOverflowUser",
      "id":516305,
      "displayName":"NullPointer",
      "reputation":233
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>There is a lib sources for linux with make scripts. <a href=\"http://svn.gna.org/svn/pokersource/branches/poker-eval-java/\"rel=\"nofollow\">http://svn.gna.org/svn/pokersource/branches/poker-eval-java/</a>. I need to build it for windows. It should be two dll. The main dll and the second dll is jni-wrapper to call the native functions from java. I have built it under the linux with such commands:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5485802]-[-2075273036]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>There is a lib sources for linux with make scripts. <a href=\"http://svn.gna.org/svn/pokersource/branches/poker-eval-java/\"rel=\"nofollow\">http://svn.gna.org/svn/pokersource/branches/poker-eval-java/</a>. I need to build it for windows. It should be two dll. The main dll and the second dll is jni-wrapper to call the native functions from java. I have built it under the linux with such commands:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "poker":2,
                  "pokersourc":2,
                  "window":1,
                  "built":1,
                  "branch":2,
                  "rel":1,
                  "build":1,
                  "main":1,
                  "command":1,
                  "eval":2,
                  "jni":1,
                  "gna":2,
                  "lib":1,
                  "nofollow":1,
                  "function":1,
                  "wrapper":1,
                  "linux":2,
                  "make":1,
                  "svn":4,
                  "script":1,
                  "org":2,
                  "href":1,
                  "http":2,
                  "call":1,
                  "sourc":1,
                  "dll":3
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"autoreconf --install ./configure --enable-java make "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[5485802]-[1569331588]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"autoreconf --install ./configure --enable-java make "
                }
              ]
            },
            "rawText":"autoreconf --install ./configure --enable-java make ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "autoreconf":1,
                  "configur":1,
                  "instal":1,
                  "enabl":1,
                  "make":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>It was built successfully and works fine. But now I need to make it for windows. I've installed the MinGW with GUI installer and add mingw\\bin to my PATH. I run the same commands but have the error in make:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5485802]-[1397845967]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>It was built successfully and works fine. But now I need to make it for windows. I've installed the MinGW with GUI installer and add mingw\\bin to my PATH. I run the same commands but have the error in make:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "window":1,
                  "success":1,
                  "built":1,
                  "path":1,
                  "run":1,
                  "min":1,
                  "command":1,
                  "work":1,
                  "error":1,
                  "instal":2,
                  "mingw":1,
                  "make":2,
                  "bin":1,
                  "fine":1,
                  "add":1,
                  "gui":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":"mv -f .deps/libpoker_eval_la-deck_std.Tpo .deps/libpoker_eval_la-deck_std.Plo /bin/sh ../libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I../inclu de -I../include -Wall -Wpointer-arith -Wstrict-prototypes -g -O2 -MT libpoker_ eval_la-enumerate.lo -MD -MP -MF .deps/libpoker_eval_la-enumerate.Tpo -c -o libp oker_eval_la-enumerate.lo `test -f 'enumerate.c' || echo './'`enumerate.c libtool: compile: gcc -DHAVE_CONFIG_H -I. -I../include -I../include -Wall -Wpoi nter-arith -Wstrict-prototypes -g -O2 -MT libpoker_eval_la-enumerate.lo -MD -MP -MF .deps/libpoker_eval_la-enumerate.Tpo -c enumerate.c -DDLL_EXPORT -DPIC -o . libs/libpoker_eval_la-enumerate.o enumerate.c: In function 'enumExhaustive': enumerate.c:415:5: error: 'intptr_t' undeclared (first use in this function) enumerate.c:415:5: note: each undeclared identifier is reported only once for ea ch function it appears in make[1]: *** [libpoker_eval_la-enumerate.lo] Error 1 make[1]: Leaving directory `/drive/eval/lib' make: *** [all-recursive] Error 1 "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[5485802]-[1744789089]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":"mv -f .deps/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-"
                },
                {
                  "type":"IdentifierNode",
                  "name":"deck_std",
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":".Tpo .deps/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-"
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"deck_std",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"Plo",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"/bin/sh ../libtool --tag=CC --mode=compile gcc -DHAVE"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"_CONFIG_H",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" -I. -I../inclu de -I../include -Wall -Wpointer-arith -Wstrict-prototypes -g -O2 -MT "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.lo -MD -MP -MF .deps/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.Tpo -c -o libp "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"oker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.lo `test -f 'enumerate.c' || echo './'`enumerate.c libtool: compile: gcc -DHAVE"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"_CONFIG_H",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" -I. -I../include -I../include -Wall -Wpoi nter-arith -Wstrict-prototypes -g -O2 -MT "
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.lo -MD -MP -MF .deps/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.Tpo -c enumerate.c -DDLL"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"_EXPORT",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":" -DPIC -o . libs/"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.o enumerate.c: In function '"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"enumExhaustive",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"': enumerate.c:415:5: error: '"
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"intptr_t",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"' undeclared (first use in this function) enumerate.c:415:5: note: each undeclared identifier is reported only once for ea ch function it appears in make[1]: *** ["
                },
                {
                  "type":"QualifiedIdentifierNode",
                  "identifiers":[
                    {
                      "type":"IdentifierNode",
                      "name":"libpoker_eval_la",
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"-enumerate.lo] Error 1 make[1]: Leaving directory `/drive/eval/lib' make: *** [all-recursive] Error 1 "
                }
              ]
            },
            "rawText":"mv -f .deps/libpoker_eval_la-deck_std.Tpo .deps/libpoker_eval_la-deck_std.Plo /bin/sh ../libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I../inclu de -I../include -Wall -Wpointer-arith -Wstrict-prototypes -g -O2 -MT libpoker_ eval_la-enumerate.lo -MD -MP -MF .deps/libpoker_eval_la-enumerate.Tpo -c -o libp oker_eval_la-enumerate.lo `test -f 'enumerate.c' || echo './'`enumerate.c libtool: compile: gcc -DHAVE_CONFIG_H -I. -I../include -I../include -Wall -Wpoi nter-arith -Wstrict-prototypes -g -O2 -MT libpoker_eval_la-enumerate.lo -MD -MP -MF .deps/libpoker_eval_la-enumerate.Tpo -c enumerate.c -DDLL_EXPORT -DPIC -o . libs/libpoker_eval_la-enumerate.o enumerate.c: In function 'enumExhaustive': enumerate.c:415:5: error: 'intptr_t' undeclared (first use in this function) enumerate.c:415:5: note: each undeclared identifier is reported only once for ea ch function it appears in make[1]: *** [libpoker_eval_la-enumerate.lo] Error 1 make[1]: Leaving directory `/drive/eval/lib' make: *** [all-recursive] Error 1 ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "drive":1,
                  "intptr":1,
                  "plo":1,
                  "test":1,
                  "oker":1,
                  "enumer":13,
                  "undeclar":2,
                  "dep":4,
                  "arith":2,
                  "tag":1,
                  "appear":1,
                  "dpic":1,
                  "nter":1,
                  "deck":2,
                  "wpoi":1,
                  "std":2,
                  "config":2,
                  "exhaust":1,
                  "tpo":3,
                  "libpok":8,
                  "leav":1,
                  "gcc":2,
                  "includ":3,
                  "eval":10,
                  "wpointer":1,
                  "export":1,
                  "libp":1,
                  "prototyp":2,
                  "recurs":1,
                  "lib":2,
                  "wall":2,
                  "error":3,
                  "note":1,
                  "ddll":1,
                  "inclu":1,
                  "function":3,
                  "dhave":2,
                  "echo":1,
                  "directori":1,
                  "identifi":1,
                  "mode":1,
                  "make":3,
                  "report":1,
                  "bin":1,
                  "compil":2,
                  "wstrict":2,
                  "libtool":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"deck_std",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Plo",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Full console log is here <a href=\"http://dl.dropbox.com/u/12053587/mylog.txt\"rel=\"nofollow\">http://dl.dropbox.com/u/12053587/mylog.txt</a></p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5485802]-[-1285236224]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Full console log is here <a href=\"http://dl.dropbox.com/u/12053587/mylog.txt\"rel=\"nofollow\">http://dl.dropbox.com/u/12053587/mylog.txt</a></p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "mylog":2,
                  "full":1,
                  "rel":1,
                  "consol":1,
                  "txt":2,
                  "nofollow":1,
                  "dropbox":2,
                  "href":1,
                  "http":2,
                  "log":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Could you help me to solve the problem? Thanks</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[5485802]-[760849480]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Could you help me to solve the problem? Thanks</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "solv":1,
                  "problem":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":5485841,
      "questionId":5485802,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":6222532,
          "postId":5485841,
          "creationDate":"2011-03-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":17833,
            "displayName":"Petesh",
            "reputation":36008
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@NullPointer There is a good chance that the configuration script isn't able to properly determine when/where it needs to '#include \n<stdint.h>\n ' when executed from the mingw environment you're using.\n</stdint.h>"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5485841-cu6222532]-[137241874]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@NullPointer There is a good chance that the configuration script isn't able to properly determine when/where it needs to '#include \n<stdint.h>\n ' when executed from the mingw environment you're using.\n</stdint.h>"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"NullPointer",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "determin":1,
                        "pointer":1,
                        "proper":1,
                        "good":1,
                        "configur":1,
                        "includ":1,
                        "stdint":2,
                        "isn":1,
                        "mingw":1,
                        "script":1,
                        "environ":1,
                        "chanc":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6222591,
          "postId":5485841,
          "creationDate":"2011-03-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":516305,
            "displayName":"NullPointer",
            "reputation":233
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Thanks for your help! I add #include \n<stdint.h>\n  and everything is fine!\n</stdint.h>"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5485841-cu6222591]-[-1021257210]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Thanks for your help! I add #include \n<stdint.h>\n  and everything is fine!\n</stdint.h>"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "includ":1,
                        "stdint":2,
                        "fine":1,
                        "add":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6222158,
          "postId":5485841,
          "creationDate":"2011-03-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":516305,
            "displayName":"NullPointer",
            "reputation":233
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"May be it can solve the problem. But I've built it at my Ubuntu without any changes and it works there correctly. Also I've built it with cygwin for windows. It was built without errors also. But the JVM always crashes when I use it from java on windows. Some people said there is something wrong with cygwin and they had the same problems with this lib on cygwin. But they built it with mingw and it works!"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5485841-cu6222158]-[-1934316778]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"May be it can solve the problem. But I've built it at my Ubuntu without any changes and it works there correctly. Also I've built it with cygwin for windows. It was built without errors also. But the JVM always crashes when I use it from java on windows. Some people said there is something wrong with cygwin and they had the same problems with this lib on cygwin. But they built it with mingw and it works!"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "solv":1,
                        "jvm":1,
                        "window":2,
                        "cygwin":3,
                        "built":4,
                        "wrong":1,
                        "problem":2,
                        "crash":1,
                        "correct":1,
                        "work":2,
                        "lib":1,
                        "error":1,
                        "mingw":1,
                        "peopl":1,
                        "ubuntu":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":6222347,
          "postId":5485841,
          "creationDate":"2011-03-30",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":231717,
            "displayName":"smerlin",
            "reputation":3486
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"The `C++` standard does not specify which headers have to/must not be included by other standard headers. So most probably on Ubuntu, some other included standard header included `stdint.h`, while on windows it does not. So just manually include it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[5485841-cu6222347]-[1021565686]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"The `C++` standard does not specify which headers have to/must not be included by other standard headers. So most probably on Ubuntu, some other included standard header included `stdint.h`, while on windows it does not. So just manually include it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "window":1,
                        "standard":3,
                        "includ":4,
                        "stdint":1,
                        "header":3,
                        "manual":1,
                        "ubuntu":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-03-30",
      "lastActivityDate":"2011-03-30",
      "score":2,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":17833,
        "displayName":"Petesh",
        "reputation":36008
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>you need to add:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5485841]-[500162336]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>you need to add:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "add":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"#include &lt;stdint.h&gt; "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[5485841]-[233348297]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"TextFragmentNode",
                    "text":"#include "
                  },
                  {
                    "type":"XmlNode",
                    "name":{
                      "type":"XmlNameNode",
                      "value":"stdint.h"
                    },
                    "attributes":[
                      
                    ],
                    "elements":[
                      
                    ]
                  },
                  {
                    "type":"TextFragmentNode",
                    "text":" "
                  }
                ]
              },
              "rawText":"#include <stdint.h> ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "includ":1,
                    "stdint":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>in the enumerate.c file. This will get you past this error, but it's most likely you'll have to add this line to more than one file.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[5485841]-[2058845249]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>in the enumerate.c file. This will get you past this error, but it's most likely you'll have to add this line to more than one file.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "enumer":1,
                    "line":1,
                    "error":1,
                    "file":2,
                    "add":1,
                    "past":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}