{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":15409727,
    "title":"Missing some absolute methods on ByteBuffer",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":21788964,
        "postId":15409727,
        "creationDate":"2013-03-14",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1504556,
          "displayName":"nolan6000",
          "reputation":2251
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Just a follow-up. Have found this http://thesoftwarelife.blogspot.dk/2009/10/java-bytebuffer-annoyances.html which seems to be complaining about roughly the same thing."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15409727-cu21788964]-[-79550997]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Just a follow-up. Have found this http://thesoftwarelife.blogspot.dk/2009/10/java-bytebuffer-annoyances.html which seems to be complaining about roughly the same thing."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "complain":1,
                      "annoy":1,
                      "bytebuff":1,
                      "thing":1,
                      "blogspot":1,
                      "found":1,
                      "thesoftwarelif":1,
                      "rough":1,
                      "html":1,
                      "http":1,
                      "follow":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21797012,
        "postId":15409727,
        "creationDate":"2013-03-14",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":964243,
          "displayName":"Boann",
          "reputation":17229
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I'd argue that the absolute methods are more useful and important than the relative ones. If I were redesigning that API, I'd leave out all of position, flip, rewind, mark, reset, and so on and focus on providing just the memory access, leaving it as basically a heavyweight array with C `union`-like features."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15409727-cu21797012]-[1642595512]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I'd argue that the absolute methods are more useful and important than the relative ones. If I were redesigning that API, I'd leave out all of position, flip, rewind, mark, reset, and so on and focus on providing just the memory access, leaving it as basically a heavyweight array with C `union`-like features."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "provid":1,
                      "method":1,
                      "union":1,
                      "relat":1,
                      "argu":1,
                      "leav":2,
                      "array":1,
                      "heavyweight":1,
                      "import":1,
                      "focus":1,
                      "flip":1,
                      "redesign":1,
                      "posit":1,
                      "absolut":1,
                      "reset":1,
                      "api":1,
                      "featur":1,
                      "mark":1,
                      "basic":1,
                      "rewind":1,
                      "access":1,
                      "memori":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":21798461,
        "postId":15409727,
        "creationDate":"2013-03-14",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":1504556,
          "displayName":"nolan6000",
          "reputation":2251
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Boann - so would I. Exactly the way I think of it."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[15409727-cu21798461]-[-1138013730]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Boann - so would I. Exactly the way I think of it."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Boann",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "boann":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java"
    ],
    "creationDate":"2013-03-14",
    "lastActivityDate":"2013-03-14",
    "lastEditDate":"2013-03-14",
    "score":4,
    "viewCount":522,
    "owner":{
      "type":"StackOverflowUser",
      "id":1504556,
      "displayName":"nolan6000",
      "reputation":2251
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Perhaps I'm going about this the wrong way but I'm missing some <em>absolute</em> put methods on <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\"rel=\"nofollow\"><code>ByteBuffer</code></a>.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-1553096955]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Perhaps I'm going about this the wrong way but I'm missing some <em>absolute</em> put methods on <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\"rel=\"nofollow\"><code>ByteBuffer</code></a>.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "wrong":1,
                  "rel":1,
                  "oracl":1,
                  "nio":1,
                  "buffer":2,
                  "doc":2,
                  "miss":1,
                  "code":2,
                  "nofollow":1,
                  "javas":1,
                  "absolut":1,
                  "put":1,
                  "api":1,
                  "html":1,
                  "href":1,
                  "http":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>If you look at <code>ByteBuffer</code> you'll see that most of the put methods have both an absolute and a relative variant.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[1465862470]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>If you look at <code>ByteBuffer</code> you'll see that most of the put methods have both an absolute and a relative variant.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "relat":1,
                  "variant":1,
                  "buffer":1,
                  "code":2,
                  "absolut":1,
                  "put":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Except for:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-755598513]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Except for:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<ul> \n <li>Writing parts of a <code>byte</code> array into the <code>ByteBuffer</code>. </li> \n <li>Writing a <code>ByteBuffer</code> into the <code>ByteBuffer</code>.</li> \n</ul>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[1918392971]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<ul> \n <li>Writing parts of a <code>byte</code> array into the <code>ByteBuffer</code>. </li> \n <li>Writing a <code>ByteBuffer</code> into the <code>ByteBuffer</code>.</li> \n</ul>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "buffer":3,
                  "code":8,
                  "array":1,
                  "part":1,
                  "write":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>..and I need exactly those.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-2081195146]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>..and I need exactly those.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>To be clear <code>ByteBuffer</code> has methods:</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[278665155]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>To be clear <code>ByteBuffer</code> has methods:</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "clear":1,
                  "buffer":1,
                  "method":1,
                  "code":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":" put(byte[] src, int offset, int length) put(ByteBuffer src) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[15409727]-[-574277251]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":" put(byte[] src, int offset, int length) put("
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"src) "
                }
              ]
            },
            "rawText":" put(byte[] src, int offset, int length) put(ByteBuffer src) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "buffer":1,
                  "offset":1,
                  "src":2,
                  "put":2,
                  "length":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>but is lacking: </p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-1803917217]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>but is lacking: </p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "lack":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlNode",
          "name":{
            "type":"XmlNameNode",
            "value":"pre"
          },
          "attributes":[
            
          ],
          "elements":[
            {
              "type":"XmlNode",
              "name":{
                "type":"XmlNameNode",
                "value":"code"
              },
              "attributes":[
                
              ],
              "elements":[
                {
                  "type":"XmlTextNode",
                  "contents":" put(int index, byte[] src, int offset, int length) put(int index, ByteBuffer src) "
                }
              ]
            }
          ]
        },
        "units":[
          {
            "type":"StructuredFragmentUnit",
            "id":"[15409727]-[-1422689285]",
            "astNode":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"TextFragmentNode",
                  "text":" put(int index, byte[] src, int offset, int length) put(int index, "
                },
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                },
                {
                  "type":"TextFragmentNode",
                  "text":"src) "
                }
              ]
            },
            "rawText":" put(int index, byte[] src, int offset, int length) put(int index, ByteBuffer src) ",
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "buffer":1,
                  "offset":1,
                  "src":2,
                  "put":2,
                  "length":1,
                  "index":2
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I have reasons why I do not want to move the buffer's position pointer, hence I only want to use absolute put methods.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-2042117303]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I have reasons why I do not want to move the buffer's position pointer, hence I only want to use absolute put methods.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":1,
                  "move":1,
                  "pointer":1,
                  "buffer":1,
                  "reason":1,
                  "posit":1,
                  "absolut":1,
                  "put":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Any idea why those methods have been left out?</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[-228021749]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Any idea why those methods have been left out?</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "idea":1,
                  "method":1,
                  "left":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I can of course mimic the missing methods without moving the buffer's position pointer but that will involve looping over the source bytes. The Javadoc clearly states that theses methods are (potentially) much more efficient than moving than looping and moving the bytes one-by-one. I believe the Javadoc because my tests indicate the same. I need to squeeze out as much speed I can from my implementation so therefore I'm of course inclined to take advantage of whatever bulk methods I can get my hands on .... if only they existed.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[1837009808]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I can of course mimic the missing methods without moving the buffer's position pointer but that will involve looping over the source bytes. The Javadoc clearly states that theses methods are (potentially) much more efficient than moving than looping and moving the bytes one-by-one. I believe the Javadoc because my tests indicate the same. I need to squeeze out as much speed I can from my implementation so therefore I'm of course inclined to take advantage of whatever bulk methods I can get my hands on .... if only they existed.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":3,
                  "test":1,
                  "involv":1,
                  "move":3,
                  "loop":2,
                  "mimic":1,
                  "bulk":1,
                  "pointer":1,
                  "exist":1,
                  "state":1,
                  "squeez":1,
                  "hand":1,
                  "potenti":1,
                  "effici":1,
                  "buffer":1,
                  "inclin":1,
                  "miss":1,
                  "these":1,
                  "advantag":1,
                  "posit":1,
                  "implement":1,
                  "byte":2,
                  "sourc":1,
                  "javadoc":2,
                  "speed":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Incedentially <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\"rel=\"nofollow\"><code>ByteBuffer</code></a> is also missing an absolute <code>get</code> method for partial byte array move. But I don't actually need such a method currently. But again strange it doesn't exist.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[15409727]-[1282438590]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Incedentially <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html\"rel=\"nofollow\"><code>ByteBuffer</code></a> is also missing an absolute <code>get</code> method for partial byte array move. But I don't actually need such a method currently. But again strange it doesn't exist.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                {
                  "type":"ReferenceTypeNode",
                  "ids":[
                    {
                      "type":"ParameterizedTypeNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ByteBuffer",
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ],
                  "comments":[
                    
                  ]
                }
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "method":2,
                  "move":1,
                  "partial":1,
                  "exist":1,
                  "rel":1,
                  "oracl":1,
                  "incedenti":1,
                  "nio":1,
                  "buffer":2,
                  "doc":2,
                  "miss":1,
                  "code":4,
                  "array":1,
                  "nofollow":1,
                  "javas":1,
                  "absolut":1,
                  "api":1,
                  "html":1,
                  "href":1,
                  "http":1,
                  "strang":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":15415124,
      "questionId":15409727,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21798801,
          "postId":15415124,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1504556,
            "displayName":"nolan6000",
            "reputation":2251
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Agree. It looks sweet. I'll have to test if the performance impact of the object creation is negligible or not. If using this solution I would execute the above for each and every write operation I want to do. Seems like a lot of overhead but sometimes we (or more correctly myself) see performance problems where there are none. :-). Thanks for the tip."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15415124-cu21798801]-[-806969340]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Agree. It looks sweet. I'll have to test if the performance impact of the object creation is negligible or not. If using this solution I would execute the above for each and every write operation I want to do. Seems like a lot of overhead but sometimes we (or more correctly myself) see performance problems where there are none. :-). Thanks for the tip."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sweet":1,
                        "test":1,
                        "problem":1,
                        "correct":1,
                        "impact":1,
                        "creation":1,
                        "object":1,
                        "overhead":1,
                        "oper":1,
                        "neglig":1,
                        "perform":2,
                        "lot":1,
                        "agre":1,
                        "tip":1,
                        "solut":1,
                        "write":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21797204,
          "postId":15415124,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":964243,
            "displayName":"Boann",
            "reputation":17229
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Although it has a little object creation overhead, this is the best solution I reckon. It's short and sweet and does the job."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15415124-cu21797204]-[830367675]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Although it has a little object creation overhead, this is the best solution I reckon. It's short and sweet and does the job."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "sweet":1,
                        "job":1,
                        "creation":1,
                        "object":1,
                        "overhead":1,
                        "reckon":1,
                        "solut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-03-14",
      "lastActivityDate":"2013-03-14",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1860309,
        "displayName":"Boris Brodski",
        "reputation":3414
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>In my opinion, those methods where left out, since no other such methods exists. There are bunch of absolute methods taking primitives including &quot;byte&quot;, but no absolute methods taking <em>array</em> of primitives.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15415124]-[-723966832]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>In my opinion, those methods where left out, since no other such methods exists. There are bunch of absolute methods taking primitives including &quot;byte&quot;, but no absolute methods taking <em>array</em> of primitives.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":4,
                    "exist":1,
                    "left":1,
                    "bunch":1,
                    "includ":1,
                    "array":1,
                    "take":2,
                    "opinion":1,
                    "absolut":2,
                    "quot":2,
                    "primit":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>The solution could be:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15415124]-[-604176949]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>The solution could be:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "solut":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"((ByteBuffer)buffer.duplicate().position(index)).put(src, offset, length); ((ByteBuffer)buffer.duplicate().position(index)).put(otherByteBuffer); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[15415124]-[1471862413]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"CastExpressionNode",
                        "aType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "argument":{
                          "type":"BinaryExpressionNode",
                          "operator":{
                            "type":"OperatorNode",
                            "symbol":".",
                            "comments":[
                              
                            ]
                          },
                          "left":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"duplicate",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "right":{
                            "type":"MethodInvocationNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"index",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"put",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"src",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"offset",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"length",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  },
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"CastExpressionNode",
                        "aType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "argument":{
                          "type":"BinaryExpressionNode",
                          "operator":{
                            "type":"OperatorNode",
                            "symbol":".",
                            "comments":[
                              
                            ]
                          },
                          "left":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"duplicate",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "right":{
                            "type":"MethodInvocationNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"index",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"put",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"otherByteBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  }
                ]
              },
              "rawText":"((ByteBuffer)buffer.duplicate().position(index)).put(src, offset, length); ((ByteBuffer)buffer.duplicate().position(index)).put(otherByteBuffer); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "buffer":5,
                    "offset":1,
                    "src":1,
                    "posit":2,
                    "put":2,
                    "length":1,
                    "duplic":2,
                    "index":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"buffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"duplicate",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"index",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"src",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"offset",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"length",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"otherByteBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":15413175,
      "questionId":15409727,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21796521,
          "postId":15413175,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1504556,
            "displayName":"nolan6000",
            "reputation":2251
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Sorry, not a solution. You are shifting the destination's position pointer (because you do `buffer.position(index)`) which means your solution does not have the characteristics of an absolute put method. (which is that it leaves the position pointer unchanged)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15413175-cu21796521]-[-1380355910]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Sorry, not a solution. You are shifting the destination's position pointer (because you do `buffer.position(index)`) which means your solution does not have the characteristics of an absolute put method. (which is that it leaves the position pointer unchanged)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "pointer":2,
                        "characterist":1,
                        "shift":1,
                        "mean":1,
                        "buffer":1,
                        "leav":1,
                        "posit":3,
                        "absolut":1,
                        "put":1,
                        "destin":1,
                        "solut":2,
                        "unchang":1,
                        "index":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21796563,
          "postId":15413175,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":869736,
            "displayName":"Louis Wasserman",
            "reputation":77769
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@nolan6000: You're putting the destination's position pointer exactly back where it started, which is indeed a perfectly valid solution to this problem. +1 for this legit solution."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15413175-cu21796563]-[-749415114]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@nolan6000: You're putting the destination's position pointer exactly back where it started, which is indeed a perfectly valid solution to this problem. +1 for this legit solution."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "nolan":1,
                        "pointer":1,
                        "problem":1,
                        "perfect":1,
                        "back":1,
                        "posit":1,
                        "valid":1,
                        "put":1,
                        "start":1,
                        "destin":1,
                        "legit":1,
                        "solut":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21796590,
          "postId":15413175,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2158288,
            "displayName":"bayou.io",
            "reputation":3910
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@nolan6000 uh? the position is changed back to it's origin value."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15413175-cu21796590]-[-490351274]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@nolan6000 uh? the position is changed back to it's origin value."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "nolan":1,
                        "chang":1,
                        "origin":1,
                        "back":1,
                        "posit":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21799277,
          "postId":15413175,
          "creationDate":"2013-03-14",
          "score":2,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2158288,
            "displayName":"bayou.io",
            "reputation":3910
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@nolan6000 ByteBuffer is not expected to be thread safe. If your requirements include thread safety, your question should have pointed that out. Now if thread safety is required, we need to ask whether `duplicate()` is thread safe if the solution uses it. It certainly should be, but there's no guaranteed in javadoc."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15413175-cu21799277]-[-444448127]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@nolan6000 ByteBuffer is not expected to be thread safe. If your requirements include thread safety, your question should have pointed that out. Now if thread safety is required, we need to ask whether `duplicate()` is thread safe if the solution uses it. It certainly should be, but there's no guaranteed in javadoc."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ByteBuffer",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "nolan":1,
                        "question":1,
                        "point":1,
                        "requir":2,
                        "buffer":1,
                        "safe":2,
                        "includ":1,
                        "guarante":1,
                        "thread":4,
                        "safeti":2,
                        "expect":1,
                        "duplic":1,
                        "solut":1,
                        "javadoc":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21798410,
          "postId":15413175,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1504556,
            "displayName":"nolan6000",
            "reputation":2251
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Nope, you are CHANGING the position pointer. Perhaps only a microsecond, but you are CHANGING it !! (doesn't matter that you put it back to the original value)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15413175-cu21798410]-[767894202]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Nope, you are CHANGING the position pointer. Perhaps only a microsecond, but you are CHANGING it !! (doesn't matter that you put it back to the original value)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "chang":2,
                        "pointer":1,
                        "nope":1,
                        "origin":1,
                        "back":1,
                        "posit":1,
                        "put":1,
                        "matter":1,
                        "microsecond":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-03-14",
      "lastActivityDate":"2013-03-14",
      "score":2,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":2158288,
        "displayName":"bayou.io",
        "reputation":3910
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"static void put(ByteBuffer buffer, int index, ByteBuffer src) { int p0 = buffer.position(); buffer.position(index); buffer.put(src); buffer.position(p0); } "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[15413175]-[-686801781]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"MethodDeclaratorNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "returnType":{
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"put",
                      "comments":[
                        
                      ]
                    },
                    "parameters":{
                      "type":"FormalParametersNode",
                      "parameters":{
                        "type":"FormalParameterDeclsNode",
                        "modifiers":[
                          
                        ],
                        "parameterType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "nextDeclarator":{
                          "type":"AdditionalFormalParameterDeclNode",
                          "variableDeclarator":{
                            "type":"VariableDeclaratorNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"buffer",
                              "comments":[
                                
                              ]
                            },
                            "arrayDepth":[
                              
                            ]
                          },
                          "formalParameterDeclarator":{
                            "type":"FormalParameterDeclsNode",
                            "modifiers":[
                              
                            ],
                            "parameterType":{
                              "type":"PrimitiveTypeNode",
                              "name":"int",
                              "comments":[
                                
                              ]
                            },
                            "nextDeclarator":{
                              "type":"AdditionalFormalParameterDeclNode",
                              "variableDeclarator":{
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"index",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ]
                              },
                              "formalParameterDeclarator":{
                                "type":"FormalParameterDeclsNode",
                                "modifiers":[
                                  
                                ],
                                "parameterType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"ByteBuffer",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "nextDeclarator":{
                                  "type":"AdditionalFormalParameterDeclNode",
                                  "variableDeclarator":{
                                    "type":"VariableDeclaratorNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"src",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "arrayDepth":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "arrayReturnType":[
                      
                    ],
                    "body":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"LocalVariableDeclarationStatementNode",
                          "modifiers":[
                            
                          ],
                          "declarators":{
                            "type":"VariableDeclaratorsNode",
                            "declarators":[
                              {
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"p0",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ],
                                "assignment":{
                                  "type":"VariableAssignmentNode",
                                  "variableAssignment":{
                                    "type":"VariableExpressionInitNode",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "qualifiedIdentifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"buffer",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"position",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "varType":{
                                  "type":"PrimitiveTypeNode",
                                  "name":"int",
                                  "comments":[
                                    
                                  ]
                                }
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"index",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"put",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"src",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"p0",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "rawText":"static void put(ByteBuffer buffer, int index, ByteBuffer src) { int p0 = buffer.position(); buffer.position(index); buffer.put(src); buffer.position(p0); } ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "buffer":7,
                    "src":2,
                    "posit":3,
                    "put":2,
                    "index":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"int",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"buffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"buffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"index",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"buffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"src",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"buffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"p0",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"buffer",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"index",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"src",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"p0",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"buffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"PrimitiveTypeNode",
                        "name":"int",
                        "comments":[
                          
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":15414839,
      "questionId":15409727,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":21796553,
          "postId":15414839,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2158288,
            "displayName":"bayou.io",
            "reputation":3910
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"It's interesting that you are very concerned with concurrency. Though ByteBuffer is not intended to be used concurrently, and there's no guarantee that any of its methods, even absolute get, are thread safe, we can still reasonably assume some concurrency and use the buffer concurrently, in some particular applications. (most apps use ByteBuffer non concurrently)"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15414839-cu21796553]-[-2091778122]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"It's interesting that you are very concerned with concurrency. Though ByteBuffer is not intended to be used concurrently, and there's no guarantee that any of its methods, even absolute get, are thread safe, we can still reasonably assume some concurrency and use the buffer concurrently, in some particular applications. (most apps use ByteBuffer non concurrently)"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ByteBuffer",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ByteBuffer",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "method":1,
                        "assum":1,
                        "concurr":5,
                        "buffer":3,
                        "safe":1,
                        "concern":1,
                        "guarante":1,
                        "intend":1,
                        "thread":1,
                        "interest":1,
                        "applic":1,
                        "absolut":1,
                        "app":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":21796729,
          "postId":15414839,
          "creationDate":"2013-03-14",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":1504556,
            "displayName":"nolan6000",
            "reputation":2251
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Boann. Thank you for that. I was kind of pursuing the slice route myself but I end up with a zillion ByteBuffers which all have to live somewhere. What still puzzles me is why these methods are lacking. Perhaps there's something I've missed. And yes, I'm unfortunately in a situation where I'm using direct buffers, otherwise I concur that the `System.arraycopy()` solution would be good."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[15414839-cu21796729]-[-161596626]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Boann. Thank you for that. I was kind of pursuing the slice route myself but I end up with a zillion ByteBuffers which all have to live somewhere. What still puzzles me is why these methods are lacking. Perhaps there's something I've missed. And yes, I'm unfortunately in a situation where I'm using direct buffers, otherwise I concur that the `System.arraycopy()` solution would be good."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Boann",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ByteBuffers",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "puzzl":1,
                        "method":1,
                        "system":1,
                        "good":1,
                        "boann":1,
                        "pursu":1,
                        "buffer":2,
                        "zillion":1,
                        "concur":1,
                        "rout":1,
                        "direct":1,
                        "miss":1,
                        "situat":1,
                        "live":1,
                        "lack":1,
                        "slice":1,
                        "end":1,
                        "kind":1,
                        "arraycopi":1,
                        "solut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffers",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2013-03-14",
      "lastActivityDate":"2013-03-14",
      "lastEditDate":"2013-03-14",
      "score":3,
      "isAccepted":true,
      "owner":{
        "type":"StackOverflowUser",
        "id":964243,
        "displayName":"Boann",
        "reputation":17229
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>One way to get the methods you need is to have a second ByteBuffer sharing the same memory, so you can change its position without changing the position of the original.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[1830325981]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>One way to get the methods you need is to have a second ByteBuffer sharing the same memory, so you can change its position without changing the position of the original.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"ByteBuffer",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "chang":2,
                    "method":1,
                    "buffer":1,
                    "share":1,
                    "origin":1,
                    "posit":2,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Unfortunately, the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#slice%28%29\"rel=\"nofollow\"><code>slice</code></a> method does not take a position parameter either; instead it uses the current position of the original buffer. So you cannot do:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[195081673]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Unfortunately, the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#slice%28%29\"rel=\"nofollow\"><code>slice</code></a> method does not take a position parameter either; instead it uses the current position of the original buffer. So you cannot do:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "rel":1,
                    "oracl":1,
                    "nio":1,
                    "buffer":2,
                    "doc":2,
                    "code":2,
                    "paramet":1,
                    "nofollow":1,
                    "origin":1,
                    "slice":2,
                    "posit":2,
                    "javas":1,
                    "api":1,
                    "html":1,
                    "href":1,
                    "current":1,
                    "http":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlNode",
            "name":{
              "type":"XmlNameNode",
              "value":"pre"
            },
            "attributes":[
              
            ],
            "elements":[
              {
                "type":"XmlNode",
                "name":{
                  "type":"XmlNameNode",
                  "value":"code"
                },
                "attributes":[
                  
                ],
                "elements":[
                  {
                    "type":"XmlTextNode",
                    "contents":"dstBuffer.slice(100).put(srcBuffer); "
                  }
                ]
              }
            ]
          },
          "units":[
            {
              "type":"StructuredFragmentUnit",
              "id":"[15414839]-[1087925402]",
              "astNode":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"MethodInvocationNode",
                        "qualifiedIdentifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"dstBuffer",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"slice",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"LiteralNode",
                              "node":{
                                "type":"IntegerLiteralNode",
                                "valueRep":"100"
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"put",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  }
                ]
              },
              "rawText":"dstBuffer.slice(100).put(srcBuffer); ",
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "dst":1,
                    "buffer":2,
                    "slice":1,
                    "src":1,
                    "put":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"slice",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"IntegerLiteralNode",
                              "valueRep":"100"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"srcBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>Here are some ideas, in no particular order except it's the order I thought of them:</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[-1035988102]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>Here are some ideas, in no particular order except it's the order I thought of them:</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "order":2,
                    "idea":1,
                    "thought":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li><p>If it fits with the way you're using the buffer, you can prepare a copy of the buffer with <code>slice()</code> and keep that around for when you need to put data at a position independent of the original's position.</p></li> \n <li><p>If the position you want to absolute put at is always greater or equal to the original buffer's position pointer, you can do:</p> <pre><code>dstBuffer.slice().position(desiredPosition - dstBuffer.position()).put(srcBuffer); </code></pre></li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[1451616495]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li><p>If it fits with the way you're using the buffer, you can prepare a copy of the buffer with <code>slice()</code> and keep that around for when you need to put data at a position independent of the original's position.</p></li> \n <li><p>If the position you want to absolute put at is always greater or equal to the original buffer's position pointer, you can do:</p> <pre><code>dstBuffer.slice().position(desiredPosition - dstBuffer.position()).put(srcBuffer); </code></pre></li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"BinaryExpressionNode",
                      "operator":{
                        "type":"OperatorNode",
                        "symbol":".",
                        "comments":[
                          
                        ]
                      },
                      "left":{
                        "type":"BinaryExpressionNode",
                        "operator":{
                          "type":"OperatorNode",
                          "symbol":".",
                          "comments":[
                            
                          ]
                        },
                        "left":{
                          "type":"MethodInvocationNode",
                          "qualifiedIdentifier":{
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"dstBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"slice",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "right":{
                          "type":"MethodInvocationNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"position",
                            "comments":[
                              
                            ]
                          },
                          "args":{
                            "type":"ExpressionListNode",
                            "arguments":[
                              {
                                "type":"BinaryExpressionNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":"-",
                                  "comments":[
                                    
                                  ]
                                },
                                "left":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"desiredPosition",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "right":{
                                  "type":"MethodInvocationNode",
                                  "qualifiedIdentifier":{
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"dstBuffer",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"position",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "args":{
                                    "type":"ExpressionListNode",
                                    "arguments":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "right":{
                        "type":"MethodInvocationNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"put",
                          "comments":[
                            
                          ]
                        },
                        "args":{
                          "type":"ExpressionListNode",
                          "arguments":[
                            {
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pre":2,
                    "dst":2,
                    "pointer":1,
                    "fit":1,
                    "data":1,
                    "buffer":6,
                    "code":4,
                    "equal":1,
                    "independ":1,
                    "origin":2,
                    "slice":2,
                    "src":1,
                    "posit":7,
                    "absolut":1,
                    "put":3,
                    "prepar":1,
                    "desir":1,
                    "greater":1,
                    "copi":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"slice",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"-",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"desiredPosition",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"dstBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"position",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"srcBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>\n <strike>\n  That won't work to put at an earlier position, unfortunately, since the position on the slice is not allowed to be negative.\n </strike> <strong>EDIT</strong>: Never mind, I forgot about the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#duplicate%28%29\"rel=\"nofollow\">duplicate</a> method. See @BorisBrodski's great answer.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[1672056550]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>\n <strike>\n  That won't work to put at an earlier position, unfortunately, since the position on the slice is not allowed to be negative.\n </strike> <strong>EDIT</strong>: Never mind, I forgot about the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#duplicate%28%29\"rel=\"nofollow\">duplicate</a> method. See @BorisBrodski's great answer.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"AnnotationNode",
                    "identifier":{
                      "type":"QualifiedIdentifierNode",
                      "identifiers":[
                        {
                          "type":"IdentifierNode",
                          "name":"BorisBrodski",
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "negat":1,
                    "strike":2,
                    "bori":1,
                    "rel":1,
                    "earlier":1,
                    "oracl":1,
                    "nio":1,
                    "buffer":1,
                    "strong":2,
                    "doc":2,
                    "work":1,
                    "edit":1,
                    "nofollow":1,
                    "mind":1,
                    "allow":1,
                    "forgot":1,
                    "slice":1,
                    "posit":2,
                    "javas":1,
                    "put":1,
                    "answer":1,
                    "api":1,
                    "duplic":2,
                    "html":1,
                    "href":1,
                    "http":1,
                    "great":1,
                    "brodski":1,
                    "won":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li><p>If you are not using direct byte buffers, System.arraycopy is easy and fast:</p> <pre><code>System.arraycopy( srcBuffer.array(), srcBuffer.arrayOffset() + srcBuffer.position(), dstBuffer.array(), dstBuffer.arrayOffset() + desiredPosition, srcBuffer.remaining() ); </code></pre></li> \n <li><p>If concurrent access is not necessary, then you can temporarily change the buffer's position when you need to do an absolute put and put it back afterwards. If you need concurrent access but the thread contention is low, you can synchronize all access to the buffer (maybe obvious, but included for completeness):</p> <pre><code>synchronize (lock) { int originalPosition = dstBuffer.position(); dstBuffer.position(desiredPosition); dstBuffer.put(srcBuffer); dstBuffer.position(originalPosition); } </code></pre></li> \n <li><p>If none of the other ideas work for you, you can hack the buffer. This is messy, but here's an example:</p> <pre><code>private static final sun.misc.Unsafe UNSAFE; static { Object result = null; try { Class&lt;?&gt; klass = Class.forName(&quot;sun.misc.Unsafe&quot;); for (Field field : klass.getDeclaredFields()) { if (field.getType() == klass &amp;&amp; (field.getModifiers() &amp; (Modifier.FINAL | Modifier.STATIC)) == (Modifier.FINAL | Modifier.STATIC)) { field.setAccessible(true); result = field.get(null); break; } } } catch (Throwable t) {} UNSAFE = result == null ? null : (sun.misc.Unsafe)result; } private static final Field ADDRESS_FIELD; static { Field f; try { f = Buffer.class.getDeclaredField(&quot;address&quot;); f.setAccessible(true); } catch (NoSuchFieldException | SecurityException e) { f = null; } ADDRESS_FIELD = f; } public static void absolutePut(ByteBuffer dstBuffer, int dstPosition, ByteBuffer srcBuffer) { if (!srcBuffer.isDirect()) { absolutePut(dstBuffer, dstPosition, srcBuffer.array(), srcBuffer.arrayOffset() + srcBuffer.position(), srcBuffer.remaining()); return; } if (UNSAFE != null &amp;&amp; ADDRESS_FIELD != null &amp;&amp; dstBuffer.isDirect()) { try { long dstAddress = (long)ADDRESS_FIELD.get(dstBuffer) + dstPosition; long srcAddress = (long)ADDRESS_FIELD.get(srcBuffer) + srcBuffer.position(); UNSAFE.copyMemory(srcAddress, dstAddress, srcBuffer.remaining()); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } else { // fallback to basic loop for (int i = srcBuffer.position(); i &lt; srcBuffer.limit(); i++) { dstBuffer.put(dstPosition + i, srcBuffer.get(i)); } } } public static void absolutePut(ByteBuffer dstBuffer, int dstPosition, byte[] src, int srcOffset, int length) { if (UNSAFE != null &amp;&amp; ADDRESS_FIELD != null &amp;&amp; dstBuffer.isDirect()) { try { long dstAddress = (long)ADDRESS_FIELD.get(dstBuffer) + dstPosition; UNSAFE.copyMemory( src, UNSAFE.arrayBaseOffset(byte[].class) + srcOffset, null, dstAddress, length); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } else { // fallback to System.arraycopy System.arraycopy( src, srcOffset, dstBuffer.array(), dstBuffer.arrayOffset() + dstPosition, length); } } </code></pre></li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[1026905318]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li><p>If you are not using direct byte buffers, System.arraycopy is easy and fast:</p> <pre><code>System.arraycopy( srcBuffer.array(), srcBuffer.arrayOffset() + srcBuffer.position(), dstBuffer.array(), dstBuffer.arrayOffset() + desiredPosition, srcBuffer.remaining() ); </code></pre></li> \n <li><p>If concurrent access is not necessary, then you can temporarily change the buffer's position when you need to do an absolute put and put it back afterwards. If you need concurrent access but the thread contention is low, you can synchronize all access to the buffer (maybe obvious, but included for completeness):</p> <pre><code>synchronize (lock) { int originalPosition = dstBuffer.position(); dstBuffer.position(desiredPosition); dstBuffer.put(srcBuffer); dstBuffer.position(originalPosition); } </code></pre></li> \n <li><p>If none of the other ideas work for you, you can hack the buffer. This is messy, but here's an example:</p> <pre><code>private static final sun.misc.Unsafe UNSAFE; static { Object result = null; try { Class&lt;?&gt; klass = Class.forName(&quot;sun.misc.Unsafe&quot;); for (Field field : klass.getDeclaredFields()) { if (field.getType() == klass &amp;&amp; (field.getModifiers() &amp; (Modifier.FINAL | Modifier.STATIC)) == (Modifier.FINAL | Modifier.STATIC)) { field.setAccessible(true); result = field.get(null); break; } } } catch (Throwable t) {} UNSAFE = result == null ? null : (sun.misc.Unsafe)result; } private static final Field ADDRESS_FIELD; static { Field f; try { f = Buffer.class.getDeclaredField(&quot;address&quot;); f.setAccessible(true); } catch (NoSuchFieldException | SecurityException e) { f = null; } ADDRESS_FIELD = f; } public static void absolutePut(ByteBuffer dstBuffer, int dstPosition, ByteBuffer srcBuffer) { if (!srcBuffer.isDirect()) { absolutePut(dstBuffer, dstPosition, srcBuffer.array(), srcBuffer.arrayOffset() + srcBuffer.position(), srcBuffer.remaining()); return; } if (UNSAFE != null &amp;&amp; ADDRESS_FIELD != null &amp;&amp; dstBuffer.isDirect()) { try { long dstAddress = (long)ADDRESS_FIELD.get(dstBuffer) + dstPosition; long srcAddress = (long)ADDRESS_FIELD.get(srcBuffer) + srcBuffer.position(); UNSAFE.copyMemory(srcAddress, dstAddress, srcBuffer.remaining()); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } else { // fallback to basic loop for (int i = srcBuffer.position(); i &lt; srcBuffer.limit(); i++) { dstBuffer.put(dstPosition + i, srcBuffer.get(i)); } } } public static void absolutePut(ByteBuffer dstBuffer, int dstPosition, byte[] src, int srcOffset, int length) { if (UNSAFE != null &amp;&amp; ADDRESS_FIELD != null &amp;&amp; dstBuffer.isDirect()) { try { long dstAddress = (long)ADDRESS_FIELD.get(dstBuffer) + dstPosition; UNSAFE.copyMemory( src, UNSAFE.arrayBaseOffset(byte[].class) + srcOffset, null, dstAddress, length); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } else { // fallback to System.arraycopy System.arraycopy( src, srcOffset, dstBuffer.array(), dstBuffer.arrayOffset() + dstPosition, length); } } </code></pre></li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ExpressionStatement",
                    "expression":{
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"arraycopy",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"array",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"arrayOffset",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"position",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"array",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"dstBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"arrayOffset",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"desiredPosition",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"remaining",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    "labels":[
                      {
                        "type":"LabelNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"fast",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  {
                    "type":"BlockDeclarationNode",
                    "modifiers":[
                      
                    ],
                    "block":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"LocalVariableDeclarationStatementNode",
                          "modifiers":[
                            
                          ],
                          "declarators":{
                            "type":"VariableDeclaratorsNode",
                            "declarators":[
                              {
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"originalPosition",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ],
                                "assignment":{
                                  "type":"VariableAssignmentNode",
                                  "variableAssignment":{
                                    "type":"VariableExpressionInitNode",
                                    "expression":{
                                      "type":"MethodInvocationNode",
                                      "qualifiedIdentifier":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"dstBuffer",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"position",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "varType":{
                                  "type":"PrimitiveTypeNode",
                                  "name":"int",
                                  "comments":[
                                    
                                  ]
                                }
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"desiredPosition",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"put",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"srcBuffer",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"originalPosition",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"sun",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"misc",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"Unsafe",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"BlockDeclarationNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "block":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"LocalVariableDeclarationStatementNode",
                          "modifiers":[
                            
                          ],
                          "declarators":{
                            "type":"VariableDeclaratorsNode",
                            "declarators":[
                              {
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"result",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ],
                                "assignment":{
                                  "type":"VariableAssignmentNode",
                                  "variableAssignment":{
                                    "type":"VariableExpressionInitNode",
                                    "expression":{
                                      "type":"LiteralNode",
                                      "node":{
                                        "type":"NullLiteralNode"
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "varType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"Object",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"TryCatchStatementNode",
                          "block":{
                            "type":"BlockNode",
                            "statements":[
                              {
                                "type":"LocalVariableDeclarationStatementNode",
                                "modifiers":[
                                  
                                ],
                                "declarators":{
                                  "type":"VariableDeclaratorsNode",
                                  "declarators":[
                                    {
                                      "type":"VariableDeclaratorNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"klass",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "arrayDepth":[
                                        
                                      ],
                                      "assignment":{
                                        "type":"VariableAssignmentNode",
                                        "variableAssignment":{
                                          "type":"VariableExpressionInitNode",
                                          "expression":{
                                            "type":"MethodInvocationNode",
                                            "qualifiedIdentifier":{
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"Class",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"forName",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "args":{
                                              "type":"ExpressionListNode",
                                              "arguments":[
                                                {
                                                  "type":"LiteralNode",
                                                  "node":{
                                                    "type":"StringLiteralNode",
                                                    "valueRep":"\"sun.misc.Unsafe\""
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "varType":{
                                        "type":"ReferenceTypeNode",
                                        "ids":[
                                          {
                                            "type":"ParameterizedTypeNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"Class",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "typeArguments":{
                                              "type":"TypeArgumentsNode",
                                              "types":[
                                                {
                                                  "type":"WildcardTypeArgumentNode",
                                                  "operator":{
                                                    "type":"OperatorNode",
                                                    "symbol":"?",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      }
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              {
                                "type":"ForLoopStatementNode",
                                "forControl":{
                                  "type":"ForEachControlNode",
                                  "variable":{
                                    "type":"LocalVariableDeclarationStatementNode",
                                    "modifiers":[
                                      
                                    ],
                                    "declarators":{
                                      "type":"VariableDeclaratorsNode",
                                      "declarators":[
                                        {
                                          "type":"VariableDeclaratorNode",
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"field",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "arrayDepth":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "expression":{
                                    "type":"MethodInvocationNode",
                                    "qualifiedIdentifier":{
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"klass",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"getDeclaredFields",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "args":{
                                      "type":"ExpressionListNode",
                                      "arguments":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "statement":{
                                  "type":"BlockNode",
                                  "statements":[
                                    {
                                      "type":"IfStatementNode",
                                      "expression":{
                                        "type":"BinaryExpressionNode",
                                        "operator":{
                                          "type":"OperatorNode",
                                          "symbol":"&&",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "left":{
                                          "type":"BinaryExpressionNode",
                                          "operator":{
                                            "type":"OperatorNode",
                                            "symbol":"==",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "left":{
                                            "type":"MethodInvocationNode",
                                            "qualifiedIdentifier":{
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"field",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"getType",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "args":{
                                              "type":"ExpressionListNode",
                                              "arguments":[
                                                
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "right":{
                                            "type":"QualifiedIdentifierNode",
                                            "identifiers":[
                                              {
                                                "type":"IdentifierNode",
                                                "name":"klass",
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        },
                                        "right":{
                                          "type":"BinaryExpressionNode",
                                          "operator":{
                                            "type":"OperatorNode",
                                            "symbol":"==",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "left":{
                                            "type":"BinaryExpressionNode",
                                            "operator":{
                                              "type":"OperatorNode",
                                              "symbol":"&",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "left":{
                                              "type":"MethodInvocationNode",
                                              "qualifiedIdentifier":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"field",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"getModifiers",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "args":{
                                                "type":"ExpressionListNode",
                                                "arguments":[
                                                  
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "right":{
                                              "type":"BinaryExpressionNode",
                                              "operator":{
                                                "type":"OperatorNode",
                                                "symbol":"|",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "left":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"Modifier",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"FINAL",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "right":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"Modifier",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"STATIC",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "right":{
                                            "type":"BinaryExpressionNode",
                                            "operator":{
                                              "type":"OperatorNode",
                                              "symbol":"|",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "left":{
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"Modifier",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"FINAL",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "right":{
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"Modifier",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"STATIC",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "statement":{
                                        "type":"BlockNode",
                                        "statements":[
                                          {
                                            "type":"ExpressionStatement",
                                            "expression":{
                                              "type":"MethodInvocationNode",
                                              "qualifiedIdentifier":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"field",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"setAccessible",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "args":{
                                                "type":"ExpressionListNode",
                                                "arguments":[
                                                  {
                                                    "type":"LiteralNode",
                                                    "node":{
                                                      "type":"BooleanLiteralNode",
                                                      "valueRep":"true"
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "labels":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"ExpressionStatement",
                                            "expression":{
                                              "type":"BinaryExpressionNode",
                                              "operator":{
                                                "type":"OperatorNode",
                                                "symbol":"=",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "left":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"result",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "right":{
                                                "type":"MethodInvocationNode",
                                                "qualifiedIdentifier":{
                                                  "type":"QualifiedIdentifierNode",
                                                  "identifiers":[
                                                    {
                                                      "type":"IdentifierNode",
                                                      "name":"field",
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "identifier":{
                                                  "type":"IdentifierNode",
                                                  "name":"get",
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "args":{
                                                  "type":"ExpressionListNode",
                                                  "arguments":[
                                                    {
                                                      "type":"LiteralNode",
                                                      "node":{
                                                        "type":"NullLiteralNode"
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                },
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "labels":[
                                              
                                            ]
                                          },
                                          {
                                            "type":"BreakStatementNode",
                                            "labels":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "labels":[
                                          
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "labels":[
                                    
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "labels":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "catches":[
                            {
                              "type":"CatchClauseNode",
                              "modifiers":[
                                
                              ],
                              "catchType":{
                                "type":"CatchTypeNode",
                                "identifiers":[
                                  {
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"Throwable",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"t",
                                "comments":[
                                  
                                ]
                              },
                              "block":{
                                "type":"BlockNode",
                                "statements":[
                                  
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"=",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"UNSAFE",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"ConditionalExpressionNode",
                              "condition":{
                                "type":"BinaryExpressionNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":"==",
                                  "comments":[
                                    
                                  ]
                                },
                                "left":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"result",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "right":{
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"NullLiteralNode"
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "thenExp":{
                                "type":"LiteralNode",
                                "node":{
                                  "type":"NullLiteralNode"
                                },
                                "comments":[
                                  
                                ]
                              },
                              "elseExp":{
                                "type":"CastExpressionNode",
                                "aType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"sun",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"misc",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"Unsafe",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "argument":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"result",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"FieldDeclaratorNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"private",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"KeywordModifierNode",
                        "value":"final",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "variables":{
                      "type":"VariableDeclaratorsNode",
                      "declarators":[
                        {
                          "type":"VariableDeclaratorNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ADDRESS_FIELD",
                            "comments":[
                              
                            ]
                          },
                          "arrayDepth":[
                            
                          ],
                          "varType":{
                            "type":"ReferenceTypeNode",
                            "ids":[
                              {
                                "type":"ParameterizedTypeNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"Field",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"BlockDeclarationNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "block":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"LocalVariableDeclarationStatementNode",
                          "modifiers":[
                            
                          ],
                          "declarators":{
                            "type":"VariableDeclaratorsNode",
                            "declarators":[
                              {
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"f",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ],
                                "varType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"Field",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                }
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"TryCatchStatementNode",
                          "block":{
                            "type":"BlockNode",
                            "statements":[
                              {
                                "type":"ExpressionStatement",
                                "expression":{
                                  "type":"BinaryExpressionNode",
                                  "operator":{
                                    "type":"OperatorNode",
                                    "symbol":"=",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "left":{
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"f",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "right":{
                                    "type":"BinaryExpressionNode",
                                    "operator":{
                                      "type":"OperatorNode",
                                      "symbol":".",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "left":{
                                      "type":"ClassLiteralExpressionNode",
                                      "aType":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"Buffer",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "arrayDepths":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "right":{
                                      "type":"MethodInvocationNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"getDeclaredField",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "args":{
                                        "type":"ExpressionListNode",
                                        "arguments":[
                                          {
                                            "type":"LiteralNode",
                                            "node":{
                                              "type":"StringLiteralNode",
                                              "valueRep":"\"address\""
                                            },
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "labels":[
                                  
                                ]
                              },
                              {
                                "type":"ExpressionStatement",
                                "expression":{
                                  "type":"MethodInvocationNode",
                                  "qualifiedIdentifier":{
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"f",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"setAccessible",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "args":{
                                    "type":"ExpressionListNode",
                                    "arguments":[
                                      {
                                        "type":"LiteralNode",
                                        "node":{
                                          "type":"BooleanLiteralNode",
                                          "valueRep":"true"
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "labels":[
                                  
                                ]
                              }
                            ],
                            "labels":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "catches":[
                            {
                              "type":"CatchClauseNode",
                              "modifiers":[
                                
                              ],
                              "catchType":{
                                "type":"CatchTypeNode",
                                "identifiers":[
                                  {
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"NoSuchFieldException",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  {
                                    "type":"QualifiedIdentifierNode",
                                    "identifiers":[
                                      {
                                        "type":"IdentifierNode",
                                        "name":"SecurityException",
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"e",
                                "comments":[
                                  
                                ]
                              },
                              "block":{
                                "type":"BlockNode",
                                "statements":[
                                  {
                                    "type":"ExpressionStatement",
                                    "expression":{
                                      "type":"BinaryExpressionNode",
                                      "operator":{
                                        "type":"OperatorNode",
                                        "symbol":"=",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "left":{
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"f",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "right":{
                                        "type":"LiteralNode",
                                        "node":{
                                          "type":"NullLiteralNode"
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    },
                                    "labels":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ExpressionStatement",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"=",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"ADDRESS_FIELD",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"f",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    }
                  },
                  {
                    "type":"MethodDeclaratorNode",
                    "modifiers":[
                      {
                        "type":"KeywordModifierNode",
                        "value":"public",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"KeywordModifierNode",
                        "value":"static",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "returnType":{
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    "identifier":{
                      "type":"IdentifierNode",
                      "name":"absolutePut",
                      "comments":[
                        
                      ]
                    },
                    "parameters":{
                      "type":"FormalParametersNode",
                      "parameters":{
                        "type":"FormalParameterDeclsNode",
                        "modifiers":[
                          
                        ],
                        "parameterType":{
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ByteBuffer",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "nextDeclarator":{
                          "type":"AdditionalFormalParameterDeclNode",
                          "variableDeclarator":{
                            "type":"VariableDeclaratorNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"dstBuffer",
                              "comments":[
                                
                              ]
                            },
                            "arrayDepth":[
                              
                            ]
                          },
                          "formalParameterDeclarator":{
                            "type":"FormalParameterDeclsNode",
                            "modifiers":[
                              
                            ],
                            "parameterType":{
                              "type":"PrimitiveTypeNode",
                              "name":"int",
                              "comments":[
                                
                              ]
                            },
                            "nextDeclarator":{
                              "type":"AdditionalFormalParameterDeclNode",
                              "variableDeclarator":{
                                "type":"VariableDeclaratorNode",
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"dstPosition",
                                  "comments":[
                                    
                                  ]
                                },
                                "arrayDepth":[
                                  
                                ]
                              },
                              "formalParameterDeclarator":{
                                "type":"FormalParameterDeclsNode",
                                "modifiers":[
                                  
                                ],
                                "parameterType":{
                                  "type":"ReferenceTypeNode",
                                  "ids":[
                                    {
                                      "type":"ParameterizedTypeNode",
                                      "identifier":{
                                        "type":"IdentifierNode",
                                        "name":"ByteBuffer",
                                        "comments":[
                                          
                                        ]
                                      },
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "nextDeclarator":{
                                  "type":"AdditionalFormalParameterDeclNode",
                                  "variableDeclarator":{
                                    "type":"VariableDeclaratorNode",
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"srcBuffer",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "arrayDepth":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              },
                              "comments":[
                                
                              ]
                            }
                          },
                          "comments":[
                            
                          ]
                        }
                      },
                      "comments":[
                        
                      ]
                    },
                    "arrayReturnType":[
                      
                    ],
                    "body":{
                      "type":"BlockNode",
                      "statements":[
                        {
                          "type":"IfStatementNode",
                          "expression":{
                            "type":"PrefixOperatorExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"!",
                              "comments":[
                                
                              ]
                            },
                            "argument":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"isDirect",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "statement":{
                            "type":"BlockNode",
                            "statements":[
                              {
                                "type":"ExpressionStatement",
                                "expression":{
                                  "type":"MethodInvocationNode",
                                  "identifier":{
                                    "type":"IdentifierNode",
                                    "name":"absolutePut",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "args":{
                                    "type":"ExpressionListNode",
                                    "arguments":[
                                      {
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"dstBuffer",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      {
                                        "type":"QualifiedIdentifierNode",
                                        "identifiers":[
                                          {
                                            "type":"IdentifierNode",
                                            "name":"dstPosition",
                                            "comments":[
                                              
                                            ]
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      {
                                        "type":"MethodInvocationNode",
                                        "qualifiedIdentifier":{
                                          "type":"QualifiedIdentifierNode",
                                          "identifiers":[
                                            {
                                              "type":"IdentifierNode",
                                              "name":"srcBuffer",
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"array",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      {
                                        "type":"BinaryExpressionNode",
                                        "operator":{
                                          "type":"OperatorNode",
                                          "symbol":"+",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "left":{
                                          "type":"MethodInvocationNode",
                                          "qualifiedIdentifier":{
                                            "type":"QualifiedIdentifierNode",
                                            "identifiers":[
                                              {
                                                "type":"IdentifierNode",
                                                "name":"srcBuffer",
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"arrayOffset",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "args":{
                                            "type":"ExpressionListNode",
                                            "arguments":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        },
                                        "right":{
                                          "type":"MethodInvocationNode",
                                          "qualifiedIdentifier":{
                                            "type":"QualifiedIdentifierNode",
                                            "identifiers":[
                                              {
                                                "type":"IdentifierNode",
                                                "name":"srcBuffer",
                                                "comments":[
                                                  
                                                ]
                                              }
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "identifier":{
                                            "type":"IdentifierNode",
                                            "name":"position",
                                            "comments":[
                                              
                                            ]
                                          },
                                          "args":{
                                            "type":"ExpressionListNode",
                                            "arguments":[
                                              
                                            ],
                                            "comments":[
                                              
                                            ]
                                          },
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      {
                                        "type":"MethodInvocationNode",
                                        "qualifiedIdentifier":{
                                          "type":"QualifiedIdentifierNode",
                                          "identifiers":[
                                            {
                                              "type":"IdentifierNode",
                                              "name":"srcBuffer",
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"remaining",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      }
                                    ],
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "labels":[
                                  
                                ]
                              },
                              {
                                "type":"ReturnStatementNode",
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "labels":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"IfStatementNode",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"&&",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"BinaryExpressionNode",
                              "operator":{
                                "type":"OperatorNode",
                                "symbol":"&&",
                                "comments":[
                                  
                                ]
                              },
                              "left":{
                                "type":"BinaryExpressionNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":"!=",
                                  "comments":[
                                    
                                  ]
                                },
                                "left":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"UNSAFE",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "right":{
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"NullLiteralNode"
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "right":{
                                "type":"BinaryExpressionNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":"!=",
                                  "comments":[
                                    
                                  ]
                                },
                                "left":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"ADDRESS_FIELD",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "right":{
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"NullLiteralNode"
                                  },
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"dstBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"isDirect",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          "statement":{
                            "type":"BlockNode",
                            "statements":[
                              {
                                "type":"TryCatchStatementNode",
                                "block":{
                                  "type":"BlockNode",
                                  "statements":[
                                    {
                                      "type":"LocalVariableDeclarationStatementNode",
                                      "modifiers":[
                                        
                                      ],
                                      "declarators":{
                                        "type":"VariableDeclaratorsNode",
                                        "declarators":[
                                          {
                                            "type":"VariableDeclaratorNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"dstAddress",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "arrayDepth":[
                                              
                                            ],
                                            "assignment":{
                                              "type":"VariableAssignmentNode",
                                              "variableAssignment":{
                                                "type":"VariableExpressionInitNode",
                                                "expression":{
                                                  "type":"BinaryExpressionNode",
                                                  "operator":{
                                                    "type":"OperatorNode",
                                                    "symbol":"+",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "left":{
                                                    "type":"CastExpressionNode",
                                                    "aType":{
                                                      "type":"PrimitiveTypeNode",
                                                      "name":"long",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "argument":{
                                                      "type":"MethodInvocationNode",
                                                      "qualifiedIdentifier":{
                                                        "type":"QualifiedIdentifierNode",
                                                        "identifiers":[
                                                          {
                                                            "type":"IdentifierNode",
                                                            "name":"ADDRESS_FIELD",
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "identifier":{
                                                        "type":"IdentifierNode",
                                                        "name":"get",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "args":{
                                                        "type":"ExpressionListNode",
                                                        "arguments":[
                                                          {
                                                            "type":"QualifiedIdentifierNode",
                                                            "identifiers":[
                                                              {
                                                                "type":"IdentifierNode",
                                                                "name":"dstBuffer",
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "right":{
                                                    "type":"QualifiedIdentifierNode",
                                                    "identifiers":[
                                                      {
                                                        "type":"IdentifierNode",
                                                        "name":"dstPosition",
                                                        "comments":[
                                                          
                                                        ]
                                                      }
                                                    ],
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "varType":{
                                              "type":"PrimitiveTypeNode",
                                              "name":"long",
                                              "comments":[
                                                
                                              ]
                                            }
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"LocalVariableDeclarationStatementNode",
                                      "modifiers":[
                                        
                                      ],
                                      "declarators":{
                                        "type":"VariableDeclaratorsNode",
                                        "declarators":[
                                          {
                                            "type":"VariableDeclaratorNode",
                                            "identifier":{
                                              "type":"IdentifierNode",
                                              "name":"srcAddress",
                                              "comments":[
                                                
                                              ]
                                            },
                                            "arrayDepth":[
                                              
                                            ],
                                            "assignment":{
                                              "type":"VariableAssignmentNode",
                                              "variableAssignment":{
                                                "type":"VariableExpressionInitNode",
                                                "expression":{
                                                  "type":"BinaryExpressionNode",
                                                  "operator":{
                                                    "type":"OperatorNode",
                                                    "symbol":"+",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "left":{
                                                    "type":"CastExpressionNode",
                                                    "aType":{
                                                      "type":"PrimitiveTypeNode",
                                                      "name":"long",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "argument":{
                                                      "type":"MethodInvocationNode",
                                                      "qualifiedIdentifier":{
                                                        "type":"QualifiedIdentifierNode",
                                                        "identifiers":[
                                                          {
                                                            "type":"IdentifierNode",
                                                            "name":"ADDRESS_FIELD",
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "identifier":{
                                                        "type":"IdentifierNode",
                                                        "name":"get",
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "args":{
                                                        "type":"ExpressionListNode",
                                                        "arguments":[
                                                          {
                                                            "type":"QualifiedIdentifierNode",
                                                            "identifiers":[
                                                              {
                                                                "type":"IdentifierNode",
                                                                "name":"srcBuffer",
                                                                "comments":[
                                                                  
                                                                ]
                                                              }
                                                            ],
                                                            "comments":[
                                                              
                                                            ]
                                                          }
                                                        ],
                                                        "comments":[
                                                          
                                                        ]
                                                      },
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "right":{
                                                    "type":"MethodInvocationNode",
                                                    "qualifiedIdentifier":{
                                                      "type":"QualifiedIdentifierNode",
                                                      "identifiers":[
                                                        {
                                                          "type":"IdentifierNode",
                                                          "name":"srcBuffer",
                                                          "comments":[
                                                            
                                                          ]
                                                        }
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "identifier":{
                                                      "type":"IdentifierNode",
                                                      "name":"position",
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "args":{
                                                      "type":"ExpressionListNode",
                                                      "arguments":[
                                                        
                                                      ],
                                                      "comments":[
                                                        
                                                      ]
                                                    },
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              },
                                              "comments":[
                                                
                                              ]
                                            },
                                            "varType":{
                                              "type":"PrimitiveTypeNode",
                                              "name":"long",
                                              "comments":[
                                                
                                              ]
                                            }
                                          }
                                        ],
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    {
                                      "type":"ExpressionStatement",
                                      "expression":{
                                        "type":"MethodInvocationNode",
                                        "qualifiedIdentifier":{
                                          "type":"QualifiedIdentifierNode",
                                          "identifiers":[
                                            {
                                              "type":"IdentifierNode",
                                              "name":"UNSAFE",
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "identifier":{
                                          "type":"IdentifierNode",
                                          "name":"copyMemory",
                                          "comments":[
                                            
                                          ]
                                        },
                                        "args":{
                                          "type":"ExpressionListNode",
                                          "arguments":[
                                            {
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"srcAddress",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            {
                                              "type":"QualifiedIdentifierNode",
                                              "identifiers":[
                                                {
                                                  "type":"IdentifierNode",
                                                  "name":"dstAddress",
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            {
                                              "type":"MethodInvocationNode",
                                              "qualifiedIdentifier":{
                                                "type":"QualifiedIdentifierNode",
                                                "identifiers":[
                                                  {
                                                    "type":"IdentifierNode",
                                                    "name":"srcBuffer",
                                                    "comments":[
                                                      
                                                    ]
                                                  }
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "identifier":{
                                                "type":"IdentifierNode",
                                                "name":"remaining",
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "args":{
                                                "type":"ExpressionListNode",
                                                "arguments":[
                                                  
                                                ],
                                                "comments":[
                                                  
                                                ]
                                              },
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        },
                                        "comments":[
                                          
                                        ]
                                      },
                                      "labels":[
                                        
                                      ]
                                    }
                                  ],
                                  "labels":[
                                    
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "catches":[
                                  {
                                    "type":"CatchClauseNode",
                                    "modifiers":[
                                      
                                    ],
                                    "catchType":{
                                      "type":"CatchTypeNode",
                                      "identifiers":[
                                        {
                                          "type":"QualifiedIdentifierNode",
                                          "identifiers":[
                                            {
                                              "type":"IdentifierNode",
                                              "name":"IllegalAccessException",
                                              "comments":[
                                                
                                              ]
                                            }
                                          ],
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "identifier":{
                                      "type":"IdentifierNode",
                                      "name":"e",
                                      "comments":[
                                        
                                      ]
                                    },
                                    "block":{
                                      "type":"BlockNode",
                                      "statements":[
                                        {
                                          "type":"ThrowStatementNode",
                                          "expression":{
                                            "type":"ConstructorCreatorNode",
                                            "creatorType":{
                                              "type":"ReferenceTypeNode",
                                              "ids":[
                                                {
                                                  "type":"ParameterizedTypeNode",
                                                  "identifier":{
                                                    "type":"IdentifierNode",
                                                    "name":"RuntimeException",
                                                    "comments":[
                                                      
                                                    ]
                                                  },
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "expressionArgs":{
                                              "type":"ExpressionListNode",
                                              "arguments":[
                                                {
                                                  "type":"QualifiedIdentifierNode",
                                                  "identifiers":[
                                                    {
                                                      "type":"IdentifierNode",
                                                      "name":"e",
                                                      "comments":[
                                                        
                                                      ]
                                                    }
                                                  ],
                                                  "comments":[
                                                    
                                                  ]
                                                }
                                              ],
                                              "comments":[
                                                
                                              ]
                                            },
                                            "comments":[
                                              
                                            ]
                                          },
                                          "labels":[
                                            
                                          ],
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "labels":[
                                        
                                      ],
                                      "comments":[
                                        
                                      ]
                                    },
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "labels":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "labels":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "elseStatement":{
                            "type":"ElseStatementNode",
                            "statement":{
                              "type":"BlockNode",
                              "statements":[
                                
                              ],
                              "labels":[
                                
                              ],
                              "comments":[
                                {
                                  "text":"// fallback to basic loop for (int i = srcBuffer.position(); i < srcBuffer.limit(); i++) { dstBuffer.put(dstPosition + i, srcBuffer.get(i)); } } } public static void absolutePut(ByteBuffer dstBuffer, int dstPosition, byte[] src, int srcOffset, int length) { if (UNSAFE != null && ADDRESS_FIELD != null && dstBuffer.isDirect()) { try { long dstAddress = (long)ADDRESS_FIELD.get(dstBuffer) + dstPosition; UNSAFE.copyMemory( src, UNSAFE.arrayBaseOffset(byte[].class) + srcOffset, null, dstAddress, length); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } else { // fallback to System.arraycopy System.arraycopy( src, srcOffset, dstBuffer.array(), dstBuffer.arrayOffset() + dstPosition, length); } }\n"
                                }
                              ]
                            },
                            "labels":[
                              
                            ],
                            "comments":[
                              
                            ]
                          },
                          "labels":[
                            
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "labels":[
                        
                      ],
                      "comments":[
                        
                      ]
                    },
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "pre":6,
                    "chang":1,
                    "dst":27,
                    "temporarili":1,
                    "runtim":2,
                    "loop":1,
                    "concurr":2,
                    "easi":1,
                    "system":4,
                    "field":18,
                    "fallback":2,
                    "obvious":1,
                    "result":4,
                    "set":2,
                    "idea":1,
                    "sun":3,
                    "lock":1,
                    "buffer":41,
                    "secur":1,
                    "amp":11,
                    "work":1,
                    "declar":2,
                    "object":1,
                    "direct":4,
                    "base":1,
                    "includ":1,
                    "code":6,
                    "array":9,
                    "throwabl":1,
                    "thread":1,
                    "low":1,
                    "offset":8,
                    "remain":3,
                    "klass":3,
                    "messi":1,
                    "origin":2,
                    "illeg":2,
                    "back":1,
                    "src":25,
                    "posit":19,
                    "modifi":5,
                    "content":1,
                    "misc":3,
                    "true":2,
                    "absolut":4,
                    "address":14,
                    "put":7,
                    "quot":4,
                    "fast":1,
                    "hack":1,
                    "length":3,
                    "desir":2,
                    "unsaf":10,
                    "complet":1,
                    "type":1,
                    "basic":1,
                    "arraycopi":4,
                    "limit":1,
                    "copi":2,
                    "access":7,
                    "synchron":2,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"sun",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"misc",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        },
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Unsafe",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Object",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"RuntimeException",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"ByteBuffer",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Field",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"Class",
                            "comments":[
                              
                            ]
                          },
                          "typeArguments":{
                            "type":"TypeArgumentsNode",
                            "types":[
                              {
                                "type":"WildcardTypeArgumentNode",
                                "operator":{
                                  "type":"OperatorNode",
                                  "symbol":"?",
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"int",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"void",
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"PrimitiveTypeNode",
                      "name":"long",
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"ADDRESS_FIELD",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"get",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"srcBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"System",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"arraycopy",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"array",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"arrayOffset",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"position",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"array",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"dstBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"arrayOffset",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"desiredPosition",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"remaining",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getDeclaredField",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"address\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"absolutePut",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"dstBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"dstPosition",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"array",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"arrayOffset",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"position",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"remaining",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"field",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getModifiers",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"put",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"srcBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"srcBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"srcBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"arrayOffset",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"srcBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"isDirect",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"arrayOffset",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"ADDRESS_FIELD",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"get",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"dstBuffer",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"originalPosition",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"srcBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"array",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"isDirect",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"klass",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getDeclaredFields",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"srcBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"remaining",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"f",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"setAccessible",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"BooleanLiteralNode",
                              "valueRep":"true"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"field",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"setAccessible",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"BooleanLiteralNode",
                              "valueRep":"true"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"position",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"desiredPosition",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"UNSAFE",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"copyMemory",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"srcAddress",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"QualifiedIdentifierNode",
                            "identifiers":[
                              {
                                "type":"IdentifierNode",
                                "name":"dstAddress",
                                "comments":[
                                  
                                ]
                              }
                            ],
                            "comments":[
                              
                            ]
                          },
                          {
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"srcBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"remaining",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Class",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"forName",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"StringLiteralNode",
                              "valueRep":"\"sun.misc.Unsafe\""
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"dstBuffer",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"array",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"field",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"getType",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    },
                    {
                      "type":"MethodInvocationNode",
                      "qualifiedIdentifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"field",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"get",
                        "comments":[
                          
                        ]
                      },
                      "args":{
                        "type":"ExpressionListNode",
                        "arguments":[
                          {
                            "type":"LiteralNode",
                            "node":{
                              "type":"NullLiteralNode"
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"f",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Field",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"result",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"LiteralNode",
                            "node":{
                              "type":"NullLiteralNode"
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Object",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"srcBuffer",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"field",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"originalPosition",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstBuffer",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"position",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"PrimitiveTypeNode",
                        "name":"int",
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"dstPosition",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"klass",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"MethodInvocationNode",
                            "qualifiedIdentifier":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"Class",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"forName",
                              "comments":[
                                
                              ]
                            },
                            "args":{
                              "type":"ExpressionListNode",
                              "arguments":[
                                {
                                  "type":"LiteralNode",
                                  "node":{
                                    "type":"StringLiteralNode",
                                    "valueRep":"\"sun.misc.Unsafe\""
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Class",
                              "comments":[
                                
                              ]
                            },
                            "typeArguments":{
                              "type":"TypeArgumentsNode",
                              "types":[
                                {
                                  "type":"WildcardTypeArgumentNode",
                                  "operator":{
                                    "type":"OperatorNode",
                                    "symbol":"?",
                                    "comments":[
                                      
                                    ]
                                  },
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"dstAddress",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"CastExpressionNode",
                              "aType":{
                                "type":"PrimitiveTypeNode",
                                "name":"long",
                                "comments":[
                                  
                                ]
                              },
                              "argument":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"ADDRESS_FIELD",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"get",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"dstBuffer",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"QualifiedIdentifierNode",
                              "identifiers":[
                                {
                                  "type":"IdentifierNode",
                                  "name":"dstPosition",
                                  "comments":[
                                    
                                  ]
                                }
                              ],
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"PrimitiveTypeNode",
                        "name":"long",
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"srcAddress",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "assignment":{
                        "type":"VariableAssignmentNode",
                        "variableAssignment":{
                          "type":"VariableExpressionInitNode",
                          "expression":{
                            "type":"BinaryExpressionNode",
                            "operator":{
                              "type":"OperatorNode",
                              "symbol":"+",
                              "comments":[
                                
                              ]
                            },
                            "left":{
                              "type":"CastExpressionNode",
                              "aType":{
                                "type":"PrimitiveTypeNode",
                                "name":"long",
                                "comments":[
                                  
                                ]
                              },
                              "argument":{
                                "type":"MethodInvocationNode",
                                "qualifiedIdentifier":{
                                  "type":"QualifiedIdentifierNode",
                                  "identifiers":[
                                    {
                                      "type":"IdentifierNode",
                                      "name":"ADDRESS_FIELD",
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "identifier":{
                                  "type":"IdentifierNode",
                                  "name":"get",
                                  "comments":[
                                    
                                  ]
                                },
                                "args":{
                                  "type":"ExpressionListNode",
                                  "arguments":[
                                    {
                                      "type":"QualifiedIdentifierNode",
                                      "identifiers":[
                                        {
                                          "type":"IdentifierNode",
                                          "name":"srcBuffer",
                                          "comments":[
                                            
                                          ]
                                        }
                                      ],
                                      "comments":[
                                        
                                      ]
                                    }
                                  ],
                                  "comments":[
                                    
                                  ]
                                },
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "right":{
                              "type":"MethodInvocationNode",
                              "qualifiedIdentifier":{
                                "type":"QualifiedIdentifierNode",
                                "identifiers":[
                                  {
                                    "type":"IdentifierNode",
                                    "name":"srcBuffer",
                                    "comments":[
                                      
                                    ]
                                  }
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"position",
                                "comments":[
                                  
                                ]
                              },
                              "args":{
                                "type":"ExpressionListNode",
                                "arguments":[
                                  
                                ],
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        },
                        "comments":[
                          
                        ]
                      },
                      "varType":{
                        "type":"PrimitiveTypeNode",
                        "name":"long",
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"ADDRESS_FIELD",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ],
                      "varType":{
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"Field",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    },
                    {
                      "type":"VariableDeclaratorNode",
                      "identifier":{
                        "type":"IdentifierNode",
                        "name":"dstBuffer",
                        "comments":[
                          
                        ]
                      },
                      "arrayDepth":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>I've given this code some minimal testing with mixes of direct and non-direct buffers and it <strong><em>seems</em></strong> okay. If the reflection techniques fail (e.g., because you are within an applet security sandbox or the Java implementation is not compatible) it can fall back to plainer methods.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[15414839]-[-1488650546]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>I've given this code some minimal testing with mixes of direct and non-direct buffers and it <strong><em>seems</em></strong> okay. If the reflection techniques fail (e.g., because you are within an applet security sandbox or the Java implementation is not compatible) it can fall back to plainer methods.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "method":1,
                    "test":1,
                    "fail":1,
                    "minim":1,
                    "applet":1,
                    "buffer":1,
                    "secur":1,
                    "strong":2,
                    "plainer":1,
                    "fall":1,
                    "direct":2,
                    "code":1,
                    "mix":1,
                    "techniqu":1,
                    "back":1,
                    "sandbox":1,
                    "implement":1,
                    "reflect":1,
                    "compat":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}