{
  "type":"StackOverflowArtifact",
  "question":{
    "type":"StackOverflowQuestion",
    "id":8096863,
    "title":"When a JVM crashes (segfaults) during garbage collection, how can I find out what was being collected?",
    "comments":[
      {
        "type":"StackOverflowComment",
        "id":9929535,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":768334,
          "displayName":"Prasanna Talakanti",
          "reputation":1434
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"this might help http://stackoverflow.com/questions/5395337/throw-exception-when-java-jni-experiences-segmentation-fault"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9929535]-[1773630436]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"this might help http://stackoverflow.com/questions/5395337/throw-exception-when-java-jni-experiences-segmentation-fault"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "question":1,
                      "experi":1,
                      "segment":1,
                      "jni":1,
                      "stackoverflow":1,
                      "fault":1,
                      "http":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9926549,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":147373,
          "displayName":"Casey",
          "reputation":4342
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I would be very interested in seeing what was causing the crash."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9926549]-[898505061]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I would be very interested in seeing what was causing the crash."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "interest":1,
                      "crash":1,
                      "caus":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9926544,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":144746,
          "displayName":"Voo",
          "reputation":12920
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"Added the JNI tag because it's quite clearly a bug in some JNI library as Peter Lawrey has already pointed out."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9926544]-[1963527684]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"Added the JNI tag because it's quite clearly a bug in some JNI library as Peter Lawrey has already pointed out."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "point":1,
                      "tag":1,
                      "peter":1,
                      "librari":1,
                      "jni":2,
                      "bug":1,
                      "ad":1,
                      "lawrey":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9926556,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":147373,
          "displayName":"Casey",
          "reputation":4342
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"I've managed to crash the Sun jvm without jni."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9926556]-[-50166131]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"I've managed to crash the Sun jvm without jni."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jvm":1,
                      "crash":1,
                      "sun":1,
                      "jni":1,
                      "manag":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9926758,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":0,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":2077,
          "displayName":"Hanno Fietz",
          "reputation":9376
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"It's Eclipselink, anyway. I just know. It has to go. It had it coming for a long time. I'll take it out myself."
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9926758]-[1210721660]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"It's Eclipselink, anyway. I just know. It has to go. It had it coming for a long time. I'll take it out myself."
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "eclipselink":1,
                      "come":1,
                      "time":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"StackOverflowComment",
        "id":9926868,
        "postId":8096863,
        "creationDate":"2011-11-11",
        "score":1,
        "isEdited":false,
        "owner":{
          "type":"StackOverflowUser",
          "id":144746,
          "displayName":"Voo",
          "reputation":12920
        },
        "source":[
          {
            "type":"SourceInfo",
            "node":{
              "type":"XmlTextNode",
              "contents":"@Casey Sure you can, but how likely is a bug in the JVM implementation, compared to some corrupting JNI function?"
            },
            "units":[
              {
                "type":"TextUnit",
                "id":"[8096863-cu9926868]-[651579549]",
                "astNode":{
                  "type":"TextFragmentNode",
                  "text":"@Casey Sure you can, but how likely is a bug in the JVM implementation, compared to some corrupting JNI function?"
                },
                "codeFragments":{
                  "type":"CodeFragmentSequence",
                  "fragments":[
                    {
                      "type":"AnnotationNode",
                      "identifier":{
                        "type":"QualifiedIdentifierNode",
                        "identifiers":[
                          {
                            "type":"IdentifierNode",
                            "name":"Casey",
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      },
                      "comments":[
                        
                      ]
                    }
                  ]
                },
                "metaInformation":[
                  {
                    "type":"NaturalLanguageMetaInformation",
                    "tfMap":{
                      "jvm":1,
                      "jni":1,
                      "bug":1,
                      "compar":1,
                      "function":1,
                      "implement":1,
                      "corrupt":1,
                      "casey":1
                    }
                  },
                  {
                    "type":"CodeTypesMetaInformation",
                    "qualifiedTypes":[
                      
                    ],
                    "simpleTypes":[
                      
                    ],
                    "basicTypes":[
                      
                    ]
                  },
                  {
                    "type":"CodeInvocationMetaInformation",
                    "invocations":[
                      
                    ]
                  },
                  {
                    "type":"CodeVariablesMetaInformation",
                    "variables":[
                      
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "tags":[
      "java",
      "garbage-collection",
      "jni",
      "segmentation-fault"
    ],
    "creationDate":"2011-11-11",
    "lastActivityDate":"2012-10-19",
    "lastEditDate":"2011-11-11",
    "score":10,
    "viewCount":1669,
    "owner":{
      "type":"StackOverflowUser",
      "id":2077,
      "displayName":"Hanno Fietz",
      "reputation":9376
    },
    "source":[
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>I get segfaults in my JVM at <em>roughly</em> the same phase of the application, but with varying stack traces in the crash report. It always seems to happen during GC, however.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8096863]-[-1629816067]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>I get segfaults in my JVM at <em>roughly</em> the same phase of the application, but with varying stack traces in the crash report. It always seems to happen during GC, however.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "jvm":1,
                  "trace":1,
                  "happen":1,
                  "phase":1,
                  "crash":1,
                  "segfault":1,
                  "vari":1,
                  "applic":1,
                  "rough":1,
                  "stack":1,
                  "report":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<p>Since the crash happens in all three JVMs I tried (OpenJDK 6, Oracle 1.6.0_25 and 1.7.0) and with two GCs each (Parallel Collector and CMS), and it happens around the same area in the application, I figured, if I could find what the GC was trying to collect, I might spot some peculiarity in my code that causes this crash.</p>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8096863]-[786288015]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<p>Since the crash happens in all three JVMs I tried (OpenJDK 6, Oracle 1.6.0_25 and 1.7.0) and with two GCs each (Parallel Collector and CMS), and it happens around the same area in the application, I figured, if I could find what the GC was trying to collect, I might spot some peculiarity in my code that causes this crash.</p>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "find":1,
                  "collector":1,
                  "area":1,
                  "gcs":1,
                  "crash":2,
                  "oracl":1,
                  "jvms":1,
                  "open":1,
                  "peculiar":1,
                  "code":1,
                  "applic":1,
                  "spot":1,
                  "figur":1,
                  "collect":1,
                  "cms":1,
                  "jdk":1,
                  "parallel":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      },
      {
        "type":"SourceInfo",
        "node":{
          "type":"XmlTextNode",
          "contents":"<ul> \n <li>Are there any coding practices that are well known to be problematic for GC?</li> \n <li>What methods are available for diagnosing this problem?</li> \n <li>Can I make any educated guesses on where in my application this problem is triggered?</li> \n <li>What (GC tuning) parameters can I play with to narrow the problem down?</li> \n <li>Is there a way to spot (possibly) problematic data in a heap dump?</li> \n</ul>"
        },
        "units":[
          {
            "type":"TextUnit",
            "id":"[8096863]-[-1669883722]",
            "astNode":{
              "type":"TextFragmentNode",
              "text":"<ul> \n <li>Are there any coding practices that are well known to be problematic for GC?</li> \n <li>What methods are available for diagnosing this problem?</li> \n <li>Can I make any educated guesses on where in my application this problem is triggered?</li> \n <li>What (GC tuning) parameters can I play with to narrow the problem down?</li> \n <li>Is there a way to spot (possibly) problematic data in a heap dump?</li> \n</ul>"
            },
            "codeFragments":{
              "type":"CodeFragmentSequence",
              "fragments":[
                
              ]
            },
            "metaInformation":[
              {
                "type":"NaturalLanguageMetaInformation",
                "tfMap":{
                  "tune":1,
                  "method":1,
                  "problem":3,
                  "play":1,
                  "data":1,
                  "educ":1,
                  "dump":1,
                  "possibl":1,
                  "code":1,
                  "paramet":1,
                  "applic":1,
                  "spot":1,
                  "make":1,
                  "heap":1,
                  "guess":1,
                  "practic":1,
                  "narrow":1,
                  "diagnos":1,
                  "problemat":2,
                  "trigger":1
                }
              },
              {
                "type":"CodeTypesMetaInformation",
                "qualifiedTypes":[
                  
                ],
                "simpleTypes":[
                  
                ],
                "basicTypes":[
                  
                ]
              },
              {
                "type":"CodeInvocationMetaInformation",
                "invocations":[
                  
                ]
              },
              {
                "type":"CodeVariablesMetaInformation",
                "variables":[
                  
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "answers":[
    {
      "type":"StackOverflowAnswer",
      "id":8097083,
      "questionId":8096863,
      "comments":[
        
      ],
      "creationDate":"2011-11-11",
      "lastActivityDate":"2011-11-11",
      "lastEditDate":"2011-11-11",
      "score":1,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":312884,
        "displayName":"r0ast3d",
        "reputation":2473
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li><p>seg faults have specific error codes at the beginning of the dump <a href=\"http://en.wikipedia.org/wiki/Segmentation_fault\"rel=\"nofollow\">http://en.wikipedia.org/wiki/Segmentation_fault</a></p></li> \n <li><p>You can use Thread.dumpStackTrace to see what is going on in that application If you know exactly where your application is freezing or going to freeze after a certain action or event you can CTRL + break windows or CTRL + \\ to get a thread dump and see what is going on. </p></li> \n <li><p>Instead of vaguely guessing you can comment out certain sections of the code to find out which loop or object or buffer or string is taking too long</p></li> \n <li><p>depending upon your situation you can consider some specific tools.</p></li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8097083]-[-2065074036]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li><p>seg faults have specific error codes at the beginning of the dump <a href=\"http://en.wikipedia.org/wiki/Segmentation_fault\"rel=\"nofollow\">http://en.wikipedia.org/wiki/Segmentation_fault</a></p></li> \n <li><p>You can use Thread.dumpStackTrace to see what is going on in that application If you know exactly where your application is freezing or going to freeze after a certain action or event you can CTRL + break windows or CTRL + \\ to get a thread dump and see what is going on. </p></li> \n <li><p>Instead of vaguely guessing you can comment out certain sections of the code to find out which loop or object or buffer or string is taking too long</p></li> \n <li><p>depending upon your situation you can consider some specific tools.</p></li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"_fault",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  },
                  {
                    "type":"QualifiedIdentifierNode",
                    "identifiers":[
                      {
                        "type":"IdentifierNode",
                        "name":"Thread",
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"IdentifierNode",
                        "name":"dumpStackTrace",
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "find":1,
                    "begin":1,
                    "window":1,
                    "vagu":1,
                    "loop":1,
                    "trace":1,
                    "depend":1,
                    "event":1,
                    "tool":1,
                    "seg":1,
                    "ctrl":2,
                    "rel":1,
                    "dump":3,
                    "buffer":1,
                    "section":1,
                    "segment":2,
                    "object":1,
                    "code":2,
                    "situat":1,
                    "thread":2,
                    "wikipedia":2,
                    "nofollow":1,
                    "error":1,
                    "take":1,
                    "comment":1,
                    "specif":2,
                    "applic":2,
                    "stack":1,
                    "wiki":2,
                    "fault":3,
                    "guess":1,
                    "org":2,
                    "href":1,
                    "http":2,
                    "freez":2,
                    "action":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":8097199,
      "questionId":8096863,
      "comments":[
        {
          "type":"StackOverflowComment",
          "id":9927626,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":57695,
            "displayName":"Peter Lawrey",
            "reputation":257803
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Voo, you can get a seg fault using sun.misc.Unsafe. You can also corrupt memory so it fails on the next gc. I am not sure how you can corrupt memory so that that the GC doesn't crash, but the finalizer does. If you corrupted the ReferenceQueue the finalizer uses you might be able to do it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9927626]-[-1250707301]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Voo, you can get a seg fault using sun.misc.Unsafe. You can also corrupt memory so it fails on the next gc. I am not sure how you can corrupt memory so that that the GC doesn't crash, but the finalizer does. If you corrupted the ReferenceQueue the finalizer uses you might be able to do it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Voo",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      },
                      {
                        "type":"ReferenceTypeNode",
                        "ids":[
                          {
                            "type":"ParameterizedTypeNode",
                            "identifier":{
                              "type":"IdentifierNode",
                              "name":"ReferenceQueue",
                              "comments":[
                                
                              ]
                            },
                            "comments":[
                              
                            ]
                          }
                        ],
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "fail":1,
                        "queue":1,
                        "crash":1,
                        "seg":1,
                        "sun":1,
                        "voo":1,
                        "final":2,
                        "refer":1,
                        "misc":1,
                        "unsaf":1,
                        "fault":1,
                        "corrupt":3,
                        "memori":2
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        {
                          "type":"ReferenceTypeNode",
                          "ids":[
                            {
                              "type":"ParameterizedTypeNode",
                              "identifier":{
                                "type":"IdentifierNode",
                                "name":"ReferenceQueue",
                                "comments":[
                                  
                                ]
                              },
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        }
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926396,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2077,
            "displayName":"Hanno Fietz",
            "reputation":9376
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Sounds hard to debug. Anything I can do at all?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926396]-[-1794753374]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Sounds hard to debug. Anything I can do at all?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "hard":1,
                        "debug":1,
                        "sound":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926530,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":545127,
            "displayName":"Raedwald",
            "reputation":11028
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"So, even though the problem seems to happen during GC, that does not narrow it down to a bug in a finalizer?"
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926530]-[998254200]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"So, even though the problem seems to happen during GC, that does not narrow it down to a bug in a finalizer?"
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "happen":1,
                        "problem":1,
                        "bug":1,
                        "final":1,
                        "narrow":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926570,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":144746,
            "displayName":"Voo",
            "reputation":12920
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@HannoFietz Well there are Valgrind and Co, but the problem is that the Hotspot code itself is.. well it breaks most (I'd say all, but who knows) of those tools. No idea if you can get valgrind to only check your own code."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926570]-[-1662524749]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@HannoFietz Well there are Valgrind and Co, but the problem is that the Hotspot code itself is.. well it breaks most (I'd say all, but who knows) of those tools. No idea if you can get valgrind to only check your own code."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"HannoFietz",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "break":1,
                        "tool":1,
                        "problem":1,
                        "idea":1,
                        "hotspot":1,
                        "code":2,
                        "fietz":1,
                        "valgrind":2,
                        "check":1,
                        "hanno":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926598,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":1,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":144746,
            "displayName":"Voo",
            "reputation":12920
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@RaedWald You CAN'T produce a segfault in pure Java code without a bug in the underlying JVM (which is possible, but unlikely). The GC has to look (and traverse) all pointers, so if you write garbage into one of those it'll trip up, that's all there is to it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926598]-[-1237847930]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@RaedWald You CAN'T produce a segfault in pure Java code without a bug in the underlying JVM (which is possible, but unlikely). The GC has to look (and traverse) all pointers, so if you write garbage into one of those it'll trip up, that's all there is to it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"RaedWald",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "jvm":1,
                        "pointer":1,
                        "produc":1,
                        "trip":1,
                        "pure":1,
                        "segfault":1,
                        "travers":1,
                        "code":1,
                        "ra":1,
                        "bug":1,
                        "under":1,
                        "wald":1,
                        "write":1,
                        "garbag":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926607,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":2077,
            "displayName":"Hanno Fietz",
            "reputation":9376
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"Is there a way I can recognize the problematic data in a heap dump? I would probably be able to make one that is likely to contain it."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926607]-[1651725549]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"Is there a way I can recognize the problematic data in a heap dump? I would probably be able to make one that is likely to contain it."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "data":1,
                        "dump":1,
                        "recogn":1,
                        "make":1,
                        "heap":1,
                        "problemat":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926644,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":545127,
            "displayName":"Raedwald",
            "reputation":11028
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"&quot;You CAN'T produce a segfault in pure Java code&quot; I know. I should have said &quot;a bug in a finalizer that calls JNI code&quot;."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926644]-[1807165726]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"&quot;You CAN'T produce a segfault in pure Java code&quot; I know. I should have said &quot;a bug in a finalizer that calls JNI code&quot;."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "produc":1,
                        "pure":1,
                        "segfault":1,
                        "code":2,
                        "jni":1,
                        "bug":1,
                        "final":1,
                        "quot":4,
                        "call":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type":"StackOverflowComment",
          "id":9926791,
          "postId":8097199,
          "creationDate":"2011-11-11",
          "score":0,
          "isEdited":false,
          "owner":{
            "type":"StackOverflowUser",
            "id":144746,
            "displayName":"Voo",
            "reputation":12920
          },
          "source":[
            {
              "type":"SourceInfo",
              "node":{
                "type":"XmlTextNode",
                "contents":"@Readwald Well ok, yes we can't narrow it down. All we know: Some JNI code was called that corrupted the heap, where this happened is immaterial (and can't be guaranteed - could be a finalizer, could be anything else). Actually finalizers aren't even executed while GC: They are run in a separate thread at the same time as the rest of the program."
              },
              "units":[
                {
                  "type":"TextUnit",
                  "id":"[8097199-cu9926791]-[-1720915687]",
                  "astNode":{
                    "type":"TextFragmentNode",
                    "text":"@Readwald Well ok, yes we can't narrow it down. All we know: Some JNI code was called that corrupted the heap, where this happened is immaterial (and can't be guaranteed - could be a finalizer, could be anything else). Actually finalizers aren't even executed while GC: They are run in a separate thread at the same time as the rest of the program."
                  },
                  "codeFragments":{
                    "type":"CodeFragmentSequence",
                    "fragments":[
                      {
                        "type":"AnnotationNode",
                        "identifier":{
                          "type":"QualifiedIdentifierNode",
                          "identifiers":[
                            {
                              "type":"IdentifierNode",
                              "name":"Readwald",
                              "comments":[
                                
                              ]
                            }
                          ],
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ]
                  },
                  "metaInformation":[
                    {
                      "type":"NaturalLanguageMetaInformation",
                      "tfMap":{
                        "program":1,
                        "aren":1,
                        "happen":1,
                        "rest":1,
                        "immateri":1,
                        "run":1,
                        "separ":1,
                        "code":1,
                        "jni":1,
                        "guarante":1,
                        "thread":1,
                        "final":2,
                        "readwald":1,
                        "time":1,
                        "heap":1,
                        "narrow":1,
                        "call":1,
                        "corrupt":1,
                        "execut":1
                      }
                    },
                    {
                      "type":"CodeTypesMetaInformation",
                      "qualifiedTypes":[
                        
                      ],
                      "simpleTypes":[
                        
                      ],
                      "basicTypes":[
                        
                      ]
                    },
                    {
                      "type":"CodeInvocationMetaInformation",
                      "invocations":[
                        
                      ]
                    },
                    {
                      "type":"CodeVariablesMetaInformation",
                      "variables":[
                        
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "creationDate":"2011-11-11",
      "lastActivityDate":"2011-11-11",
      "score":7,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":57695,
        "displayName":"Peter Lawrey",
        "reputation":257803
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>This will happen if you have JNI library which handles memory incorrectly. The problem does not show immediately. However when a GC is performed, it scans all the memory, trips over the corrupted reference and kills the JVM. i.e. the corruption could have occurred at any time since the last Full GC.</p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8097199]-[-824078906]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>This will happen if you have JNI library which handles memory incorrectly. The problem does not show immediately. However when a GC is performed, it scans all the memory, trips over the corrupted reference and kills the JVM. i.e. the corruption could have occurred at any time since the last Full GC.</p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "jvm":1,
                    "show":1,
                    "happen":1,
                    "problem":1,
                    "occur":1,
                    "full":1,
                    "trip":1,
                    "librari":1,
                    "scan":1,
                    "jni":1,
                    "incorrect":1,
                    "perform":1,
                    "refer":1,
                    "time":1,
                    "immedi":1,
                    "kill":1,
                    "handl":1,
                    "corrupt":2,
                    "memori":2
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":8097352,
      "questionId":8096863,
      "comments":[
        
      ],
      "creationDate":"2011-11-11",
      "lastActivityDate":"2011-11-11",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":768334,
        "displayName":"Prasanna Talakanti",
        "reputation":1434
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<ul> \n <li>I suggest you get both Thread dump and Heap dump, You can do this either from command line are use a tool like <a href=\"http://visualvm.java.net/\"rel=\"nofollow\">Visual VM</a></li> \n <li>I think Heap dump being snap shot of JVM memory will provide information about live objects and their allocations. If you analyze the heap using Visual VM it does provide a detailed report on all the objects on heap</li> \n <li>I would suggest you bump of the GC collection on your application to verbose and analyze them using a tool like <a href=\"http://www.tagtraum.com/gcviewer.html\"rel=\"nofollow\">tagtraum</a> </li> \n <li>If you can attach a <a href=\"http://java-source.net/open-source/profilers\"rel=\"nofollow\">JVM profiler</a> that can be provide a lot of information or If you have general idea of the work flow that is causing the problem then just profile that in isolation</li> \n</ul>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[8097352]-[1470987118]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<ul> \n <li>I suggest you get both Thread dump and Heap dump, You can do this either from command line are use a tool like <a href=\"http://visualvm.java.net/\"rel=\"nofollow\">Visual VM</a></li> \n <li>I think Heap dump being snap shot of JVM memory will provide information about live objects and their allocations. If you analyze the heap using Visual VM it does provide a detailed report on all the objects on heap</li> \n <li>I would suggest you bump of the GC collection on your application to verbose and analyze them using a tool like <a href=\"http://www.tagtraum.com/gcviewer.html\"rel=\"nofollow\">tagtraum</a> </li> \n <li>If you can attach a <a href=\"http://java-source.net/open-source/profilers\"rel=\"nofollow\">JVM profiler</a> that can be provide a lot of information or If you have general idea of the work flow that is causing the problem then just profile that in isolation</li> \n</ul>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "verbos":1,
                    "jvm":2,
                    "provid":3,
                    "visualvm":1,
                    "profil":3,
                    "alloc":1,
                    "analyz":2,
                    "line":1,
                    "tool":2,
                    "problem":1,
                    "suggest":2,
                    "idea":1,
                    "rel":3,
                    "dump":3,
                    "gcviewer":1,
                    "command":1,
                    "open":1,
                    "work":1,
                    "net":2,
                    "object":2,
                    "tagtraum":2,
                    "shot":1,
                    "thread":1,
                    "attach":1,
                    "nofollow":3,
                    "general":1,
                    "isol":1,
                    "inform":2,
                    "live":1,
                    "flow":1,
                    "applic":1,
                    "visual":2,
                    "caus":1,
                    "lot":1,
                    "report":1,
                    "detail":1,
                    "collect":1,
                    "heap":4,
                    "html":1,
                    "href":3,
                    "http":3,
                    "snap":1,
                    "sourc":2,
                    "bump":1,
                    "www":1,
                    "memori":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type":"StackOverflowAnswer",
      "id":10679998,
      "questionId":8096863,
      "comments":[
        
      ],
      "creationDate":"2012-05-21",
      "lastActivityDate":"2012-10-19",
      "lastEditDate":"2012-10-19",
      "score":0,
      "isAccepted":false,
      "owner":{
        "type":"StackOverflowUser",
        "id":1407123,
        "displayName":"VIRAL SHAH",
        "reputation":1
      },
      "source":[
        {
          "type":"SourceInfo",
          "node":{
            "type":"XmlTextNode",
            "contents":"<p>We were also facing similiar issue. There was no pattern we could see and it was quite random but happening either on GC or Full GC. For us it turned out to be an issue with the RAM modules. We identified it using MemTest86+ on the Ubuntu server. </p>"
          },
          "units":[
            {
              "type":"TextUnit",
              "id":"[10679998]-[-223596417]",
              "astNode":{
                "type":"TextFragmentNode",
                "text":"<p>We were also facing similiar issue. There was no pattern we could see and it was quite random but happening either on GC or Full GC. For us it turned out to be an issue with the RAM modules. We identified it using MemTest86+ on the Ubuntu server. </p>"
              },
              "codeFragments":{
                "type":"CodeFragmentSequence",
                "fragments":[
                  {
                    "type":"ReferenceTypeNode",
                    "ids":[
                      {
                        "type":"ParameterizedTypeNode",
                        "identifier":{
                          "type":"IdentifierNode",
                          "name":"MemTest86",
                          "comments":[
                            
                          ]
                        },
                        "comments":[
                          
                        ]
                      }
                    ],
                    "comments":[
                      
                    ]
                  }
                ]
              },
              "metaInformation":[
                {
                  "type":"NaturalLanguageMetaInformation",
                  "tfMap":{
                    "test":1,
                    "random":1,
                    "server":1,
                    "ram":1,
                    "pattern":1,
                    "happen":1,
                    "full":1,
                    "similiar":1,
                    "issu":2,
                    "face":1,
                    "modul":1,
                    "mem":1,
                    "turn":1,
                    "identifi":1,
                    "ubuntu":1
                  }
                },
                {
                  "type":"CodeTypesMetaInformation",
                  "qualifiedTypes":[
                    
                  ],
                  "simpleTypes":[
                    {
                      "type":"ReferenceTypeNode",
                      "ids":[
                        {
                          "type":"ParameterizedTypeNode",
                          "identifier":{
                            "type":"IdentifierNode",
                            "name":"MemTest86",
                            "comments":[
                              
                            ]
                          },
                          "comments":[
                            
                          ]
                        }
                      ],
                      "comments":[
                        
                      ]
                    }
                  ],
                  "basicTypes":[
                    
                  ]
                },
                {
                  "type":"CodeInvocationMetaInformation",
                  "invocations":[
                    
                  ]
                },
                {
                  "type":"CodeVariablesMetaInformation",
                  "variables":[
                    
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}