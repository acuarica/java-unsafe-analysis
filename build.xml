<project name="java-unsafe-analysis" default="analyse-tests" basedir=".">
	<description>Java Unsafe Analysis to study usage and impact of Unsafe API in Java</description>
	<property name="src" location="src" />
	<property name="resources" location="src" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="cache" location="cache" />
	<property name="out" location="out" />
	<property name="repo" location="${cache}/repo" />
	<property name="mirror.1" value="http://mirrors.ibiblio.org/maven2" />
	<property name="mirror.2" value="http://maven.antelink.com/content/repositories/central" />
	<property name="mirror.3" value="http://artifactory.theomega.org/artifactory/repo" />
	<property name="mirror.4" value="http://scalasbt.artifactoryonline.com/scalasbt/repo" />
	<property name="mirror.5" value="http://repo.jfrog.org/artifactory/simple/libs-release-bintray" />
	<property name="gzindexurl" value="${mirror.1}/.index/nexus-maven-repository-index.gz" />
	<property name="gzindexpath" location="${cache}/nexus-maven-repository-index.gz" />
	<property name="indexpath" location="${cache}/nexus-maven-repository-index" />
	<property name="urilist" location="${out}/uri.list" />
	<property name="sessionlist" location="${out}/session.list" />
	<property name="noartifactstodownload.debug" value="5000" />
	<property name="noartifactstodownload.release" value="100000" />
	<property name="downloadlog" location="${out}/download.log" />
	<property name="mavenunsafe" location="${out}/unsafe-maven.csv" />
	<property name="mavendepgraph" location="${out}/maven-depgraph.csv" />
	<path id="lib">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>
	<target name="-mkbuilddir" description="Creates the build directory, used for output of compilation.">
		<mkdir dir="${build}" />
	</target>
	<target name="-mkcachedir" description="Creates the cache directory, used to cache downloaded files.">
		<mkdir dir="${cache}" />
	</target>
	<target name="-mkoutdir" description="Creates the output directory, used for output files.">
		<mkdir dir="${out}" />
	</target>
	<target name="-fetchgzindex" depends="-mkcachedir" description="Fetches the Maven Index (compressed) from mirror.">
		<exec executable="aria2c">
			<arg value="--dir=/" />
			<arg value="--max-concurrent-downloads=16" />
			<arg value="--auto-file-renaming=false" />
			<arg value="--conditional-get=true" />
			<arg value="--file-allocation=falloc" />
			<arg value="--out=${gzindexpath}" />
			<arg value="${gzindexurl}" />
		</exec>
	</target>
	<target name="fetchindex" depends="-fetchgzindex" description="Fetches and uncompress the Maven Index from a mirror.">
		<gunzip src="${gzindexpath}" dest="${indexpath}" />
	</target>
	<target name="-compile" depends="-mkbuilddir" description="Compiles all java files.">
		<javac includeantruntime="false" srcdir="${src}" destdir="${build}">
			<classpath refid="lib" />
		</javac>
	</target>
	<target name="analyse-tests" depends="-compile">
		<junit>
			<classpath>
				<pathelement location="lib/asm-all-5.0.3.jar" />
				<pathelement location="lib/junit-4.12.jar" />
				<pathelement location="lib/hamcrest-core-1.3.jar" />
				<pathelement path="${build}" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<test name="ch.usi.inf.sape.unsafeanalysis.tests.UnsafeAnalysisTests" />
		</junit>
	</target>
	<target name="buildurilist-debug" depends="-compile,fetchindex,-mkoutdir" description="Builds the list of artifacts to download.">
		<java classname="ch.usi.inf.sape.unsafeanalysis.BuildUriList" classpath="${build}:${resources}" fork="true">
			<classpath refid="lib" />
			<assertions>
				<enable />
			</assertions>
			<arg value="--index=${indexpath}" />
			<arg value="--urilist=${urilist}" />
			<arg value="--artscount=${noartifactstodownload.debug}" />
			<arg value="--mirrors=${mirror.1},${mirror.2},${mirror.3},${mirror.4},${mirror.5}" />
		</java>
	</target>
	<target name="buildurilist-release" depends="-compile,fetchindex,-mkoutdir" description="Builds the list of artifacts to download.">
		<java classname="ch.usi.inf.sape.unsafeanalysis.BuildUriList" classpath="${build}:${resources}" fork="true">
			<classpath refid="lib" />
			<assertions>
				<enable />
			</assertions>
			<arg value="--index=${indexpath}" />
			<arg value="--urilist=${urilist}" />
			<arg value="--artscount=${noartifactstodownload.release}" />
			<arg value="--mirrors=${mirror.1},${mirror.2},${mirror.3},${mirror.4},${mirror.5}" />
		</java>
	</target>
	<target name="fetchartifacts" description="Fetches all artifacts specified by the URI list.">
		<exec executable="aria2c">
			<arg value="--dir=${repo}" />
			<arg value="--max-concurrent-downloads=16" />
			<arg value="--auto-file-renaming=false" />
			<arg value="--input-file=${urilist}" />
			<arg value="--save-session=${sessionlist}" />
			<arg value="--conditional-get=true" />
			<arg value="--log=${downloadlog}" />
		</exec>
	</target>
	<target name="analyse" depends="-compile,-mkoutdir" description="Analyse the Maven repository and JDK8 runtime.">
		<java classname="ch.usi.inf.sape.unsafeanalysis.Analyse" classpath="${build}:${resources}">
			<classpath refid="lib" />
			<arg value="--index=${indexpath}" />
			<arg value="--repo=${repo}" />
			<arg value="--output=${mavenunsafe}" />
		</java>
	</target>
	<target name="extractdepgraph" depends="-compile" description="Extract the dependency information from POM files.">
		<java classname="ch.usi.inf.sape.unsafeanalysis.ExtractDepGraph" classpath="${build}:${resources}">
			<classpath refid="lib" />
			<arg value="--index=${indexpath}" />
			<arg value="--repo=${repo}" />
			<arg value="--output=${mavendepgraph}" />
		</java>
	</target>
	<target name="computedeps" depends="-compile" description="Computes the inverse transitive dependencies.">
		<java classname="ch.usi.inf.sape.unsafeanalysis.ComputeDeps" classpath="${build}:${resources}">
			<classpath refid="lib" />
		</java>
	</target>
	<target name="clean" description="Removes the build and out directories.">
		<delete dir="${build}" />
		<delete dir="${out}" />
	</target>
</project>
