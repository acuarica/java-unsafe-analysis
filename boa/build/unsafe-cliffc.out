projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/ClassLoader/src/edu/rice/cs/cunit/concJUnit/ConcJUnitDummy.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/ClassLoader/src/edu/rice/cs/cunit/concJUnit/ConcJUnitDummy.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/ClassLoader/src/edu/rice/cs/cunit/concJUnit/ThreadSets.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/concJUnit/fw-3.8.2/src/edu/rice/cs/cunit/concJUnit/TestThreadGroup.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/concJUnit/fw-4.1/src/edu/rice/cs/cunit/concJUnit/TestThreadGroup.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/concJUnit/fw-4.2/src/edu/rice/cs/cunit/concJUnit/TestThreadGroup.java] = 1
projectsWith[Concutest][Concutest is a collection of tools designed to make the development and testing of concurrent Java programs easier and more reliable. Concutest is available under the BSD License and under active development by the JavaPLT group at Rice University.][http://sourceforge.net/projects/concutest][/trunk/concJUnit/fw-4.2plugin/src/edu/rice/cs/cunit/concJUnit/TestThreadGroup.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/AtomicCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/CATCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/LockCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/RaceyCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/StripeLockCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/StripeUnsafeCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/SyncCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/harness.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/ConcurrentAutoTable/harness.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/NonBlockingHashMap/hash_test.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/CAT_Tester/CATCounter.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/CAT_Tester/hash_test.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHM_Tester/NBHMID_Tester2.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHM_Tester/NBHML_Tester2.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHM_Tester/NBHM_Tester2.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHM_Tester/perf_hash_test.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHM_Tester/perf_hashlong_test.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHS_Tester/nbhs_tester.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHS_Tester/nbsi_tester.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/Testing/NBHS_Tester/perf_set_test.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/java/util/Hashtable.java] = 1
projectsWith[Highly Scalable Java][A collection of Concurrent and Highly Scalable Utilities.  These are intended as direct replacements for the java.util.* or java.util.concurrent.* collections but with better performance when many CPUs are using the collection concurrently.][http://sourceforge.net/projects/high-scale-lib][/trunk/high-scale-lib/java/util/concurrent/ConcurrentHashMap.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/BIGDATA_RELEASE_1_1_0/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/DEV_BRANCH_VALUEFACTORY_KEYORDER_3_31_2010/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/JOURNAL_HA_BRANCH/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/LEXICON_REFACTOR_BRANCH/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/bugfix-btm/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/dev-btm/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/branches/starjoin/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[bigdata][bigdata(R) is a scale-out storage and computing fabric supporting optional transactions, very high concurrency, and very high aggregate IO rates.][http://sourceforge.net/projects/bigdata][/trunk/bigdata/src/java/com/bigdata/counters/CAT.java] = 1
projectsWith[dishevelled.org][Library of various Java Swing user interface components, with emphasis on views and editors for complex data structures, like collections, sets, lists, maps, graphs, and matrices.][http://sourceforge.net/projects/dishevelled][/trunk/collect/src/main/java/org/dishevelled/collect/Maps.java] = 1
projectsWith[dishevelled.org][Library of various Java Swing user interface components, with emphasis on views and editors for complex data structures, like collections, sets, lists, maps, graphs, and matrices.][http://sourceforge.net/projects/dishevelled][/trunk/collect/src/main/java/org/dishevelled/collect/Sets.java] = 1
